var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.711,1,2.795]],["body/controllers/AppController.html",[0,2.471,1,4.037,2,2.248,3,0.707,4,0.674,5,0.494,6,4.194,7,1.004,8,1.993,9,5.31,10,4.845,11,2.206,12,4.482,13,2.299,14,2.364,15,0.016,16,1.283,17,4.845,18,1.641,19,1.392,20,0.962,21,1.712,22,4.133,23,1.712,24,2.711,25,1.015,26,1.283,27,3.765,28,2.793,29,3.88,30,4.194,31,2.633,32,3.658,33,4.194,34,4.845,35,0.674,36,0.581,37,2.364,38,2.711,39,2.793,40,4.194,41,3.765,42,2.975,43,1.51,44,4.194,45,0.012,46,0.012]],["title/injectables/AppLogger.html",[32,2.309,47,1.38]],["body/injectables/AppLogger.html",[3,0.817,4,0.47,5,0.344,7,0.7,8,1.564,15,0.016,16,1.828,18,2.273,19,1.927,20,1.372,21,2.574,23,2.281,25,0.78,26,0.895,32,2.615,35,0.47,36,0.405,43,1.053,45,0.009,46,0.009,47,1.564,48,1.737,49,2.626,50,2.127,51,3.984,52,4.12,53,4.746,54,2.461,55,3.421,56,5.287,57,4.342,58,1.737,59,3.739,60,2.98,61,4.813,62,1.194,63,3.379,64,3.379,65,3.482,66,5.588,67,4.813,68,3.379,69,4.813,70,3.379,71,3.379,72,3.379,73,4.813,74,3.379,75,4.813,76,1.567,77,4.813,78,2.882,79,4.813,80,2.626,81,3.379,82,2.925,83,2.029,84,4.166,85,1.648,86,2.075,87,2.127,88,3.379,89,6.456,90,6.456,91,4.813,92,4.813,93,3.984,94,1.827,95,3.379,96,3.379,97,2.626,98,2.127,99,3.379,100,3.379,101,2.925,102,3.379,103,3.379,104,3.379,105,3.379,106,3.379,107,3.379,108,3.379,109,3.379]],["title/modules/AppModule.html",[110,0.917,111,2.449]],["body/modules/AppModule.html",[1,4.25,2,2.69,3,0.648,4,0.618,5,0.452,15,0.016,25,1.047,26,1.176,29,4.2,30,3.844,35,0.618,36,0.532,45,0.011,46,0.011,110,1.252,111,4.566,112,1.443,113,2.446,114,3.844,115,3.844,116,3.844,117,4.795,118,4.2,119,4.795,120,4.795,121,4.2,122,3.562,123,2.56,124,2.166,125,4.441,126,2.982,127,2.563,128,4.441,129,4.441,130,3.844,131,4.441,132,4.441,133,4.441,134,4.441]],["title/injectables/AppService.html",[29,2.449,47,1.38]],["body/injectables/AppService.html",[3,0.811,4,0.773,5,0.566,7,1.152,8,2.169,9,6.426,15,0.015,16,1.472,23,1.965,25,0.773,26,1.472,29,3.849,35,0.773,36,0.666,43,1.733,45,0.013,46,0.013,47,2.169,48,2.859,51,5.088,94,1.998,135,4.812,136,5.56,137,5.56,138,5.56]],["title/controllers/AuthController.html",[0,1.711,139,3.02]],["body/controllers/AuthController.html",[0,1.776,2,2.045,3,0.643,4,0.613,5,0.449,7,0.913,8,1.875,11,2.129,12,4.352,13,2.218,14,2.15,15,0.016,16,1.167,18,1.493,19,1.266,20,1.147,21,1.558,22,3.952,23,1.558,24,2.551,25,1.011,26,1.167,27,3.425,28,2.541,31,2.396,35,0.613,36,0.528,37,2.15,38,1.948,43,1.799,45,0.011,46,0.011,83,1.859,87,2.551,139,4.103,140,3.816,141,3.816,142,2.396,143,3.14,144,4.996,145,4.408,146,4.408,147,4.493,148,4.408,149,3.816,150,4.996,151,2.901,152,2.267,153,2.267,154,3.952,155,3.816,156,3.816,157,4.408,158,4.408,159,4.408,160,4.408,161,2.901,162,1.216,163,3.425,164,4.408,165,2.396,166,4.408,167,4.408,168,3.134,169,3.134,170,3.816,171,3.816]],["title/modules/AuthModule.html",[110,0.917,117,2.795]],["body/modules/AuthModule.html",[2,2.69,3,0.648,4,0.618,5,0.452,15,0.016,25,1.047,26,1.176,35,0.618,36,0.532,43,1.384,45,0.011,46,0.011,60,3.151,62,1.569,76,2.06,110,1.252,112,1.443,113,2.446,117,5.054,121,4.2,122,3.562,123,2.56,124,2.166,126,2.982,127,2.854,130,3.844,139,4.591,143,2.166,154,4.475,155,3.844,172,3.844,173,4.441,174,3.844,175,4.795,176,4.441,177,3.966,178,4.441,179,3.45,180,5.8,181,3.157,182,4.441,183,4.441,184,4.441,185,3.157,186,3.844,187,4.441,188,3.157,189,4.441]],["title/injectables/AuthService.html",[47,1.38,154,2.609]],["body/injectables/AuthService.html",[3,0.631,4,0.601,5,0.44,7,0.896,8,1.852,15,0.016,16,1.688,18,2.16,19,1.831,20,1.266,21,2.253,23,2.014,24,2.995,25,0.98,26,1.145,35,0.601,36,0.518,37,2.109,38,2.519,39,2.492,43,1.777,45,0.011,46,0.011,47,1.852,48,2.223,58,2.223,87,2.818,143,3.11,144,4.933,147,4.853,154,3.5,156,3.743,162,1.758,165,2.35,179,3.36,190,3.743,191,4.428,192,4.324,193,3.719,194,7.375,195,4.324,196,5.7,197,4.324,198,5.7,199,4.324,200,2.655,201,3.36,202,4.324,203,4.324,204,4.324,205,4.324,206,2.845,207,4.324,208,5.7,209,4.324,210,4.324]],["title/modules/CoreModule.html",[110,0.917,118,2.449]],["body/modules/CoreModule.html",[3,0.728,4,0.694,5,0.509,15,0.016,25,1.024,26,1.322,35,0.694,36,0.598,45,0.012,46,0.012,62,2.209,76,2.316,110,1.35,112,1.622,113,2.636,118,4.245,122,3.838,123,2.877,124,2.435,126,3.214,127,2.206,177,3.066,211,4.321,212,4.321,213,5.419,214,4.992,215,3.838,216,4.857,217,6.251,218,3.879,219,4.321,220,4.857,221,4.321,222,4.321,223,4.992,224,4.992,225,4.321,226,3.214,227,4.321,228,4.321]],["title/classes/CreateUserDto.html",[36,0.509,229,2.449]],["body/classes/CreateUserDto.html",[3,0.726,4,0.692,5,0.507,7,1.031,14,3.486,15,0.016,16,1.892,20,1.419,25,0.868,28,2.87,35,0.692,36,0.596,45,0.012,46,0.012,50,2.758,94,2.305,229,3.597,230,2.87,231,4.309,232,3.504,233,4.185,234,4.485,235,3.012,236,5.401,237,4.979,238,5.401,239,4.979,240,5.401,241,4.979,242,5.401,243,4.979,244,3.868,245,3.057,246,3.539]],["title/modules/DatabaseModule.html",[110,0.917,119,2.795]],["body/modules/DatabaseModule.html",[3,0.609,4,0.581,5,0.425,15,0.016,19,1.199,20,1.106,25,0.93,26,1.105,35,0.581,36,0.5,45,0.011,46,0.011,60,3.396,62,1.968,76,1.936,110,1.202,112,1.356,119,3.664,127,2.769,162,1.728,177,3.847,185,3.958,188,3.958,200,2.563,226,3.436,235,2.461,247,4.174,248,3.613,249,2.747,250,4.819,251,2.747,252,2.863,253,4.819,254,2.863,255,4.174,256,3.958,257,4.819,258,4.819,259,2.716,260,4.819,261,3.221,262,3.243,263,3.613,264,4.326,265,4.819,266,3.419,267,3.664,268,3.209,269,3.613,270,4.174,271,4.174,272,3.664,273,2.967,274,3.613,275,4.174,276,3.613,277,3.613,278,3.613]],["title/modules/EmailHandlerModule.html",[110,0.917,279,2.795]],["body/modules/EmailHandlerModule.html",[3,0.775,4,0.739,5,0.541,15,0.015,25,0.904,26,1.407,35,0.739,36,0.637,45,0.013,46,0.013,110,1.403,112,1.727,113,2.74,122,3.99,123,3.063,124,2.593,126,3.341,215,3.99,279,5.084,280,4.6,281,4.6,282,4.6,283,4.899,284,5.315,285,5.315]],["title/injectables/EmailHandlerService.html",[47,1.38,283,2.609]],["body/injectables/EmailHandlerService.html",[3,0.85,4,0.425,5,0.311,7,0.633,8,1.453,15,0.016,16,1.543,18,1.974,19,1.782,20,1.158,21,2.059,23,1.871,24,3.035,25,0.931,26,0.809,35,0.425,36,0.366,37,1.49,38,1.35,39,3.736,43,1.65,45,0.009,46,0.009,47,1.453,48,1.57,54,1.23,58,1.57,59,2.373,60,2.843,62,1.581,66,3.872,76,1.417,85,1.49,87,2.575,94,1.744,98,1.35,101,3.872,142,1.66,143,3.474,162,0.842,165,2.431,226,2.3,252,1.57,254,1.57,268,1.76,283,2.747,286,2.643,287,4.473,288,4.473,289,3.872,290,3.054,291,4.473,292,3.576,293,3.054,294,5.294,295,4.473,296,4.082,297,2.582,298,3.054,299,2.3,300,1.875,301,4.473,302,3.359,303,3.054,304,3.872,305,3.476,306,3.872,307,3.054,308,4.113,309,3.051,310,2.01,311,1.35,312,4.473,313,4.473,314,2.643,315,1.875,316,3.054,317,3.054,318,3.054,319,3.054,320,1.875,321,3.054,322,1.875,323,3.054,324,3.054,325,3.054,326,3.054,327,3.054,328,1.76,329,3.054,330,2.944,331,2.643,332,2.373,333,2.643,334,3.054,335,4.473,336,3.054,337,3.054,338,3.054,339,3.054,340,3.872,341,4.473,342,3.054,343,4.473,344,3.054,345,3.054,346,3.054,347,3.054,348,3.18,349,2.431,350,3.476,351,4.473,352,3.054,353,4.582,354,4.473,355,3.054,356,4.473,357,3.054,358,2.075,359,2.01,360,1.76,361,3.054,362,3.054,363,3.054,364,3.054,365,2.643]],["title/interfaces/IMailAuth.html",[366,1.22,367,2.609]],["body/interfaces/IMailAuth.html",[3,0.73,4,0.696,5,0.51,7,1.037,15,0.015,20,1.244,35,0.95,45,0.012,46,0.012,50,2.767,65,2.322,94,2.386,142,2.721,162,1.974,252,2.574,254,2.574,292,2.885,297,2.442,300,3.074,302,2.885,309,2.885,311,2.212,315,3.074,320,4.396,328,2.885,349,2.721,358,2.322,359,3.294,360,2.885,366,2.056,367,4.196,368,3.294,369,3.294,370,2.885,371,2.442,372,3.559,373,3.294,374,2.442]],["title/interfaces/IMailConfig.html",[292,2.449,366,1.22]],["body/interfaces/IMailConfig.html",[3,0.703,4,0.67,5,0.491,7,0.998,15,0.015,20,1.403,35,0.934,45,0.012,46,0.012,50,2.702,65,2.236,94,2.376,142,3.838,162,1.329,252,3.631,254,3.631,292,3.524,297,2.351,300,2.959,302,2.778,309,2.778,311,2.13,315,4.336,320,2.959,328,2.778,349,2.619,358,2.236,359,3.171,360,2.778,366,2.028,367,4.336,368,3.171,369,3.171,370,3.87,371,2.351,372,3.426,373,3.171,374,2.351]],["title/interfaces/IMailOptions.html",[302,2.449,366,1.22]],["body/interfaces/IMailOptions.html",[3,0.659,4,0.628,5,0.46,7,0.936,15,0.016,20,1.454,21,2.722,35,0.906,45,0.012,46,0.012,50,2.592,65,2.096,94,2.399,142,2.456,162,1.246,252,2.323,254,2.323,292,2.604,297,3.177,300,4.233,302,3.381,309,2.604,311,1.997,315,2.775,320,2.775,328,3.973,349,3.746,358,2.096,359,2.973,360,2.604,366,1.98,367,3.602,368,2.973,369,2.973,370,2.604,371,2.204,372,4.9,373,4.536,374,3.177]],["title/interfaces/IMailResponse.html",[309,2.449,366,1.22]],["body/interfaces/IMailResponse.html",[3,0.699,4,0.667,5,0.488,7,0.993,15,0.015,20,1.4,21,2.628,35,0.932,45,0.012,46,0.012,50,2.693,65,3.269,94,2.355,142,2.605,162,1.322,252,2.465,254,2.465,292,2.763,297,2.339,300,2.944,302,2.763,309,3.512,311,2.119,315,2.944,320,2.944,328,2.763,349,2.605,358,3.269,359,4.638,360,4.062,366,2.024,367,3.741,368,3.154,369,3.154,370,2.763,371,3.267,372,3.408,373,3.154,374,2.339]],["title/injectables/JwtAuthGuard.html",[47,1.38,375,3.02]],["body/injectables/JwtAuthGuard.html",[3,0.85,4,0.811,5,0.594,15,0.015,25,0.955,26,1.543,35,0.811,36,0.698,45,0.014,46,0.014,47,2.231,48,2.997,181,4.143,375,4.882,376,5.045,377,5.829,378,3.579,379,5.829]],["title/injectables/JwtStrategy.html",[47,1.38,175,2.795]],["body/injectables/JwtStrategy.html",[3,0.726,4,0.692,5,0.507,7,1.031,8,2.027,15,0.016,16,1.652,18,1.686,19,1.43,20,0.989,21,1.759,23,1.759,25,0.948,26,1.318,35,0.692,36,0.596,43,1.552,45,0.012,46,0.012,47,2.027,48,2.56,58,3.504,143,3.325,175,4.106,181,3.539,206,3.276,233,3.057,268,2.87,378,3.057,380,4.309,381,4.849,382,4.979,383,6.24,384,4.979,385,4.979,386,4.979,387,4.979,388,4.309,389,4.309,390,3.868,391,4.979,392,4.309,393,4.979,394,4.979,395,4.979,396,4.979,397,4.979,398,4.979,399,2.706,400,4.979]],["title/interfaces/Request.html",[11,1.324,366,1.22]],["body/interfaces/Request.html",[3,0.757,4,0.722,5,0.529,7,1.076,8,2.081,11,2.397,15,0.016,16,1.375,20,1.032,23,1.835,25,0.722,35,0.722,45,0.013,46,0.013,50,2.831,162,2.092,297,3.634,311,2.295,366,1.491,378,3.934,401,4.495,402,6.947,403,5.193,404,4.977,405,3.538,406,4.554,407,2.67]],["title/guards/RequestGuard.html",[408,2.795,409,3.02]],["body/guards/RequestGuard.html",[3,0.385,4,0.367,5,0.269,7,0.547,8,1.303,11,2.177,13,2.328,15,0.016,16,1.436,18,1.837,19,1.557,20,1.077,21,1.916,23,1.715,24,1.773,25,0.888,26,0.699,31,1.434,35,0.367,36,0.316,37,1.288,38,1.166,43,2.05,45,0.008,46,0.008,47,1.303,54,1.616,58,1.357,59,2.051,60,2.645,62,1.418,65,1.861,76,1.224,83,1.113,86,1.621,87,2.977,94,1.622,151,2.64,152,3.282,153,1.357,168,2.852,226,2.495,268,1.521,297,2.368,299,2.495,358,2.849,360,3.361,366,0.758,371,2.368,374,1.288,404,3.771,405,1.288,409,2.852,410,2.051,411,2.051,412,4.012,413,4.012,414,4.693,415,2.64,416,3.473,417,2.64,418,4.213,419,3.854,420,3.473,421,2.64,422,3.473,423,3.117,424,2.464,425,1.957,426,2.063,427,3.473,428,4.693,429,2.64,430,1.876,431,4.201,432,2.285,433,2.285,434,1.876,435,1.737,436,2.285,437,3.854,438,2.286,439,2.977,440,3.117,441,2.285,442,2.285,443,2.852,444,4.213,445,2.285,446,4.137,447,4.201,448,4.201,449,4.201,450,2.285,451,4.693,452,3.117,453,3.473,454,2.285,455,2.285,456,2.64,457,2.285,458,2.64,459,2.285,460,2.285,461,2.285,462,2.285,463,2.285,464,2.285,465,2.285,466,2.285,467,2.285,468,1.621,469,3.473,470,2.285,471,2.285,472,2.285]],["title/interfaces/Response.html",[13,1.38,366,1.22]],["body/interfaces/Response.html",[3,0.634,4,0.604,5,0.443,7,0.9,8,1.858,13,2.076,15,0.016,16,1.798,18,2.165,19,1.835,20,1.269,21,2.258,23,2.399,25,0.795,35,0.604,45,0.011,46,0.011,54,2.575,83,1.832,94,2.167,151,5.035,152,3.934,153,2.234,297,3.698,311,1.92,358,2.652,366,1.248,374,3.117,378,3.511,407,2.234,439,2.527,456,4.468,458,3.762,473,3.761,474,6.391,475,5.718,476,4.345,477,6.391,478,4.345,479,5.718,480,4.345,481,5.718,482,4.345]],["title/interfaces/ResponseType.html",[366,1.22,437,3.02]],["body/interfaces/ResponseType.html",[3,0.405,4,0.386,5,0.283,7,0.575,11,1.952,13,2.11,15,0.016,20,1.244,21,2.213,24,1.227,25,0.903,26,0.735,31,1.509,35,0.386,36,0.333,37,1.355,38,1.227,43,2.082,45,0.008,46,0.008,47,1.355,50,1.843,54,1.68,60,2.034,62,0.981,65,2.766,76,1.288,83,1.171,86,1.705,87,3.02,94,1.873,151,3.661,152,3.339,153,1.428,168,2.964,226,2.574,268,1.601,297,2.442,299,2.574,311,1.227,358,3.17,360,3.85,366,0.798,371,2.714,374,1.355,404,3.889,405,1.355,409,1.974,411,2.158,414,3.609,416,2.404,418,3.239,419,2.964,420,2.404,422,2.404,423,2.158,424,1.705,425,1.355,426,1.428,427,2.404,428,3.609,431,3.609,432,2.404,433,2.404,434,1.974,435,1.828,436,2.404,437,4.238,438,2.738,439,3.164,440,4.633,441,2.404,442,2.404,443,2.964,444,4.323,445,2.404,446,4.196,447,4.333,448,4.333,449,4.333,450,2.404,451,4.815,452,3.239,453,3.609,454,2.404,455,2.404,456,2.743,457,2.404,458,2.743,459,2.404,460,2.404,461,2.404,462,2.404,463,2.404,464,2.404,465,2.404,466,2.404,467,2.404,468,1.705,469,3.609,470,2.404,471,2.404,472,2.404]],["title/controllers/TestController.html",[0,1.711,483,3.301]],["body/controllers/TestController.html",[0,2.062,2,1.711,3,0.538,4,0.513,5,0.376,7,0.764,8,1.91,11,2.374,12,4.777,13,2.475,14,3.097,15,0.016,16,1.681,18,2.151,19,1.824,20,1.261,21,2.244,22,4.5,23,2.244,24,3.189,25,0.818,26,0.977,31,2.005,32,3.45,33,3.193,35,0.513,36,0.442,37,1.8,38,1.63,42,4.238,43,2.079,45,0.01,46,0.01,52,2.265,87,1.63,439,1.63,483,3.977,484,3.193,485,5.119,486,5.119,487,5.119,488,5.119,489,3.689,490,5.119,491,3.689,492,3.689,493,5.119,494,3.689,495,3.689,496,5.119,497,3.689,498,3.689,499,5.119,500,3.689,501,3.689,502,3.689,503,3.689,504,3.689,505,3.689,506,3.689,507,3.689,508,3.689,509,3.689,510,3.689,511,3.689,512,3.689,513,3.689,514,3.689,515,3.689,516,3.689,517,3.689]],["title/modules/TestCoreModule.html",[110,0.917,518,3.301]],["body/modules/TestCoreModule.html",[3,0.803,4,0.766,5,0.561,15,0.016,25,0.992,26,1.459,35,0.766,36,0.66,45,0.013,46,0.013,62,2.347,76,2.556,110,1.434,112,1.79,127,2.435,177,3.383,216,5.16,219,4.768,221,4.768,222,4.768,225,4.768,226,3.415,227,4.768,228,4.768,518,5.16,519,5.509,520,5.509,521,5.509]],["title/modules/ThrottleModule.html",[110,0.917,120,2.795]],["body/modules/ThrottleModule.html",[3,0.753,4,0.718,5,0.526,15,0.016,25,1.007,26,1.367,35,0.718,36,0.619,45,0.013,46,0.013,60,3.38,62,1.825,76,2.395,110,1.378,112,1.677,120,4.2,126,2.655,127,2.821,177,3.92,185,3.67,188,3.67,218,4.012,522,5.163,523,5.163,524,6.383,525,6.383,526,5.163,527,4.469,528,5.163,529,5.163,530,5.163,531,4.469,532,5.163,533,2.976,534,5.163]],["title/classes/UpdateUserDto.html",[36,0.509,535,2.449]],["body/classes/UpdateUserDto.html",[3,0.753,4,0.718,5,0.526,7,1.07,14,3.38,15,0.016,16,1.835,20,1.376,25,0.888,28,2.976,35,0.718,36,0.619,45,0.013,46,0.013,50,2.821,94,2.166,230,2.976,233,4.255,234,4.559,238,5.525,240,5.525,244,4.012,245,3.171,246,3.67,371,3.114,535,3.679,536,4.469,537,4.925,538,5.163,539,6.383,540,5.163,541,5.163]],["title/entities/User.html",[162,1.172,542,2.449]],["body/entities/User.html",[3,0.659,4,0.628,5,0.46,7,0.936,14,3.571,15,0.016,16,1.939,20,1.454,25,0.816,35,0.628,36,0.703,45,0.012,46,0.012,50,2.592,85,2.204,94,2.305,162,1.618,226,3.016,232,3.349,233,3.999,234,4.286,235,2.878,261,2.323,371,2.861,399,3.54,537,4.63,542,3.381,543,3.911,544,4.519,545,4.519,546,5.934,547,4.519,548,4.519,549,4.519,550,4.519,551,4.519,552,4.519,553,4.519,554,5.866,555,3.212,556,5.077,557,4.558,558,2.775]],["title/injectables/UserDbRepository.html",[47,1.38,559,2.609]],["body/injectables/UserDbRepository.html",[3,0.474,4,0.452,5,0.331,7,0.674,8,1.521,15,0.016,16,1.808,18,2.154,19,1.827,20,1.263,21,2.248,23,2.341,24,3.296,25,0.921,26,0.861,35,0.452,36,0.39,43,2.065,45,0.009,46,0.009,47,1.521,48,1.672,58,2.821,86,1.997,87,2.069,94,2.277,98,2.069,143,3.231,162,1.754,165,2.981,191,3.638,200,1.997,206,3.61,229,3.459,232,2.821,235,2.811,259,2.284,378,2.875,392,2.814,399,3.456,446,3.685,535,3.666,558,1.997,559,2.875,560,2.814,561,3.61,562,4.052,563,3.638,564,5.195,565,4.052,566,3.638,567,3.252,568,4.052,569,3.252,570,4.052,571,3.252,572,3.252,573,4.052,574,3.252,575,4.052,576,3.252,577,4.749,578,3.252,579,3.252,580,2.814,581,2.311,582,2.311,583,2.875,584,2.814,585,3.252,586,3.252,587,3.252,588,3.252,589,3.252,590,3.252,591,3.252,592,4.682,593,4.052,594,4.052,595,4.682,596,4.682,597,3.252,598,3.252]],["title/interfaces/UserRepository.html",[366,1.22,583,2.609]],["body/interfaces/UserRepository.html",[3,0.602,4,0.574,5,0.42,7,0.855,8,1.795,15,0.016,16,1.89,18,2.349,19,1.992,20,1.378,21,2.451,23,2.522,24,3.403,25,0.925,35,0.574,45,0.011,46,0.011,94,2.341,162,1.835,191,4.293,200,2.534,206,2.716,229,3.835,232,2.122,235,2.753,311,1.824,366,1.185,399,3.385,535,3.835,558,2.534,562,4.783,563,4.293,564,5.758,565,4.783,566,4.293,568,4.783,570,4.783,573,4.783,575,4.783,577,4.783,580,3.572,581,2.933,582,2.933,583,3.393,599,3.572,600,4.127,601,4.127,602,4.127,603,4.127,604,4.127,605,4.127]],["title/controllers/UsersController.html",[0,1.711,606,2.609]],["body/controllers/UsersController.html",[0,0.879,2,1.012,3,0.318,4,0.303,5,0.222,7,0.452,8,1.124,11,2.308,12,4.676,13,2.406,14,2.903,15,0.016,16,1.576,18,2.016,19,1.709,20,1.263,21,2.103,22,4.317,23,2.103,24,3.072,25,0.906,26,0.578,27,1.695,28,1.257,31,1.185,35,0.303,36,0.261,37,1.064,38,0.964,43,2.167,45,0.007,46,0.007,83,0.92,87,2.163,94,1.902,141,1.888,142,3.355,143,3.593,149,2.995,150,3.722,151,1.435,152,1.122,153,1.122,161,3.916,162,1.186,163,2.688,165,2.9,168,2.459,169,4.23,170,5.151,171,5.151,193,2.211,200,1.339,201,1.695,229,2.821,245,1.339,246,1.551,375,1.551,399,3.455,443,1.551,535,2.478,563,2.688,566,2.688,581,1.551,582,1.551,593,2.995,606,2.124,607,1.888,608,1.994,609,3.46,610,3.46,611,3.46,612,3.46,613,3.46,614,3.46,615,2.181,616,2.181,617,4.3,618,2.181,619,2.181,620,2.181,621,2.181,622,2.181,623,2.181,624,2.181,625,2.181,626,2.181,627,2.181,628,2.181,629,2.181,630,2.181,631,2.181,632,2.181,633,3.46,634,2.181,635,2.181,636,2.181,637,2.181,638,2.181,639,1.551,640,1.888,641,2.181,642,2.64,643,2.181,644,2.181,645,3.46,646,5.951,647,2.181,648,2.181,649,2.181,650,1.888,651,1.994,652,2.181,653,3.916,654,2.181,655,2.181,656,3.46,657,1.064,658,2.181,659,2.181,660,2.181,661,1.257,662,4.894,663,2.181,664,2.181,665,4.894,666,2.181,667,2.181,668,2.181,669,2.181,670,2.181,671,2.181,672,2.181,673,2.181,674,2.181,675,2.181,676,2.181,677,4.3,678,2.181,679,2.181,680,2.181,681,2.181,682,2.181,683,2.181,684,2.181,685,2.181,686,2.995,687,2.181,688,2.181,689,2.181,690,2.181,691,2.181]],["title/modules/UsersModule.html",[110,0.917,121,2.449]],["body/modules/UsersModule.html",[2,2.885,3,0.722,4,0.689,5,0.504,15,0.016,25,1.022,26,1.311,35,0.689,36,0.593,45,0.012,46,0.012,110,1.343,112,1.609,113,2.622,121,4.386,122,3.819,123,2.854,124,2.415,126,3.197,127,2.748,193,4.064,201,3.847,215,3.819,248,5.383,249,3.258,559,3.04,606,4.175,692,4.286,693,4.286,694,4.286,695,4.951,696,4.286,697,4.951,698,4.286,699,4.286]],["title/injectables/UsersService.html",[47,1.38,193,2.184]],["body/injectables/UsersService.html",[3,0.518,4,0.494,5,0.362,7,0.736,8,1.62,15,0.016,16,1.855,18,2.31,19,1.959,20,1.355,21,2.41,23,2.41,24,3.319,25,0.974,26,0.94,35,0.494,36,0.426,38,1.57,39,2.047,43,1.795,45,0.01,46,0.01,47,1.62,48,1.826,58,2.563,94,2.294,143,3.544,162,1.881,165,3.13,193,2.563,200,2.181,229,3.6,232,1.826,235,2.76,249,2.337,399,3.13,535,3.6,559,2.181,581,2.525,582,2.525,583,3.835,584,3.074,696,3.074,700,3.074,701,6.245,702,4.985,703,4.985,704,4.315,705,3.061,706,3.061,707,3.552,708,3.552,709,4.315,710,3.552,711,4.985,712,3.552,713,4.985,714,3.552,715,4.985,716,3.552,717,4.985,718,3.552,719,4.985,720,3.552,721,3.074,722,3.552,723,3.552,724,3.552,725,3.552,726,3.552,727,3.552,728,3.552]],["title/classes/ValidateUserDto.html",[36,0.509,147,2.795]],["body/classes/ValidateUserDto.html",[3,0.782,4,0.746,5,0.546,7,1.111,14,3.187,15,0.016,16,1.73,20,1.298,25,0.909,28,3.091,35,0.746,36,0.642,45,0.013,46,0.013,50,2.887,94,2.194,147,4.299,230,3.091,232,3.623,235,3.114,236,5.655,242,5.655,244,4.166,245,3.293,246,3.812,729,4.641,730,5.362,731,5.362]],["title/contributing.html",[732,2.39,733,2.23,734,2.582]],["body/contributing.html",[4,0.748,15,0.013,43,1.676,45,0.013,46,0.013,734,3.823,735,3.557,736,3.302,737,3.302,738,4.179,739,4.179,740,3.302,741,3.823,742,3.1,743,3.823,744,3.302,745,3.823,746,4.655,747,4.179,748,4.655,749,2.923,750,3.823,751,4.179,752,4.655,753,5.665,754,3.302,755,3.539,756,4.179,757,4.179,758,3.302,759,4.655,760,4.655,761,4.332,762,4.655,763,4.179,764,4.019,765,2.268,766,5.665,767,4.179,768,4.179,769,3.302,770,3.539,771,3.193,772,4.179,773,3.539]],["title/coverage.html",[774,4.004]],["body/coverage.html",[0,2.342,1,1.999,5,0.31,6,2.63,11,0.947,13,0.987,15,0.016,20,0.604,29,1.751,32,1.651,36,0.742,45,0.009,46,0.009,47,2.228,49,2.361,98,1.343,135,2.63,139,2.16,140,2.63,147,1.999,154,1.866,162,0.838,175,1.999,190,2.63,193,1.562,213,2.16,220,2.361,229,1.751,231,2.63,245,1.866,283,1.866,286,2.63,292,1.751,302,1.751,309,1.751,366,1.97,367,1.866,368,3.826,369,3.826,375,2.16,376,2.63,380,2.63,401,2.63,408,1.999,409,2.16,411,3.463,435,1.999,437,2.16,473,2.63,483,2.361,484,2.63,535,1.751,536,2.63,542,1.751,543,2.63,559,1.866,560,2.63,583,1.866,599,2.63,606,1.866,607,2.63,608,1.751,700,2.63,729,2.63,774,2.16,775,1.751,776,3.039,777,2.63,778,8.052,779,5.814,780,4.457,781,7.767,782,5.278,783,2.63,784,6.652,785,6.686,786,5.814,787,5.278,788,2.63,789,2.63,790,2.63,791,3.168,792,3.858,793,3.039,794,3.039,795,2.63,796,2.63,797,2.63,798,2.63,799,5.787,800,2.361,801,2.361,802,2.63,803,2.63,804,2.63,805,2.361,806,3.039,807,3.039,808,3.039,809,3.039,810,3.858,811,2.63,812,2.63,813,2.16,814,2.361,815,2.361,816,2.63,817,2.63,818,2.63,819,2.63,820,2.63,821,2.63,822,2.361,823,2.63,824,2.361,825,2.63,826,2.63,827,2.63,828,2.63,829,2.63,830,3.039,831,2.361]],["title/dependencies.html",[113,2.135,832,2.094]],["body/dependencies.html",[15,0.016,26,1.243,36,0.72,45,0.012,46,0.012,76,2.178,80,3.647,83,1.979,113,1.979,152,2.414,153,2.414,179,3.647,181,3.337,218,3.647,249,3.089,266,2.883,272,3.089,304,4.063,305,3.647,308,3.647,389,5.741,390,4.671,407,3.091,434,3.337,527,4.063,555,3.337,558,2.883,833,6.633,834,4.694,835,6.012,836,4.694,837,4.063,838,4.694,839,4.694,840,3.647,841,4.694,842,4.694,843,3.647,844,4.694,845,4.694,846,4.694,847,4.694,848,4.694,849,4.694,850,4.694,851,4.694,852,4.063,853,4.694,854,4.694,855,4.694,856,4.694,857,4.694,858,4.694,859,4.694,860,4.694,861,6.012,862,4.063,863,3.647,864,4.694,865,4.694,866,4.694,867,4.694,868,4.694]],["title/miscellaneous/enumerations.html",[869,1.868,870,4.383]],["body/miscellaneous/enumerations.html",[3,0.979,7,1.162,15,0.015,45,0.013,46,0.013,49,4.36,53,5.217,54,2.705,56,5.812,57,4.773,82,5.812,83,2.832,84,5.812,299,4.017,869,2.885,870,4.857,871,5.612]],["title/miscellaneous/functions.html",[869,1.868,872,3.332]],["body/miscellaneous/functions.html",[7,1.196,15,0.014,18,1.955,19,1.658,20,1.147,21,2.04,45,0.013,46,0.013,110,1.246,426,2.968,790,4.997,792,6.732,813,4.104,869,2.968,872,3.799,873,5.773,874,5.773,875,5.773,876,5.306,877,2.968,878,5.773,879,4.104]],["title/index.html",[7,0.752,732,2.39,733,2.23]],["body/index.html",[0,0.641,4,0.628,5,0.578,11,1.828,13,1.773,15,0.014,19,0.457,45,0.005,46,0.005,51,1.131,52,1.641,54,0.641,62,1.431,78,0.818,83,0.671,85,1.304,93,1.9,98,1.527,110,0.343,112,1.467,113,1.127,124,0.776,251,1.759,259,1.976,261,0.818,266,1.641,273,1.131,296,1.047,310,1.047,322,2.122,330,1.759,331,1.377,333,1.377,405,0.776,407,0.818,408,1.759,410,1.236,419,1.131,424,0.977,425,2.386,426,2.082,438,2.192,439,0.703,531,1.377,561,2.274,642,0.977,650,1.377,651,2.095,653,2.665,657,0.776,661,0.917,733,1.641,734,1.9,735,3.186,736,0.977,737,0.977,739,1.236,741,1.9,742,0.917,744,0.977,745,2.457,747,1.236,749,2.201,754,0.977,755,1.047,758,1.641,761,0.977,764,1.641,765,2.062,769,0.977,770,1.047,771,1.686,773,1.047,774,1.131,775,1.992,813,1.131,843,1.236,869,0.818,877,0.818,879,1.9,880,2.996,881,4.05,882,2.077,883,2.603,884,1.9,885,4.034,886,1.591,887,0.977,888,1.591,889,1.047,890,3.147,891,1.641,892,1.591,893,1.591,894,1.591,895,1.131,896,1.591,897,1.591,898,1.377,899,1.591,900,2.386,901,1.591,902,1.236,903,1.131,904,1.641,905,1.591,906,1.591,907,1.591,908,1.236,909,2.673,910,3.218,911,1.591,912,2.122,913,1.591,914,1.591,915,1.591,916,1.131,917,1.236,918,1.236,919,1.641,920,1.591,921,1.591,922,1.591,923,1.377,924,3.218,925,2.686,926,1.591,927,1.591,928,1.591,929,1.377,930,0.977,931,2.673,932,2.673,933,1.591,934,1.377,935,1.591,936,1.377,937,1.591,938,1.377,939,3.8,940,1.377,941,1.377,942,1.591,943,1.591,944,1.591,945,3.084,946,1.591,947,1.591,948,1.591,949,1.591,950,1.591,951,1.377,952,1.591,953,1.9,954,1.591,955,1.591,956,2.992,957,1.377,958,1.9,959,2.313,960,2.686,961,1.591,962,1.591,963,2.457,964,1.591,965,1.591,966,1.591,967,1.591,968,2.457,969,1.236,970,1.591,971,1.591,972,3.417,973,3.35,974,1.591,975,2.334,976,2.673,977,1.591,978,2.673,979,1.591,980,1.591,981,1.591,982,3.509,983,1.236,984,1.591,985,2.201,986,2.457,987,3.421,988,3.909,989,1.236,990,4.893,991,2.673,992,1.374,993,2.673,994,1.591,995,1.591,996,1.641,997,1.591,998,1.591,999,1.777,1000,1.591,1001,1.9,1002,4.05,1003,1.591,1004,1.377,1005,2.665,1006,1.591,1007,1.591,1008,1.591,1009,2.673,1010,1.591,1011,1.591,1012,1.591,1013,1.591,1014,1.591,1015,1.591,1016,1.591,1017,1.304,1018,1.591,1019,1.591,1020,1.047,1021,1.131,1022,1.236,1023,3.353,1024,1.9,1025,1.377,1026,1.591,1027,2.313,1028,2.673,1029,2.673,1030,2.077,1031,2.274,1032,1.591,1033,1.377,1034,1.377,1035,1.236,1036,2.077,1037,0.818,1038,1.377,1039,1.377,1040,1.591,1041,1.377,1042,1.591,1043,1.131,1044,1.591,1045,3.456,1046,3.147,1047,1.591,1048,1.591,1049,1.591,1050,2.686,1051,2.313,1052,1.591,1053,1.54,1054,1.591,1055,1.591,1056,1.591,1057,1.236,1058,1.236,1059,1.591,1060,1.236,1061,3.476,1062,1.377,1063,1.591,1064,1.591,1065,1.992,1066,1.236,1067,1.591,1068,1.9,1069,4.039,1070,1.591,1071,1.236,1072,2.879,1073,1.591,1074,1.377,1075,1.591,1076,1.377,1077,1.591,1078,1.591,1079,1.377,1080,1.591,1081,2.673,1082,2.077,1083,1.641,1084,1.236,1085,2.077,1086,1.236,1087,1.591,1088,1.377,1089,1.131,1090,1.377,1091,1.591,1092,1.377,1093,1.641,1094,1.131,1095,2.673,1096,4.89,1097,1.236,1098,1.591,1099,1.591,1100,1.591,1101,1.9,1102,1.992,1103,1.591,1104,2.313,1105,1.591,1106,1.591,1107,2.673,1108,2.673,1109,0.977,1110,1.591,1111,1.591,1112,1.591,1113,2.673,1114,2.313,1115,1.591,1116,2.673,1117,1.759,1118,1.236,1119,1.377,1120,2.313,1121,2.673,1122,1.377,1123,1.591,1124,2.077,1125,1.591,1126,1.9,1127,3.456,1128,1.591,1129,1.236,1130,1.377,1131,1.377,1132,2.313,1133,1.591,1134,1.591,1135,1.377,1136,1.377,1137,1.377,1138,1.131,1139,1.591,1140,1.591,1141,4.039,1142,1.377,1143,1.131,1144,4.89,1145,3.506,1146,1.591,1147,1.236,1148,1.591,1149,1.591,1150,1.591,1151,1.591,1152,1.377,1153,1.377,1154,1.591,1155,0.864,1156,1.591,1157,1.131,1158,1.591,1159,1.591,1160,1.047,1161,1.377,1162,1.591,1163,1.591,1164,1.377,1165,1.591,1166,1.591,1167,1.236,1168,1.047,1169,1.377,1170,1.377,1171,1.591,1172,4.516,1173,4.516,1174,1.591,1175,1.591,1176,1.131,1177,1.591,1178,1.591,1179,1.377,1180,1.377,1181,1.377,1182,1.591,1183,1.591,1184,1.377,1185,2.077,1186,1.591,1187,2.673,1188,2.673,1189,1.591,1190,1.591,1191,1.377,1192,1.591,1193,1.591,1194,1.236,1195,1.591,1196,1.591,1197,1.591,1198,1.591,1199,1.236,1200,2.673,1201,0.917,1202,1.591,1203,1.591,1204,1.591,1205,1.591,1206,2.673,1207,1.591,1208,1.131,1209,1.236,1210,1.591,1211,2.992,1212,1.131,1213,1.131,1214,1.759,1215,1.131,1216,1.591,1217,1.377,1218,1.377,1219,0.738,1220,1.047,1221,0.917,1222,1.591,1223,0.977,1224,1.591,1225,1.591,1226,0.917,1227,1.047,1228,1.591,1229,1.591,1230,1.236,1231,1.591,1232,0.977,1233,1.236,1234,2.077,1235,1.047,1236,1.047,1237,1.236,1238,1.131,1239,1.236,1240,1.759,1241,1.377,1242,1.377,1243,1.236,1244,1.591,1245,1.591,1246,1.591,1247,1.236,1248,1.591,1249,1.591,1250,1.591,1251,1.591,1252,1.591,1253,1.591,1254,1.591,1255,1.591,1256,3.456,1257,1.377,1258,1.591,1259,1.591,1260,1.591,1261,1.236]],["title/license.html",[732,2.39,733,2.23,1262,2.822]],["body/license.html",[4,0.847,5,0.546,15,0.007,16,0.404,19,0.964,25,0.212,36,0.183,45,0.005,46,0.005,78,0.785,124,0.745,261,0.785,311,0.675,314,1.322,328,1.489,332,1.187,348,2.805,405,2.336,407,1.328,418,1.187,423,1.187,438,1.415,446,0.938,533,0.88,542,3.329,642,2.061,653,1.005,657,0.745,740,0.938,742,0.88,743,3.136,749,1.824,761,0.938,765,0.644,767,1.187,775,1.934,887,1.586,889,1.005,890,1.187,900,2.817,902,2.007,903,1.836,904,0.938,930,0.938,968,1.086,989,1.187,999,2.029,1033,2.236,1034,1.322,1037,1.328,1039,1.322,1043,1.086,1053,0.88,1065,0.88,1083,0.938,1084,1.187,1088,4.833,1089,2.805,1092,2.905,1093,0.938,1102,1.934,1109,0.938,1120,1.322,1129,1.187,1143,1.086,1147,4.339,1152,1.322,1155,0.83,1168,1.005,1184,1.322,1201,0.88,1208,4.809,1209,3.428,1212,1.086,1221,0.88,1241,2.905,1257,1.322,1262,5.739,1263,3.946,1264,3.356,1265,1.527,1266,1.527,1267,1.527,1268,5.584,1269,6.219,1270,3.946,1271,4.412,1272,1.527,1273,6.439,1274,4.999,1275,1.527,1276,1.086,1277,1.187,1278,5.776,1279,6.219,1280,4.145,1281,2.583,1282,1.527,1283,4.412,1284,1.527,1285,1.527,1286,2.805,1287,1.527,1288,4.339,1289,3.946,1290,2.236,1291,2.583,1292,1.527,1293,3.356,1294,2.583,1295,2.583,1296,1.527,1297,1.187,1298,4.111,1299,2.597,1300,2.583,1301,4.145,1302,1.527,1303,2.583,1304,1.527,1305,1.527,1306,1.322,1307,1.527,1308,1.527,1309,1.527,1310,1.527,1311,1.527,1312,3.356,1313,2.583,1314,5.383,1315,1.322,1316,4.789,1317,3.946,1318,2.236,1319,1.322,1320,1.527,1321,1.527,1322,1.527,1323,2.236,1324,1.527,1325,1.322,1326,1.322,1327,6.394,1328,3.356,1329,2.236,1330,1.527,1331,2.007,1332,1.527,1333,0.83,1334,2.583,1335,6.695,1336,1.527,1337,1.527,1338,1.527,1339,1.527,1340,1.527,1341,1.527,1342,2.583,1343,2.236,1344,2.607,1345,1.527,1346,1.527,1347,1.322,1348,3.946,1349,1.527,1350,2.583,1351,3.946,1352,2.236,1353,1.527,1354,4.412,1355,2.236,1356,1.527,1357,2.607,1358,1.322,1359,1.527,1360,1.527,1361,1.527,1362,2.583,1363,1.527,1364,1.527,1365,2.607,1366,1.527,1367,1.527,1368,3.356,1369,1.527,1370,1.527,1371,1.527,1372,3.946,1373,5.776,1374,1.322,1375,1.527,1376,2.583,1377,3.811,1378,3.356,1379,2.583,1380,2.583,1381,2.583,1382,2.583,1383,2.607,1384,2.583,1385,3.356,1386,2.583,1387,2.583,1388,2.583,1389,2.236,1390,1.527,1391,2.583,1392,2.236,1393,1.187,1394,1.527,1395,4.412,1396,5.1,1397,3.356,1398,2.236,1399,2.583,1400,2.583,1401,1.527,1402,3.356,1403,2.583,1404,1.527,1405,1.527,1406,1.527,1407,3.356,1408,1.527,1409,1.527,1410,1.527,1411,2.583,1412,2.007,1413,1.527,1414,1.527,1415,1.527,1416,1.527,1417,1.527,1418,1.527,1419,1.527,1420,2.583,1421,1.527,1422,1.527,1423,1.322,1424,1.527,1425,1.527,1426,1.527,1427,3.819,1428,1.187,1429,1.322,1430,1.527,1431,2.905,1432,1.322,1433,1.527,1434,1.527,1435,5.361,1436,1.527,1437,1.322,1438,1.527,1439,1.527,1440,3.946,1441,2.583,1442,2.805,1443,1.527,1444,1.322,1445,1.527,1446,1.005,1447,1.527,1448,3.356,1449,1.187,1450,1.527,1451,1.527,1452,1.527,1453,1.527,1454,1.527,1455,2.236,1456,1.527,1457,1.527,1458,1.217,1459,1.527,1460,1.527,1461,1.322,1462,1.527,1463,1.527,1464,3.416,1465,1.527,1466,1.527,1467,1.527,1468,1.527,1469,1.527,1470,1.527,1471,1.527,1472,1.187,1473,1.322,1474,2.583,1475,1.527,1476,1.527,1477,2.583,1478,1.527,1479,1.527,1480,1.527,1481,1.527,1482,1.527,1483,1.187,1484,1.527,1485,1.322,1486,1.527,1487,3.946,1488,3.356,1489,3.356,1490,3.356,1491,2.583,1492,3.356,1493,2.583,1494,2.583,1495,2.583,1496,1.187,1497,1.527,1498,1.527,1499,1.322,1500,1.527,1501,1.527,1502,1.527,1503,2.583,1504,1.527,1505,1.527,1506,1.322,1507,1.527,1508,4.412,1509,1.322,1510,1.527,1511,1.527,1512,1.527,1513,1.527,1514,1.527,1515,1.527,1516,1.527,1517,1.527,1518,4.412,1519,1.527,1520,1.527,1521,1.527,1522,1.322,1523,1.527,1524,1.527,1525,1.527,1526,1.527,1527,1.527,1528,1.527,1529,1.527,1530,1.527,1531,1.527,1532,1.322,1533,1.527,1534,1.527,1535,3.356,1536,1.527,1537,1.527,1538,1.527,1539,2.583,1540,1.527,1541,1.322,1542,1.527,1543,1.527,1544,1.527,1545,1.527,1546,1.322,1547,1.527,1548,1.527,1549,1.527,1550,1.527,1551,1.527,1552,1.527,1553,1.322,1554,1.527,1555,1.322,1556,2.583,1557,2.583,1558,1.527,1559,1.322,1560,1.187,1561,1.527,1562,1.527,1563,1.527,1564,1.527,1565,1.527,1566,0.421,1567,1.527,1568,1.527,1569,1.527,1570,1.527,1571,1.527,1572,1.527,1573,1.527,1574,1.527,1575,1.086,1576,1.527,1577,1.527]],["title/classes/mockRequest.html",[36,0.509,822,3.301]],["body/classes/mockRequest.html",[3,0.816,4,0.778,5,0.57,7,1.159,8,2.178,11,1.744,15,0.016,16,1.481,23,1.977,25,0.778,31,3.04,35,0.778,36,0.67,43,1.744,45,0.013,46,0.013,86,4.116,230,3.224,297,3.27,299,2.876,468,3.435,821,4.842,822,5.208,1578,5.208,1579,5.594]],["title/classes/mockResponse.html",[36,0.509,824,3.301]],["body/classes/mockResponse.html",[3,0.736,4,0.702,5,0.514,7,1.046,8,2.045,13,1.64,15,0.016,16,1.902,23,2.537,25,0.702,31,2.743,35,0.702,36,0.605,43,2.238,45,0.012,46,0.012,54,2.893,86,3.865,230,2.91,358,3.331,456,4.725,458,4.725,823,4.369,824,4.891,1578,4.891,1580,5.048,1581,5.048,1582,5.048,1583,5.048,1584,5.048,1585,5.048,1586,5.048,1587,5.048]],["title/modules.html",[112,1.83]],["body/modules.html",[15,0.013,45,0.013,46,0.013,111,3.205,112,1.806,117,3.659,118,3.205,119,3.659,120,3.659,121,3.205,279,3.659,518,4.32,904,4.395,1201,4.377,1588,7.594,1589,7.594,1590,7.864,1591,7.158]],["title/overview.html",[1592,4.004]],["body/overview.html",[2,2.06,15,0.015,29,3.723,45,0.011,46,0.011,48,2.283,111,4.532,112,1.443,113,2.446,114,3.844,115,3.844,116,3.844,117,5.009,118,3.947,119,4.25,120,4.25,121,4.278,122,3.562,123,2.56,124,2.166,154,3.966,172,3.844,174,3.844,175,4.25,193,3.817,211,3.844,212,3.844,213,4.868,230,2.56,261,2.283,279,4.675,280,3.844,281,3.844,282,3.844,283,4.558,311,1.963,408,2.922,657,2.829,692,3.844,693,3.844,694,3.844,1232,2.727,1238,3.157,1592,3.157,1593,5.019]],["title/miscellaneous/variables.html",[869,1.868,1001,3.6]],["body/miscellaneous/variables.html",[7,0.27,11,0.407,12,1.386,13,1.532,15,0.016,19,0.375,20,1.307,22,0.801,32,1.227,43,2.028,45,0.004,46,0.004,60,1.101,62,1.256,65,0.605,78,2.065,83,0.55,85,3.243,87,3.281,94,1.492,97,1.014,98,1.775,110,0.282,111,0.752,127,0.577,142,1.621,143,2.433,152,2.963,161,1.485,162,1.628,165,3.446,169,1.605,213,1.605,220,1.754,226,1.534,232,1.828,233,2.183,234,2.339,235,2.398,245,1.386,251,0.859,252,0.671,254,0.671,256,0.928,259,0.637,261,0.671,264,1.014,268,1.301,296,2.339,299,3.45,348,1.605,349,2.948,353,1.129,358,0.605,370,1.301,371,0.637,374,0.637,390,2.762,399,2.563,405,2.301,426,2.261,435,1.963,438,1.854,439,2.715,446,0.801,452,1.014,468,3.703,537,2.121,594,1.954,608,2.534,639,0.928,642,2.896,651,1.047,653,2.893,657,1.455,661,1.719,686,1.954,706,1.832,740,1.386,765,0.55,775,0.752,783,1.129,788,1.129,789,1.954,795,1.129,796,1.954,797,1.129,798,1.954,799,1.129,800,3.416,801,2.318,802,3.077,803,3.077,804,3.077,805,2.762,810,1.129,811,1.129,812,1.954,814,1.014,815,1.754,816,1.129,817,1.954,818,1.129,819,1.954,820,1.954,825,1.129,826,1.954,827,1.129,828,1.954,829,1.129,843,1.014,869,0.671,876,2.318,912,0.801,923,1.954,930,0.801,936,1.129,983,1.014,985,1.227,1001,0.928,1020,1.485,1023,0.709,1046,2.318,1094,2.121,1126,2.121,1219,1.047,1299,0.859,1325,1.129,1398,1.954,1449,3.121,1483,1.014,1485,1.129,1594,4.716,1595,1.305,1596,1.305,1597,1.305,1598,1.305,1599,2.257,1600,1.305,1601,1.305,1602,1.305,1603,1.305,1604,1.305,1605,1.305,1606,1.305,1607,3.077,1608,3.077,1609,3.077,1610,2.257,1611,3.476,1612,2.257,1613,3.806,1614,2.257,1615,1.305,1616,3.077,1617,2.318,1618,1.954,1619,2.983,1620,1.305,1621,1.305,1622,2.257,1623,1.305,1624,2.257,1625,1.305,1626,1.305,1627,2.257,1628,2.762,1629,4.696,1630,3.077,1631,2.257,1632,2.257,1633,2.257,1634,2.257,1635,4.016,1636,1.305,1637,1.305,1638,1.305,1639,1.014,1640,1.305,1641,4.082,1642,1.129,1643,4.016,1644,1.014,1645,1.305,1646,1.305,1647,1.305,1648,1.305,1649,1.305,1650,2.257,1651,2.257,1652,1.305,1653,1.129,1654,2.582,1655,2.582,1656,1.305,1657,1.129,1658,1.129,1659,1.129,1660,1.305,1661,1.305,1662,1.305,1663,1.305,1664,2.983,1665,2.257,1666,1.305,1667,1.305,1668,1.305,1669,1.305,1670,1.305,1671,1.305,1672,1.605,1673,4.716,1674,1.305,1675,3.555,1676,1.305,1677,1.305,1678,1.305,1679,1.305,1680,4.397,1681,1.305,1682,1.305,1683,1.305,1684,1.305,1685,1.305,1686,1.305,1687,1.305,1688,1.129,1689,1.305,1690,1.305,1691,1.305,1692,1.305,1693,1.305,1694,1.305,1695,1.305,1696,1.305,1697,1.305,1698,1.305,1699,1.129,1700,1.305,1701,1.305,1702,1.305,1703,4.716,1704,1.305,1705,1.305,1706,1.305,1707,1.305,1708,4.397,1709,4.397,1710,4.397,1711,4.397,1712,1.305,1713,4.397,1714,4.716,1715,4.397,1716,4.016,1717,3.555,1718,2.257,1719,1.305,1720,1.305,1721,1.305,1722,1.305,1723,1.305,1724,1.305,1725,1.305,1726,1.305,1727,1.305,1728,1.305,1729,1.305,1730,1.305,1731,1.305,1732,1.014,1733,1.305,1734,1.305,1735,1.305,1736,1.305,1737,1.305,1738,1.305,1739,1.305,1740,1.305,1741,1.305,1742,1.305,1743,1.305,1744,1.305,1745,1.305,1746,1.305,1747,2.983,1748,2.983,1749,1.954,1750,1.305,1751,1.305,1752,2.983,1753,2.983,1754,1.305,1755,1.305,1756,2.983,1757,1.305,1758,1.305,1759,1.305,1760,1.129,1761,1.305,1762,1.129,1763,1.305,1764,1.129,1765,1.129,1766,1.305,1767,1.305,1768,1.305,1769,1.129,1770,1.129,1771,1.305,1772,1.305,1773,2.983,1774,2.983,1775,1.305]],["title/additional-documentation/contribution.html",[743,2.582,1458,1.002,1566,1.002]],["body/additional-documentation/contribution.html",[4,0.748,15,0.013,43,1.676,45,0.013,46,0.013,734,3.823,735,3.557,736,3.302,737,3.302,738,4.179,739,4.179,740,3.302,741,3.823,742,3.1,743,3.823,744,3.302,745,3.823,746,4.655,747,4.179,748,4.655,749,2.923,750,3.823,751,4.179,752,4.655,753,5.665,754,3.302,755,3.539,756,4.179,757,4.179,758,3.302,759,4.655,760,4.655,761,4.332,762,4.655,763,4.179,764,4.019,765,2.268,766,5.665,767,4.179,768,4.179,769,3.302,770,3.539,771,3.193,772,4.179,773,3.539]],["title/additional-documentation/contribution/bug-reports.html",[769,1.948,770,2.087,1458,0.875,1566,0.875]],["body/additional-documentation/contribution/bug-reports.html",[15,0.014,45,0.012,46,0.012,161,3.205,438,2.595,561,4.05,750,3.463,761,4.49,765,2.054,769,4.656,770,4.44,900,2.376,916,3.463,917,3.785,945,2.647,986,3.463,987,3.205,999,2.505,1020,3.205,1066,4.783,1138,3.463,1145,4.216,1185,4.783,1333,3.345,1344,4.783,1347,4.216,1389,5.328,1496,3.785,1560,3.785,1776,4.871,1777,4.871,1778,3.463,1779,4.871,1780,4.216,1781,4.871,1782,4.216,1783,6.155,1784,4.871,1785,4.216,1786,4.216,1787,4.871,1788,4.871,1789,4.871,1790,4.871,1791,4.871,1792,4.216,1793,4.871,1794,2.991,1795,6.155,1796,4.871,1797,4.871,1798,2.505,1799,4.871,1800,3.463,1801,4.871,1802,4.216,1803,3.463,1804,4.871,1805,4.871,1806,4.871,1807,4.216,1808,4.871,1809,4.871,1810,4.216]],["title/additional-documentation/contribution/features-requests.html",[764,1.948,771,1.547,1458,0.875,1566,0.875]],["body/additional-documentation/contribution/features-requests.html",[15,0.013,45,0.013,46,0.013,124,2.772,430,4.039,533,3.275,735,3.088,736,3.489,737,3.489,738,4.415,742,3.275,755,3.739,771,3.3,953,5.135,1020,3.739,1031,3.739,1118,4.415,1132,4.918,1242,4.918,1299,3.739,1810,4.918,1811,5.682,1812,5.682,1813,3.489,1814,5.682,1815,5.682,1816,5.682,1817,4.918,1818,5.682,1819,4.918,1820,4.918]],["title/additional-documentation/contribution/pull-requests.html",[771,1.547,773,2.087,1458,0.875,1566,0.875]],["body/additional-documentation/contribution/pull-requests.html",[11,1.619,15,0.013,42,2.313,45,0.01,46,0.01,51,2.677,65,1.747,98,2.295,350,2.926,406,2.677,438,2.189,640,3.26,653,2.478,735,3.941,736,3.649,744,2.313,750,2.677,754,2.313,755,2.478,758,2.313,763,2.926,764,3.188,771,2.533,772,2.926,773,4.571,774,2.677,900,1.837,916,3.691,940,3.26,941,3.26,945,2.047,953,3.691,985,2.047,986,3.691,988,5.144,992,3.729,1021,3.691,1031,3.417,1037,1.936,1065,2.171,1071,2.926,1109,2.313,1129,2.926,1219,2.409,1220,2.478,1235,3.417,1262,4.034,1280,3.26,1288,2.926,1298,2.313,1301,3.26,1315,3.26,1327,4.494,1343,3.26,1352,3.26,1432,3.26,1483,2.926,1496,2.926,1546,3.26,1575,2.677,1617,2.926,1778,2.677,1785,3.26,1786,5.816,1794,2.313,1798,1.936,1800,2.677,1813,2.313,1817,3.26,1821,3.766,1822,3.766,1823,2.926,1824,3.766,1825,2.926,1826,3.766,1827,3.766,1828,4.494,1829,3.766,1830,3.766,1831,2.926,1832,3.26,1833,3.766,1834,3.766,1835,3.26,1836,3.26,1837,2.926,1838,3.26,1839,5.192,1840,5.192,1841,3.766,1842,3.766,1843,3.766,1844,3.766,1845,3.766,1846,3.766,1847,3.26,1848,3.26,1849,3.766,1850,3.766,1851,6.406,1852,2.926,1853,3.766,1854,5.192,1855,5.192,1856,3.766,1857,3.766,1858,5.192,1859,3.766,1860,5.192,1861,6.947,1862,3.766,1863,4.494,1864,5.192,1865,5.943,1866,3.26,1867,2.926,1868,4.034,1869,3.766,1870,3.766,1871,3.766,1872,3.766,1873,3.766,1874,3.766,1875,5.943,1876,3.766,1877,3.766,1878,5.192,1879,3.766]],["title/additional-documentation/modules.html",[112,1.18,1458,1.002,1566,1.002]],["body/additional-documentation/modules.html",[11,2.085,13,2.173,15,0.013,45,0.013,46,0.013,52,4.108,110,1.204,112,1.812,232,2.868,259,3.264,310,3.67,330,3.67,425,2.721,651,2.587,959,4.827,986,3.964,999,2.868,1023,3.031,1117,3.67,1130,4.827,1179,4.827,1215,3.964,1226,3.215,1227,3.67,1230,4.333,1297,4.333,1798,2.868,1880,3.67,1881,3.67,1882,4.827,1883,5.577,1884,5.577,1885,3.425,1886,4.827,1887,4.827,1888,5.577]],["title/additional-documentation/modules/logger.html",[52,2.23,1458,1.002,1566,1.002]],["body/additional-documentation/modules/logger.html",[3,0.896,5,0.495,15,0.013,25,0.676,32,3.339,39,2.8,41,3.775,42,2.983,45,0.012,46,0.012,52,4.653,53,3.775,54,1.957,55,3.453,57,3.453,58,2.498,78,3.159,80,3.775,85,2.37,93,4.791,110,1.529,118,2.8,127,2.147,348,3.453,651,2.254,735,2.64,791,3.453,832,2.8,872,3.197,883,2.8,919,2.983,930,2.983,972,2.37,1004,4.205,1017,2.37,1065,3.542,1072,4.368,1093,2.983,1126,3.453,1138,3.453,1201,2.8,1214,3.197,1219,2.254,1442,3.453,1672,3.453,1798,2.498,1880,4.043,1881,4.043,1885,2.983,1889,3.775,1890,4.858,1891,3.775,1892,5.834,1893,4.205,1894,4.858,1895,4.858,1896,3.453,1897,3.453,1898,4.205,1899,4.858,1900,4.858,1901,4.858,1902,4.858,1903,4.858,1904,4.858,1905,4.858,1906,4.858]],["title/additional-documentation/modules/request-response.html",[11,0.989,13,1.031,1458,0.875,1566,0.875]],["body/additional-documentation/modules/request-response.html",[0,1.651,1,2.697,11,2.221,12,3.377,13,2.575,15,0.015,18,2.247,20,1.233,22,2.517,24,1.811,25,0.765,29,3.17,32,2.989,35,0.57,36,0.491,37,1.999,38,1.811,39,2.362,40,3.548,41,3.185,42,2.517,43,1.278,44,3.548,45,0.011,46,0.011,54,2.501,83,2.618,85,1.999,98,1.811,112,1.332,152,3.853,153,3.192,358,2.551,366,1.177,405,1.999,408,3.619,424,2.517,438,3.16,439,3.148,440,3.185,456,3.619,458,3.619,468,2.517,651,3.078,791,5.064,877,2.107,904,2.517,1017,1.999,1065,3.578,1117,2.697,1131,5.743,1212,2.914,1213,2.914,1214,3.619,1215,2.914,1219,2.88,1458,1.13,1592,2.914,1628,3.185,1896,2.914,1907,5.373,1908,5.373,1909,6.208,1910,4.099,1911,4.099]],["title/additional-documentation/modules/mailer.html",[310,2.39,1458,1.002,1566,1.002]],["body/additional-documentation/modules/mailer.html",[2,1.386,5,0.677,15,0.014,16,0.791,18,1.012,25,0.416,35,0.727,36,0.626,37,1.458,38,1.321,45,0.009,46,0.009,62,1.056,78,2.264,85,1.458,110,1.586,113,1.26,118,1.722,121,1.722,126,2.264,127,1.946,162,0.824,165,2.393,193,1.537,215,1.835,232,3.509,235,1.321,252,1.537,254,1.537,256,2.124,273,2.124,279,3.795,283,3.95,289,3.811,299,2.264,300,1.835,305,3.421,306,4.524,308,4.998,310,4.046,315,1.835,320,1.835,330,4.728,349,2.841,426,1.537,438,1.26,533,1.722,606,1.835,608,2.538,698,2.587,705,3.541,749,3.134,754,1.835,765,1.26,791,3.716,832,2.538,877,1.537,880,1.722,883,1.722,891,1.835,900,2.148,902,2.322,903,2.124,912,1.835,924,2.897,929,2.587,960,2.322,972,2.813,975,3.833,987,1.966,999,1.537,1005,2.897,1017,3.329,1020,1.966,1021,3.13,1022,2.322,1030,4.062,1037,2.264,1066,2.322,1068,3.716,1086,2.322,1093,3.776,1102,1.722,1109,1.835,1122,3.811,1141,2.322,1160,1.966,1168,1.966,1201,3.013,1209,2.322,1219,2.042,1221,2.538,1276,2.124,1298,1.835,1358,2.587,1412,2.322,1442,2.124,1472,2.322,1672,2.124,1794,2.703,1798,1.537,1800,3.13,1803,2.124,1823,2.322,1852,2.322,1885,1.835,1887,4.524,1889,2.322,1891,2.322,1896,2.124,1897,2.124,1898,2.587,1912,3.421,1913,2.587,1914,2.988,1915,2.322,1916,2.988,1917,2.988,1918,2.587,1919,2.988,1920,2.988,1921,2.587,1922,2.988,1923,2.587,1924,2.587,1925,2.322,1926,2.988,1927,2.988,1928,2.988,1929,2.988,1930,1.966,1931,2.988,1932,2.988,1933,2.988,1934,2.988,1935,2.988,1936,2.988,1937,4.524,1938,4.403,1939,4.403,1940,2.988,1941,2.988,1942,2.988,1943,2.988,1944,2.322,1945,2.988,1946,2.988,1947,4.403,1948,2.988,1949,2.988,1950,2.988,1951,2.988,1952,2.988,1953,2.988,1954,2.988,1955,2.322,1956,2.587,1957,2.988,1958,2.322,1959,2.988,1960,2.988,1961,2.988,1962,2.988,1963,2.988,1964,4.403,1965,4.403,1966,2.988,1967,2.988,1968,2.988,1969,4.403,1970,2.587,1971,2.988,1972,2.587,1973,3.13,1974,2.587,1975,2.988,1976,4.403,1977,2.988,1978,2.988,1979,2.988,1980,2.988,1981,2.988,1982,2.988]],["title/additional-documentation/modules/database.html",[259,1.772,1458,1.002,1566,1.002]],["body/additional-documentation/modules/database.html",[2,0.761,13,0.533,15,0.015,19,1.015,20,1.048,25,0.382,35,0.228,36,0.197,38,0.725,39,0.946,45,0.009,46,0.005,54,0.661,58,0.844,60,2.015,62,0.969,83,0.692,85,2.015,94,1.487,98,1.212,110,0.763,112,0.533,124,1.338,126,0.844,127,1.826,161,1.08,162,1.267,163,1.275,177,1.685,185,1.95,188,2.513,193,0.844,226,2.363,233,1.008,234,1.08,235,1.826,249,1.805,250,2.375,251,3.471,252,2.363,253,2.375,254,2.555,256,2.937,257,2.375,258,2.375,259,3.627,260,2.375,261,2.555,262,1.275,263,1.42,264,3.21,265,2.375,266,1.685,267,1.805,268,2.038,272,4.008,274,1.42,276,2.375,277,2.375,278,2.375,322,2.822,350,1.275,370,0.946,371,1.338,373,1.805,381,1.275,399,0.892,405,2.242,406,1.167,407,2.124,425,1.724,430,1.167,439,2.941,446,1.685,533,0.946,537,1.167,542,0.946,546,2.747,556,1.42,557,1.275,558,2.171,559,1.008,583,1.008,606,1.008,608,1.581,642,1.008,651,1.273,699,1.42,704,2.375,705,2.171,706,1.685,709,1.42,721,1.42,745,1.167,761,1.008,764,1.008,765,1.938,768,2.747,777,3.576,831,1.275,832,1.581,872,1.08,877,1.411,883,3.04,884,1.167,885,1.95,887,1.685,890,2.132,891,1.008,895,1.167,900,3.04,903,1.167,904,1.008,908,1.275,912,1.008,930,1.008,960,1.275,963,1.167,968,1.95,972,1.724,975,3.187,985,0.892,996,1.008,999,0.844,1001,1.167,1005,1.08,1017,0.801,1022,2.132,1037,0.844,1038,1.42,1053,0.946,1057,1.275,1065,0.946,1068,1.167,1071,1.275,1083,1.008,1086,1.275,1090,1.42,1093,1.685,1109,2.171,1117,1.805,1118,2.132,1119,2.375,1124,1.275,1126,1.167,1136,1.42,1138,1.167,1147,1.275,1155,2.498,1157,1.95,1160,1.08,1180,3.576,1201,2.649,1214,1.805,1218,1.42,1219,0.761,1220,1.08,1247,1.275,1261,1.275,1274,1.42,1286,1.167,1298,1.008,1299,1.08,1319,1.42,1323,1.42,1326,2.375,1331,1.275,1333,0.892,1344,1.275,1357,2.132,1365,1.275,1374,1.42,1377,1.167,1393,1.275,1412,1.275,1427,2.375,1429,1.42,1442,1.167,1446,2.326,1455,1.42,1506,2.375,1522,1.42,1532,2.375,1541,1.42,1560,1.275,1566,0.453,1575,2.513,1617,2.132,1628,1.275,1644,3.571,1657,1.42,1792,2.375,1798,1.411,1803,2.513,1807,1.42,1813,1.008,1825,1.275,1831,2.132,1835,3.06,1866,1.42,1880,1.805,1881,1.805,1882,1.42,1885,1.008,1886,2.375,1908,1.42,1912,1.275,1923,1.42,1925,2.132,1930,1.08,1937,1.42,1973,1.167,1983,1.42,1984,2.744,1985,1.42,1986,1.275,1987,2.375,1988,1.641,1989,5.274,1990,5.745,1991,3.978,1992,2.744,1993,1.641,1994,2.744,1995,1.641,1996,3.576,1997,1.641,1998,1.167,1999,1.641,2000,3.06,2001,2.375,2002,2.375,2003,2.744,2004,1.641,2005,1.641,2006,1.641,2007,1.42,2008,1.641,2009,1.641,2010,1.641,2011,1.641,2012,1.641,2013,1.641,2014,1.641,2015,1.42,2016,1.641,2017,1.641,2018,1.641,2019,1.641,2020,1.641,2021,1.641,2022,1.641,2023,1.641,2024,2.132,2025,2.744,2026,2.744,2027,1.641,2028,1.641,2029,2.744,2030,1.641,2031,1.641,2032,1.641,2033,1.641,2034,1.641,2035,1.641,2036,1.641,2037,1.641,2038,1.641,2039,1.641,2040,1.42,2041,1.641,2042,1.641,2043,4.969,2044,5.234,2045,2.744,2046,3.532,2047,2.747,2048,1.641,2049,3.06,2050,1.641,2051,1.641,2052,1.641,2053,3.978,2054,1.641,2055,4.596,2056,1.275,2057,1.42,2058,1.641,2059,2.744,2060,1.641,2061,1.641,2062,3.978,2063,1.641,2064,1.641,2065,1.641,2066,3.571,2067,1.275,2068,1.641,2069,1.641,2070,1.42,2071,4.969,2072,4.969,2073,1.275,2074,2.744,2075,4.969,2076,2.744,2077,1.641,2078,1.641,2079,2.744,2080,2.744,2081,1.641,2082,1.641,2083,2.375,2084,1.641,2085,1.42,2086,1.641,2087,1.641,2088,1.641,2089,1.641,2090,1.641,2091,1.641,2092,1.42,2093,2.132,2094,1.641,2095,1.641,2096,1.641,2097,1.641,2098,1.641,2099,1.641,2100,1.641,2101,1.641,2102,1.641,2103,1.641,2104,1.42,2105,1.641,2106,1.641,2107,2.375,2108,1.167,2109,1.42,2110,2.744,2111,1.641,2112,1.641,2113,1.641,2114,1.641,2115,1.641,2116,1.42,2117,1.641,2118,1.641,2119,1.641,2120,1.641,2121,1.641,2122,1.641,2123,1.641,2124,4.969,2125,3.535,2126,1.641,2127,1.641,2128,1.641,2129,1.641,2130,1.641,2131,1.641,2132,1.641,2133,1.641,2134,1.641,2135,1.641,2136,1.641,2137,2.375,2138,1.641,2139,1.42,2140,1.641,2141,1.641,2142,1.641,2143,1.641,2144,1.641,2145,1.641,2146,1.641,2147,1.641,2148,1.641,2149,1.641,2150,1.641,2151,1.275,2152,1.42,2153,1.641,2154,1.641,2155,1.641,2156,1.641,2157,1.641,2158,2.744,2159,1.641,2160,1.42,2161,1.641,2162,1.641,2163,2.744,2164,1.275,2165,1.641,2166,1.641,2167,1.641,2168,1.641,2169,1.275,2170,1.42,2171,1.641,2172,1.641,2173,1.641]],["title/additional-documentation/modules/pattern.html",[1226,2.094,1458,1.002,1566,1.002]],["body/additional-documentation/modules/pattern.html",[0,1.204,8,0.971,11,0.932,15,0.013,16,1.703,18,1.012,25,0.416,36,0.358,45,0.009,46,0.009,93,2.124,110,0.951,111,1.722,112,0.971,162,1.214,230,2.538,259,2.813,261,2.264,311,1.321,366,1.265,405,2.148,419,2.124,426,1.537,438,2.432,439,2.717,533,1.722,542,3.013,546,2.322,557,2.322,558,3.541,561,4.491,608,1.722,651,2.042,657,1.458,661,1.722,735,1.624,737,1.835,740,2.703,757,2.322,775,1.722,831,2.322,877,1.537,879,3.13,883,3.013,884,3.13,889,1.966,900,1.458,908,2.322,918,4.777,919,2.703,939,2.322,968,2.124,989,2.322,999,1.537,1005,4.232,1017,1.458,1023,2.393,1053,1.722,1068,2.124,1083,1.835,1089,2.124,1093,1.835,1097,2.322,1102,1.722,1117,1.966,1143,2.124,1160,3.44,1167,4.481,1168,2.897,1176,3.716,1212,2.124,1213,3.716,1219,2.425,1221,1.722,1223,1.835,1226,2.538,1232,1.835,1236,4.046,1276,2.124,1286,4.852,1318,3.811,1333,1.624,1357,2.322,1365,2.322,1555,3.811,1778,2.124,1780,2.587,1794,1.835,1798,2.688,1823,2.322,1825,2.322,1828,2.587,1836,2.587,1848,3.811,1880,2.897,1881,2.897,1885,1.835,1893,2.587,1897,2.124,1944,2.322,1955,2.322,1958,2.322,1970,2.587,1985,2.587,2015,2.587,2044,2.322,2046,3.13,2057,4.524,2062,4.524,2067,4.062,2108,2.124,2174,5.227,2175,2.988,2176,2.988,2177,2.988,2178,2.988,2179,2.988,2180,2.988,2181,2.988,2182,2.587,2183,5.767,2184,2.587,2185,3.811,2186,2.988,2187,2.988,2188,5.322,2189,2.988,2190,3.811,2191,2.988,2192,2.988,2193,2.124,2194,3.811,2195,2.988,2196,2.988,2197,2.988,2198,4.403,2199,2.988,2200,3.811,2201,4.524,2202,2.988,2203,2.988,2204,5.767,2205,5.767,2206,2.988,2207,4.524,2208,2.988,2209,4.403,2210,5.767,2211,4.403,2212,2.988,2213,4.403,2214,2.587,2215,3.811,2216,2.988,2217,2.988,2218,2.988,2219,2.988,2220,2.988,2221,2.988,2222,2.988,2223,2.988,2224,3.421,2225,2.988,2226,2.988,2227,2.988,2228,2.988,2229,2.322,2230,2.988,2231,2.988,2232,2.988,2233,2.988,2234,2.988,2235,2.988,2236,4.403,2237,2.988,2238,5.227,2239,2.988,2240,2.587,2241,3.811,2242,3.811,2243,2.988,2244,2.587,2245,2.988,2246,2.988,2247,2.988,2248,2.988,2249,2.988,2250,2.587,2251,2.988,2252,2.988]],["title/additional-documentation/modules/crypto.html",[1227,2.39,1458,1.002,1566,1.002]],["body/additional-documentation/modules/crypto.html",[5,0.566,11,0.863,15,0.011,45,0.008,46,0.008,65,2.318,85,1.351,87,2.631,110,1.199,153,1.424,162,1.147,186,2.397,235,1.224,299,1.424,322,2.554,332,2.151,365,3.6,370,1.596,430,1.968,435,2.737,438,1.754,439,2.764,444,2.151,468,4.098,533,3.202,657,1.351,741,1.968,742,1.596,744,1.7,765,1.754,771,1.351,784,3.6,800,4.316,801,2.151,805,3.232,852,2.397,877,1.424,883,1.596,887,1.7,891,1.7,900,2.71,916,1.968,939,3.232,945,1.505,951,3.6,1017,2.71,1030,3.232,1046,5.186,1053,1.596,1065,2.398,1089,1.968,1109,1.7,1155,1.505,1160,1.822,1164,2.397,1201,1.596,1208,1.968,1219,3.167,1221,2.398,1227,1.822,1243,2.151,1288,2.151,1298,2.554,1299,1.822,1314,2.397,1331,2.151,1333,1.505,1355,2.397,1377,1.968,1449,2.151,1499,2.397,1607,5.615,1608,5.154,1609,5.413,1611,2.397,1613,2.397,1618,3.6,1629,4.808,1630,4.325,1639,3.882,1641,4.325,1642,2.397,1653,2.397,1654,3.6,1655,3.6,1688,2.397,1765,4.808,1798,1.424,1802,2.397,1803,1.968,1813,1.7,1838,2.397,1847,2.397,1880,1.822,1881,1.822,1885,1.7,1889,2.151,1891,2.151,1896,1.968,1912,2.151,1915,2.151,1921,2.397,1930,1.822,1998,1.968,2002,3.6,2024,3.232,2040,2.397,2047,2.151,2053,3.6,2056,3.232,2070,2.397,2073,2.151,2083,2.397,2092,2.397,2107,2.397,2164,2.151,2193,1.968,2214,2.397,2224,2.151,2253,7.422,2254,6.674,2255,2.397,2256,2.769,2257,2.769,2258,2.769,2259,4.16,2260,4.16,2261,2.769,2262,2.769,2263,2.769,2264,2.151,2265,4.996,2266,2.769,2267,2.769,2268,2.769,2269,2.769,2270,2.769,2271,2.769,2272,2.769,2273,2.769,2274,4.16,2275,2.769,2276,2.769,2277,2.769,2278,2.769,2279,2.769,2280,2.769,2281,2.769,2282,2.397,2283,2.769,2284,2.769,2285,2.769,2286,2.769,2287,2.769,2288,2.769,2289,2.769,2290,5.954,2291,2.769,2292,4.16,2293,2.769,2294,2.769,2295,2.769,2296,2.769,2297,2.769,2298,2.769,2299,5.555,2300,2.769,2301,2.769,2302,4.16,2303,6.254,2304,2.769,2305,2.769,2306,2.769,2307,5.954,2308,4.996,2309,4.996,2310,2.769,2311,2.769,2312,2.769,2313,2.769,2314,4.325,2315,2.769,2316,2.769,2317,2.769,2318,2.769,2319,2.769,2320,2.769,2321,2.769,2322,2.769,2323,2.769,2324,2.769,2325,2.769,2326,4.996,2327,2.769,2328,2.769,2329,4.16,2330,2.769,2331,2.769,2332,2.769,2333,2.769,2334,2.769,2335,4.996,2336,2.769,2337,4.996,2338,4.16,2339,2.769,2340,2.769,2341,2.769,2342,2.769]],["title/additional-documentation/modules/open-api/swagger.html",[758,1.948,1458,0.875,1566,0.875,2343,3.172]],["body/additional-documentation/modules/open-api/swagger.html",[5,0.582,14,2.12,15,0.015,25,0.889,26,1.151,28,3.295,35,0.604,42,2.668,45,0.011,46,0.011,60,2.12,62,1.535,76,2.015,78,2.234,87,3.118,97,3.376,98,2.527,110,0.938,113,1.832,266,2.668,267,3.762,296,3.762,407,2.234,425,2.12,426,3.286,438,2.695,651,2.015,705,2.668,740,3.511,749,3.107,765,1.832,775,2.504,813,3.088,814,3.376,815,3.376,876,4.442,887,2.668,895,3.088,898,3.761,919,2.668,945,2.361,972,2.12,975,3.295,985,2.361,987,2.859,990,3.376,996,2.668,999,2.234,1017,2.12,1023,2.361,1035,3.376,1037,2.94,1072,3.088,1185,3.376,1214,2.859,1219,2.015,1230,3.376,1290,3.761,1298,2.668,1575,3.088,1699,3.761,1732,5.482,1749,3.761,1760,4.949,1762,3.761,1764,3.761,1769,3.761,1770,3.761,1794,2.668,2152,4.949,2344,5.718,2345,4.949,2346,4.345,2347,3.761,2348,4.345,2349,4.345,2350,3.761,2351,4.345,2352,4.345,2353,4.345,2354,4.345,2355,4.345,2356,4.345,2357,4.345,2358,4.345,2359,4.345,2360,4.345,2361,4.345,2362,4.345]],["title/additional-documentation/miscellaneous.html",[869,1.868,1458,1.002,1566,1.002]],["body/additional-documentation/miscellaneous.html",[15,0.014,45,0.014,46,0.014,869,3.097,958,4.281,973,3.698,992,3.097,996,3.698,1024,4.281,1101,4.281,1233,4.68,1234,4.68,1235,3.963,1236,3.963,1237,4.68]],["title/additional-documentation/miscellaneous/git-commits.html",[992,1.631,1235,2.087,1458,0.875,1566,0.875]],["body/additional-documentation/miscellaneous/git-commits.html",[15,0.014,19,1.242,20,1.132,45,0.011,46,0.011,65,2.644,78,2.223,98,1.911,110,0.934,113,1.823,438,2.97,749,2.35,769,3.5,775,3.285,945,2.35,953,4.532,963,3.074,972,2.109,992,3.485,1023,3.097,1061,4.051,1069,3.36,1079,3.743,1084,3.36,1097,3.36,1102,2.492,1155,2.35,1191,3.743,1220,4.46,1223,2.655,1235,2.845,1243,3.36,1247,3.36,1333,3.097,1428,3.36,1446,2.845,1472,3.36,1798,3.278,1837,3.36,1863,5.866,1867,4.428,1868,5.62,1924,3.743,1974,3.743,2200,3.743,2363,6.376,2364,4.954,2365,3.743,2366,4.324,2367,4.933,2368,3.743,2369,3.36,2370,3.743,2371,4.324,2372,5.7,2373,4.324,2374,5.7,2375,4.324,2376,4.324,2377,4.324,2378,4.324,2379,4.933,2380,5.7,2381,3.743,2382,5.7,2383,4.324,2384,4.324,2385,4.324,2386,5.7,2387,4.324,2388,4.324,2389,4.324,2390,4.324,2391,3.743,2392,4.324,2393,4.324,2394,4.324,2395,4.324,2396,4.324,2397,4.324,2398,4.324,2399,4.324,2400,4.324,2401,4.933,2402,4.324,2403,4.324,2404,4.324,2405,4.324]],["title/additional-documentation/miscellaneous/known-issues.html",[1233,2.465,1234,2.465,1458,0.875,1566,0.875]],["body/additional-documentation/miscellaneous/known-issues.html",[13,1.926,15,0.014,36,0.831,45,0.01,46,0.01,54,2.576,55,3.68,62,1.325,251,4.768,259,1.83,267,2.468,322,3.179,366,1.836,378,3.179,425,1.83,434,2.666,555,4.215,642,2.303,705,3.926,706,3.179,736,3.179,737,3.179,742,2.984,832,2.984,837,3.246,840,4.607,862,3.246,863,2.914,877,1.928,919,3.179,972,3.469,973,4.12,975,4.239,982,4.023,1005,2.468,1017,1.83,1021,2.666,1036,4.023,1037,1.928,1041,5.133,1043,2.666,1050,2.914,1069,2.914,1082,2.914,1085,4.023,1102,2.162,1104,3.246,1124,2.914,1137,4.481,1176,2.666,1221,2.162,1431,3.246,1867,4.023,1918,3.246,1930,3.407,1986,2.914,2093,4.023,2164,4.023,2193,2.666,2250,3.246,2314,4.481,2401,4.481,2406,5.178,2407,5.178,2408,3.75,2409,3.75,2410,3.75,2411,3.75,2412,3.75,2413,3.75,2414,5.178,2415,5.178,2416,3.75,2417,3.75,2418,5.178,2419,3.75,2420,3.75,2421,5.178,2422,3.75,2423,3.75,2424,3.75,2425,3.75,2426,5.178,2427,3.75,2428,3.75,2429,3.75,2430,3.75,2431,3.75,2432,3.246,2433,3.75,2434,3.75,2435,3.75,2436,3.75,2437,3.75,2438,5.178,2439,4.481,2440,3.75,2441,3.75,2442,5.178,2443,3.75,2444,3.75,2445,3.75,2446,3.75,2447,3.75,2448,3.246,2449,3.75,2450,3.75,2451,3.75,2452,3.75,2453,3.75,2454,3.75,2455,3.75,2456,3.75,2457,3.75]],["title/additional-documentation/miscellaneous/clean-docker-images.html",[973,1.729,1024,2.001,1236,1.853,1458,0.776,1566,0.776]],["body/additional-documentation/miscellaneous/clean-docker-images.html",[15,0.013,45,0.013,46,0.013,639,4.636,657,2.608,661,3.082,749,3.981,765,3.089,924,4.821,973,4.795,982,5.067,1024,3.8,1025,5.645,1027,4.628,1031,3.518,1043,3.8,1223,3.283,1232,3.283,1236,4.291,2432,4.628,2458,6.521,2459,5.346,2460,5.346,2461,5.346,2462,5.346,2463,6.521,2464,5.346,2465,6.521,2466,6.521,2467,5.346]],["title/additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html",[15,0.004,958,1.634,996,1.412,1101,1.634,1237,1.786,1458,0.634,1566,0.634]],["body/additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html",[5,0.631,15,0.013,25,0.685,45,0.012,46,0.012,62,1.74,78,2.532,267,4.463,296,3.24,328,2.838,705,4.164,751,3.826,832,2.838,912,3.024,938,4.262,956,6.349,957,5.364,958,4.821,972,3.308,975,3.909,985,2.676,992,2.532,1053,2.838,1083,3.024,1101,3.5,1155,3.868,1226,2.838,1428,3.826,1559,4.262,1778,3.5,1813,3.024,1868,4.815,2104,4.262,2116,4.262,2364,3.826,2367,5.364,2368,4.262,2369,3.826,2370,5.87,2391,4.262,2468,4.262,2469,3.826,2470,4.924,2471,4.924,2472,4.924,2473,4.924,2474,4.924,2475,4.924,2476,4.924,2477,6.197,2478,4.924,2479,4.924,2480,4.924,2481,4.924,2482,4.924,2483,4.924,2484,4.924,2485,4.924]],["title/additional-documentation/trainings.html",[1239,2.822,1458,1.002,1566,1.002]],["body/additional-documentation/trainings.html",[15,0.014,45,0.014,46,0.014,425,2.978,880,4.067,910,4.017,992,3.138,1239,4.743,1240,4.897]],["title/additional-documentation/trainings/node-js-for-beginners.html",[880,1.623,910,1.853,1240,1.853,1458,0.776,1566,0.776]],["body/additional-documentation/trainings/node-js-for-beginners.html",[0,0.827,3,0.481,5,0.592,8,1.071,11,0.64,13,0.667,15,0.013,19,0.59,45,0.006,46,0.006,54,0.827,55,1.459,57,1.459,83,2.628,94,0.986,98,1.457,110,1.304,112,0.667,123,1.9,162,1.602,215,1.26,216,2.561,235,2.567,262,1.595,266,1.26,272,1.351,273,1.459,322,3.394,330,1.351,340,1.777,374,1.001,405,1.001,407,1.695,424,1.26,426,1.055,439,2.089,608,2.38,651,2.402,657,1.001,661,1.183,706,2.903,732,1.351,733,1.26,735,1.791,744,3.179,754,1.26,756,1.595,765,1.741,771,1.608,832,1.183,872,2.169,877,1.055,880,2.984,882,1.595,884,1.459,885,1.459,887,2.536,889,1.351,891,3.708,895,2.935,900,3.04,910,3.822,912,3.179,917,1.595,918,1.595,924,1.351,925,1.595,945,2.244,969,1.595,972,1.608,985,2.569,990,1.595,996,1.26,999,1.055,1023,1.115,1037,1.695,1051,1.777,1058,3.209,1060,4.023,1061,1.459,1072,2.343,1076,3.574,1082,1.595,1083,2.024,1085,1.595,1094,3.36,1135,1.777,1141,1.595,1142,3.574,1143,1.459,1153,1.777,1155,1.115,1157,1.459,1194,1.595,1199,1.595,1208,1.459,1211,1.777,1215,1.459,1219,0.952,1220,2.169,1223,1.26,1226,1.183,1227,3.111,1232,1.26,1238,1.459,1261,3.209,1276,2.343,1277,1.595,1297,1.595,1333,1.791,1383,2.561,1392,1.777,1393,1.595,1423,1.777,1437,1.777,1444,2.853,1446,2.169,1461,1.777,1473,1.777,1509,5.933,1553,1.777,1592,1.459,1593,1.595,1616,3.574,1639,1.595,1659,4.481,1672,1.459,1782,1.777,1819,1.777,1820,1.777,1831,1.595,1837,2.561,1913,1.777,1915,1.595,1925,2.561,1930,1.351,1955,1.595,1956,1.777,1973,1.459,1987,1.777,1991,1.777,1998,1.459,2007,3.574,2024,1.595,2046,1.459,2047,2.561,2056,1.595,2066,2.561,2067,2.561,2073,1.595,2093,1.595,2108,1.459,2109,1.777,2137,1.777,2139,2.853,2151,1.595,2160,1.777,2169,1.595,2184,1.777,2188,1.777,2194,1.777,2201,1.777,2207,4.092,2229,1.595,2240,2.853,2244,1.777,2264,2.561,2282,1.777,2347,1.777,2364,1.595,2381,4.481,2469,1.595,2486,1.777,2487,1.777,2488,3.574,2489,2.053,2490,2.053,2491,2.053,2492,4.728,2493,2.053,2494,2.053,2495,3.296,2496,2.053,2497,3.296,2498,2.053,2499,4.13,2500,2.053,2501,3.296,2502,2.053,2503,2.053,2504,2.053,2505,2.053,2506,2.053,2507,2.053,2508,2.053,2509,2.053,2510,2.053,2511,3.296,2512,2.053,2513,2.053,2514,2.053,2515,3.296,2516,4.13,2517,2.053,2518,2.053,2519,2.053,2520,2.053,2521,2.053,2522,2.053,2523,2.053,2524,2.053,2525,2.053,2526,2.053,2527,2.053,2528,2.053,2529,2.053,2530,1.777,2531,2.053,2532,4.092,2533,2.053,2534,3.296,2535,2.053,2536,2.053,2537,4.13,2538,1.777,2539,2.053,2540,2.053,2541,2.053,2542,2.053,2543,2.053,2544,2.053,2545,3.296,2546,2.053,2547,2.053,2548,2.053,2549,2.053,2550,2.053,2551,3.296,2552,2.053,2553,2.053,2554,2.053,2555,3.296,2556,2.053,2557,3.296,2558,2.053,2559,2.053,2560,2.053,2561,2.053,2562,2.053,2563,2.053,2564,3.296,2565,7.079,2566,5.528,2567,3.296,2568,2.053,2569,2.053,2570,2.053,2571,2.053,2572,2.053,2573,2.053,2574,2.053,2575,2.053,2576,2.053,2577,2.053,2578,2.053,2579,2.053,2580,2.053,2581,2.053,2582,3.296,2583,2.053,2584,3.296,2585,3.296,2586,3.296,2587,4.728,2588,2.053,2589,2.053,2590,4.13,2591,3.574,2592,4.13,2593,3.296,2594,3.296,2595,2.053,2596,3.296,2597,2.053,2598,2.053,2599,2.053,2600,1.777,2601,3.296,2602,2.053,2603,2.053,2604,4.13,2605,4.13,2606,2.053,2607,2.053,2608,2.053,2609,2.053,2610,2.053,2611,2.053,2612,2.053,2613,2.053,2614,2.053,2615,2.053,2616,2.053,2617,2.053,2618,2.053,2619,2.053,2620,2.053,2621,2.053,2622,2.053,2623,2.053,2624,2.053,2625,2.053,2626,2.053,2627,2.053,2628,2.053,2629,2.053,2630,2.053,2631,2.053,2632,2.053,2633,2.053,2634,2.053,2635,3.296,2636,4.728,2637,3.296,2638,2.053,2639,2.053,2640,2.053,2641,2.053,2642,4.728,2643,2.053,2644,2.053,2645,3.296,2646,2.053,2647,2.053,2648,2.053,2649,3.296,2650,2.053,2651,2.053,2652,2.053]],["title/additional-documentation/trainings/nest-js-for-beginners.html",[425,1.374,880,1.623,1240,1.853,1458,0.776,1566,0.776]],["body/additional-documentation/trainings/nest-js-for-beginners.html",[0,1.888,2,1.157,5,0.254,11,1.641,13,0.81,14,1.217,15,0.009,18,1.301,19,0.716,20,0.931,36,0.719,45,0.008,46,0.008,50,1.102,54,1.005,62,1.358,110,1.487,111,1.438,112,1.71,113,1.052,126,3.541,127,1.698,143,1.217,152,1.282,153,1.282,162,0.688,169,1.773,206,1.641,215,2.359,259,1.874,261,2.409,269,2.159,272,3.083,299,1.282,349,1.355,366,0.716,374,1.874,381,1.938,388,2.159,406,1.773,407,1.282,410,2.985,424,3.232,425,3.359,439,2.326,443,1.773,542,1.438,555,1.773,561,1.641,639,1.773,651,2.442,657,1.217,661,1.438,706,1.531,732,2.528,733,2.359,758,1.531,765,2.638,771,1.217,840,1.938,863,1.938,879,3.742,880,3.606,882,2.985,883,3.034,885,1.773,889,1.641,891,1.531,900,2.286,904,2.877,910,1.641,919,2.877,924,1.641,925,1.938,930,2.359,934,3.325,945,2.546,963,1.773,969,1.938,972,1.217,973,1.531,975,3.034,983,4.09,985,2.546,987,1.641,1017,1.217,1023,1.355,1031,1.641,1035,2.985,1036,1.938,1037,2.707,1050,1.938,1053,1.438,1057,1.938,1058,1.938,1060,1.938,1061,2.731,1062,4.056,1094,3.331,1102,1.438,1114,4.056,1155,2.546,1157,2.731,1161,2.159,1167,2.985,1168,2.528,1169,2.159,1170,2.159,1176,1.773,1181,2.159,1194,1.938,1199,1.938,1213,4.041,1217,5.415,1221,3.034,1223,1.531,1226,1.438,1232,1.531,1238,1.773,1277,1.938,1286,2.731,1329,2.159,1333,2.088,1377,2.731,1383,1.938,1446,3.464,1464,2.159,1578,1.938,1593,1.938,1644,1.938,1658,2.159,1732,1.938,1794,1.531,1800,1.773,1813,1.531,1832,2.159,1852,1.938,1892,2.159,1897,2.731,1907,2.159,1944,2.985,1958,1.938,1972,2.159,1973,1.773,1983,2.159,1986,1.938,1996,4.056,1998,1.773,2000,4.556,2001,3.325,2044,2.985,2046,1.773,2049,2.159,2066,1.938,2085,2.159,2108,2.731,2151,2.985,2169,1.938,2170,3.325,2182,2.159,2185,2.159,2190,2.159,2193,1.773,2215,2.159,2224,1.938,2229,1.938,2241,2.159,2242,2.159,2255,2.159,2264,1.938,2345,2.159,2350,3.325,2365,2.159,2369,1.938,2379,5.198,2439,2.159,2448,2.159,2468,2.159,2469,1.938,2486,2.159,2487,2.159,2488,4.056,2530,4.056,2532,3.325,2538,2.159,2591,2.159,2600,2.159,2653,2.494,2654,2.494,2655,2.494,2656,2.494,2657,3.842,2658,2.494,2659,2.494,2660,4.686,2661,2.494,2662,2.494,2663,2.494,2664,3.842,2665,2.494,2666,2.494,2667,3.842,2668,2.494,2669,2.494,2670,2.494,2671,2.494,2672,2.494,2673,3.842,2674,2.494,2675,2.494,2676,2.494,2677,2.494,2678,2.494,2679,2.494,2680,2.494,2681,2.494,2682,2.494,2683,2.494,2684,5.685,2685,2.494,2686,5.264,2687,2.494,2688,2.494,2689,2.494,2690,2.494,2691,3.842,2692,3.842,2693,2.494,2694,4.686,2695,2.494,2696,2.494,2697,2.494,2698,2.494,2699,2.494,2700,2.494,2701,2.494,2702,3.842,2703,2.494,2704,2.494,2705,2.494,2706,2.494,2707,4.686,2708,2.494,2709,2.494,2710,2.494,2711,2.494,2712,2.494,2713,2.494,2714,2.494,2715,2.494,2716,5.264,2717,2.494,2718,2.494,2719,2.494,2720,2.494]],["title/additional-documentation/trainings/git-for-beginners.html",[992,1.631,1240,2.087,1458,0.875,1566,0.875]],["body/additional-documentation/trainings/git-for-beginners.html",[15,0.014,45,0.014,46,0.014,992,3.922,1074,5.23,1306,5.23,2721,7.014,2722,7.014,2723,6.043]]],"invertedIndex":[["",{"_index":15,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["0",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1905,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["1",{"_index":657,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["1.0.0",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2563,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["100",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2603,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["11.0.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2622,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["123456seven",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127.0.0.1:${db_port}:3306",{"_index":2431,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["128",{"_index":2338,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["13",{"_index":2630,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["15t05:45:28.894z",{"_index":1906,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["16",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["2.0",{"_index":1264,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":1210,"title":{},"body":{"index.html":{}}}],["2.1.4",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":1216,"title":{},"body":{"index.html":{}}}],["2.2.5",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2004",{"_index":1266,"title":{},"body":{"license.html":{}}}],["201",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2021",{"_index":1904,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["2145",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["27017",{"_index":2020,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["28",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1223,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["3.0.2",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["3.3",{"_index":2423,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["3.3.3",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3306",{"_index":2019,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["4",{"_index":1232,"title":{},"body":{"index.html":{},"overview.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["4.0.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1238,"title":{},"body":{"index.html":{},"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["5.0.1",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1306,"title":{},"body":{"license.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["6",{"_index":1199,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["6.1.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2538,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["7.3.0",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1593,"title":{},"body":{"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["8.0.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1277,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["__dirname",{"_index":262,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["__dirname}/email",{"_index":341,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["__filename",{"_index":2506,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ability",{"_index":2668,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["above",{"_index":889,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["abstraction",{"_index":888,"title":{},"body":{"index.html":{}}}],["acceptance",{"_index":1537,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1535,"title":{},"body":{"license.html":{}}}],["access",{"_index":1157,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["access_token",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["according",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["accounts",{"_index":2121,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["accurate",{"_index":1845,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["achieve",{"_index":2324,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["act",{"_index":1543,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1285,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1148,"title":{},"body":{"index.html":{}}}],["active",{"_index":936,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["acts",{"_index":1516,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2376,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["actually",{"_index":2081,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["add",{"_index":1037,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["addbearerauth",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["added",{"_index":2365,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["addendum",{"_index":1457,"title":{},"body":{"license.html":{}}}],["adding",{"_index":2379,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["additional",{"_index":1458,"title":{"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"license.html":{},"additional-documentation/modules/request-response.html":{}}}],["additions",{"_index":1349,"title":{},"body":{"license.html":{}}}],["addlistener",{"_index":2576,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["addressing",{"_index":760,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["adds",{"_index":2396,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["adhere",{"_index":1840,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["admin",{"_index":278,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["advantage",{"_index":2438,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["advised",{"_index":1533,"title":{},"body":{"license.html":{}}}],["aes",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["aes/cbc",{"_index":2296,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["aes/gcm",{"_index":2297,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["affect",{"_index":2380,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["afterall(async",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["against",{"_index":1412,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["agnostic",{"_index":2346,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["ago",{"_index":1862,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["agree",{"_index":1546,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["agreed",{"_index":1490,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1471,"title":{},"body":{"license.html":{}}}],["aims",{"_index":1814,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["algorithm",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["algorithms",{"_index":2302,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["alleging",{"_index":1417,"title":{},"body":{"license.html":{}}}],["allocation",{"_index":2572,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["allow",{"_index":1071,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["allowed",{"_index":2159,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["allowing",{"_index":1077,"title":{},"body":{"index.html":{}}}],["allows",{"_index":898,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["alone",{"_index":1408,"title":{},"body":{"license.html":{}}}],["along",{"_index":1449,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["alongside",{"_index":1456,"title":{},"body":{"license.html":{}}}],["alot",{"_index":2195,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["already",{"_index":1138,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["always",{"_index":2331,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["and/or",{"_index":1540,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2068,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["annotations",{"_index":1339,"title":{},"body":{"license.html":{}}}],["another",{"_index":2026,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["anyone",{"_index":1243,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["anywhere",{"_index":2666,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["apache",{"_index":1263,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2038,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["api",{"_index":651,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["api/swagger",{"_index":2343,"title":{"additional-documentation/modules/open-api/swagger.html":{}},"body":{}}],["apibearerauth",{"_index":644,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth('jwt",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse",{"_index":645,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicreateuserfirstnameproperty",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreateuserlastnameproperty",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":646,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiproperty(apiresponse.apicreateuserfirstnameproperty",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apicreateuserlastnameproperty",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apiupdateuserboolproperty",{"_index":539,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["apiproperty(apiresponse.apivalidateuseremail",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiproperty(apiresponse.apivalidateuserpass",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ValidateUserDto.html":{}}}],["apiresponse",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiresponse.apiusercreatedresponse",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiuserdeletedresponse",{"_index":682,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetbyid",{"_index":675,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponseneutral",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponsev1",{"_index":654,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiusergetresponsev2",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse.apiuserupdatedresponse",{"_index":688,"title":{},"body":{"controllers/UsersController.html":{}}}],["apis",{"_index":895,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["apitags",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('nest_app",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user_api",{"_index":648,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiupdateuserboolproperty",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusercreatedresponse",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiuserdeletedresponse",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetbyid",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponseneutral",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponsev1",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiusergetresponsev2",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiuserupdatedresponse",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apivalidateuseremail",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apivalidateuserpass",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":426,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["app's",{"_index":1134,"title":{},"body":{"index.html":{}}}],["app.close",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableversioning",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(configservice",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["app.init",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.module",{"_index":2230,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["app.use(mongosanitize",{"_index":2173,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["app/app.controller",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.service",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/auth/auth.controller",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/auth/auth.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/auth.service",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["app/auth/jwt.auth.guard",{"_index":647,"title":{},"body":{"controllers/UsersController.html":{}}}],["app/auth/jwt.strategy",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/components/users/constants/api.response.dto",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{}}}],["app/components/users/dto/create.user.dto",{"_index":581,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/dto/update.user.dto",{"_index":582,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/dto/validate.user.dto",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["app/components/users/entities/user.entity",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["app/components/users/repository/db/user.repository",{"_index":696,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/components/users/repository/user.repository",{"_index":584,"title":{},"body":{"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{}}}],["app/components/users/services/users.service",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["app/components/users/users.controller",{"_index":697,"title":{},"body":{"modules/UsersModule.html":{}}}],["app/components/users/users.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app/config/index",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["app/core",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["app/core/crypto/crypto",{"_index":436,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["app/core/logger/applogger",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{}}}],["app/core/module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app/core/rate",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["app/db/database.module",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":524,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["app_name",{"_index":1902,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["app_name=rest_api",{"_index":1010,"title":{},"body":{"index.html":{}}}],["app_name}_mysql",{"_index":2426,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"additional-documentation/modules/request-response.html":{}}}],["appcontroller_test",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1452,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1334,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1488,"title":{},"body":{"license.html":{}}}],["application",{"_index":883,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["applications",{"_index":967,"title":{},"body":{"index.html":{}}}],["application’s",{"_index":2087,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["applies",{"_index":1401,"title":{},"body":{"license.html":{}}}],["applogger",{"_index":32,"title":{"injectables/AppLogger.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/TestController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{}}}],["apply",{"_index":1033,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply_encryption",{"_index":444,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"additional-documentation/modules/crypto.html":{}}}],["apply_encryption=we",{"_index":2261,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["appmodule",{"_index":111,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["approach",{"_index":921,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":1561,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":2305,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["appropriateness",{"_index":1502,"title":{},"body":{"license.html":{}}}],["apps",{"_index":1106,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":29,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/request-response.html":{}}}],["arbitrary",{"_index":2166,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["architectural",{"_index":2177,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["architecture",{"_index":918,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["archives",{"_index":1569,"title":{},"body":{"license.html":{}}}],["arg",{"_index":2516,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["arising",{"_index":1523,"title":{},"body":{"license.html":{}}}],["array",{"_index":374,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["articles",{"_index":2189,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["ask",{"_index":1827,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["asking",{"_index":2097,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["aspects",{"_index":2199,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["assert",{"_index":2511,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["asserted",{"_index":1552,"title":{},"body":{"license.html":{}}}],["assessing",{"_index":762,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["assign",{"_index":350,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["associated",{"_index":1506,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["assume",{"_index":1504,"title":{},"body":{"license.html":{}}}],["async",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["asynchronous",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["asynchronously",{"_index":2701,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["attach",{"_index":1554,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1332,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":1919,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["attack",{"_index":2075,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["attacker",{"_index":2072,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["attacks",{"_index":2053,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["attribution",{"_index":1440,"title":{},"body":{"license.html":{}}}],["auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":139,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":2300,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["authentication",{"_index":2024,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["authenticity",{"_index":2309,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["authguard",{"_index":377,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":379,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":117,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorized",{"_index":1281,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1328,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":154,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":277,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["auto",{"_index":2678,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["available",{"_index":904,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["avoid",{"_index":1825,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["avoided",{"_index":2140,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["await",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{}}}],["away",{"_index":944,"title":{},"body":{"index.html":{}}}],["b",{"_index":1432,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["backend",{"_index":2078,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["background",{"_index":1026,"title":{},"body":{"index.html":{}}}],["band",{"_index":2071,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["base64",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":930,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["baserequest",{"_index":402,"title":{},"body":{"interfaces/Request.html":{}}}],["baseresponse",{"_index":474,"title":{},"body":{"interfaces/Response.html":{}}}],["basic",{"_index":2532,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["basically",{"_index":1070,"title":{},"body":{"index.html":{}}}],["basics",{"_index":2539,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["basis",{"_index":1491,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":1828,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["beforeall(async",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["begin",{"_index":2152,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["beginners",{"_index":1240,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/trainings.html":{}}}],["behalf",{"_index":1354,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":2088,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["being",{"_index":1803,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["belongs",{"_index":1172,"title":{},"body":{"index.html":{}}}],["below",{"_index":1093,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["beneficial",{"_index":1310,"title":{},"body":{"license.html":{}}}],["best",{"_index":1119,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["between",{"_index":2224,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bifurcated",{"_index":2371,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["binary",{"_index":2567,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["bind",{"_index":418,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"license.html":{}}}],["binding",{"_index":2703,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bindrequesthelpers",{"_index":412,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindrequesthelpers(request",{"_index":416,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["bindresponsehelpers",{"_index":413,"title":{},"body":{"guards/RequestGuard.html":{}}}],["bindresponsehelpers(response",{"_index":420,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["blind",{"_index":2080,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["block",{"_index":2290,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["blocking",{"_index":2614,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["blocks",{"_index":2702,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["blog",{"_index":1259,"title":{},"body":{"index.html":{}}}],["body",{"_index":349,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["body:'this",{"_index":1982,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["boiler",{"_index":1880,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["boilerplate",{"_index":1212,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{}}}],["boolean",{"_index":371,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["bootsrap.ts",{"_index":2171,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["bootstrap",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap(app",{"_index":875,"title":{},"body":{"miscellaneous/functions.html":{}}}],["both",{"_index":2073,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["brackets",{"_index":1557,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1786,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["break",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broad",{"_index":2281,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["broadcast",{"_index":2628,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["broadest",{"_index":2273,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["broccoli",{"_index":2383,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["browse",{"_index":1590,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["browser/os",{"_index":1791,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["browsers",{"_index":1929,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["browserstack",{"_index":2389,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["buffer",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["buffer.concat([enc1",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer.from(data",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.length",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.slice(0",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bufferdata.slice(bufferdata.length",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffers",{"_index":2564,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["bug",{"_index":769,"title":{"additional-documentation/contribution/bug-reports.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["bugfix",{"_index":2373,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["build",{"_index":1023,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["builder",{"_index":2145,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["building",{"_index":2108,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["buildrunning",{"_index":1044,"title":{},"body":{"index.html":{}}}],["builds",{"_index":1081,"title":{},"body":{"index.html":{}}}],["built",{"_index":1139,"title":{},"body":{"index.html":{}}}],["bunch",{"_index":2239,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["business",{"_index":2241,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["bypass",{"_index":2050,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["byte",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1437,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["caching",{"_index":2202,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["calculated",{"_index":2272,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["call",{"_index":1072,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["callback",{"_index":2540,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["called",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/TestController.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["called');logs",{"_index":1899,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["calls",{"_index":2201,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["canactivate",{"_index":414,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["canactivate(context",{"_index":427,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["cap_add",{"_index":2414,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["cap_sys_nice",{"_index":2409,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["cap_sys_nicehttps://stackoverflow.com/questions/55559386/how",{"_index":2416,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["capability",{"_index":2408,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["care",{"_index":2219,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["carry",{"_index":1433,"title":{},"body":{"license.html":{}}}],["cascading",{"_index":2688,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["case",{"_index":1020,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/mailer.html":{}}}],["cases",{"_index":2537,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["catch",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["cause",{"_index":1295,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1777,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["causing",{"_index":1806,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["cbc",{"_index":2299,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["ccm",{"_index":2317,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cd",{"_index":1859,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["chai",{"_index":2535,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["chain",{"_index":1073,"title":{},"body":{"index.html":{}}}],["chaining",{"_index":2322,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["change",{"_index":1220,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["changed",{"_index":1039,"title":{},"body":{"index.html":{},"license.html":{}}}],["changelog",{"_index":2479,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["changes",{"_index":1863,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["channel",{"_index":768,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/database.html":{}}}],["character",{"_index":1522,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["characters",{"_index":2158,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["charge",{"_index":1385,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2625,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cheat",{"_index":2721,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["check",{"_index":1185,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["checking",{"_index":1192,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1864,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["checks",{"_index":2368,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["child",{"_index":2592,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["child's",{"_index":2613,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["child_process",{"_index":2612,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["choose",{"_index":332,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["chore",{"_index":2384,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["chose",{"_index":1049,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":2304,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["chunks",{"_index":1870,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["ci",{"_index":2386,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["cid",{"_index":343,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["cipher",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["cipher.final",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cipher.getauthtag",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cipher.update(json.stringify(data",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ciphertext",{"_index":2333,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["circle",{"_index":2388,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["claim",{"_index":1414,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1403,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["classes",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"overview.html":{},"additional-documentation/modules/pattern.html":{}}}],["clean",{"_index":1236,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["clear",{"_index":1879,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["clearimmediate(immediateobject",{"_index":2521,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["clearinterval(t",{"_index":2519,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cleartimeout(t",{"_index":2517,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cli",{"_index":983,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["client",{"_index":2007,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["clone",{"_index":988,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["cloned",{"_index":1858,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["cluster",{"_index":2615,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cluster_appmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule",{"_index":280,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule_exports",{"_index":282,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_emailhandlermodule_providers",{"_index":281,"title":{},"body":{"modules/EmailHandlerModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":692,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":694,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":693,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":438,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["codebook",{"_index":2327,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["codes",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["coding",{"_index":1841,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["coffee.dto",{"_index":2675,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["coffees/dto/create",{"_index":2674,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["colons",{"_index":2403,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["column",{"_index":546,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["column({default",{"_index":550,"title":{},"body":{"entities/User.html":{}}}],["combination",{"_index":1409,"title":{},"body":{"license.html":{}}}],["combine",{"_index":88,"title":{},"body":{"injectables/AppLogger.html":{}}}],["combine(label",{"_index":96,"title":{},"body":{"injectables/AppLogger.html":{}}}],["comes",{"_index":2039,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["command",{"_index":924,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["commands",{"_index":1074,"title":{},"body":{"index.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["comment",{"_index":1562,"title":{},"body":{"license.html":{}}}],["comments",{"_index":1846,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["commercial",{"_index":1530,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1868,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commit_message",{"_index":2375,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["commitizen",{"_index":2477,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint",{"_index":2367,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint/cli",{"_index":2475,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlint/config",{"_index":2476,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commitlintrc",{"_index":2480,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["commits",{"_index":1235,"title":{"additional-documentation/miscellaneous/git-commits.html":{}},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["committing",{"_index":2366,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["common",{"_index":890,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{}}}],["communicate",{"_index":752,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["communicated",{"_index":2245,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["communication",{"_index":1357,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["communitymotivation",{"_index":937,"title":{},"body":{"index.html":{}}}],["compared",{"_index":2211,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["compdoc",{"_index":1116,"title":{},"body":{"index.html":{}}}],["compilation",{"_index":1125,"title":{},"body":{"index.html":{}}}],["compile",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compiled",{"_index":1152,"title":{},"body":{"index.html":{},"license.html":{}}}],["compiling",{"_index":1188,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2052,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["completely",{"_index":2156,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["complex",{"_index":1091,"title":{},"body":{"index.html":{}}}],["compliance",{"_index":1572,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":2339,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["complies",{"_index":1462,"title":{},"body":{"license.html":{}}}],["compodoc/compodoc",{"_index":1203,"title":{},"body":{"index.html":{}}}],["component",{"_index":1173,"title":{},"body":{"index.html":{}}}],["components",{"_index":1159,"title":{},"body":{"index.html":{}}}],["compose",{"_index":982,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["compose.yml",{"_index":1029,"title":{},"body":{"index.html":{}}}],["compression",{"_index":843,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["compression.filter(req",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":989,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["concerns",{"_index":2176,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["conditions",{"_index":1269,"title":{},"body":{"license.html":{}}}],["confidentiality",{"_index":2307,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["config",{"_index":62,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["config.get('app.apiversioning",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.apiversioningheader",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.apiversioningkey",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('app.env",{"_index":265,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('app.logfilename",{"_index":102,"title":{},"body":{"injectables/AppLogger.html":{}}}],["config.get('app.name",{"_index":97,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["config.get('crypto.secretkey",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('db.database",{"_index":260,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.host",{"_index":253,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.mongodb_port",{"_index":275,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('db.password",{"_index":258,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('db.port",{"_index":255,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.get('db.port1",{"_index":2017,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config.get('db.port2",{"_index":2018,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config.get('db.username",{"_index":257,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["config.get('secret_jwt_key",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('throttler.limit",{"_index":532,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["config.get('throttler.ttl",{"_index":530,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["config.ts",{"_index":2042,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["config/env/.env",{"_index":1002,"title":{},"body":{"index.html":{}}}],["config/env/.env.dev",{"_index":1006,"title":{},"body":{"index.html":{}}}],["config/env/.env.example",{"_index":1009,"title":{},"body":{"index.html":{}}}],["config/env/.env.prod",{"_index":1008,"title":{},"body":{"index.html":{}}}],["config/env/.env.test",{"_index":1007,"title":{},"body":{"index.html":{}}}],["configa",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["configmodule.forroot",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["configservice",{"_index":60,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/ThrottleModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["configuration",{"_index":1155,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["configurations",{"_index":1146,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1852,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["connection",{"_index":1886,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{}}}],["connectionoptions",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consequential",{"_index":1521,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1955,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["considered",{"_index":1850,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["consist",{"_index":1883,"title":{},"body":{"additional-documentation/modules.html":{}}}],["consistent",{"_index":1542,"title":{},"body":{"license.html":{}}}],["console",{"_index":2507,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["conspicuously",{"_index":1369,"title":{},"body":{"license.html":{}}}],["const",{"_index":87,"title":{},"body":{"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["constant",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants",{"_index":2259,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["constitutes",{"_index":1418,"title":{},"body":{"license.html":{}}}],["construct",{"_index":2136,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["constructor(config",{"_index":59,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{}}}],["constructor(usersrepository",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["construed",{"_index":1459,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1866,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["contained",{"_index":1445,"title":{},"body":{"license.html":{}}}],["container",{"_index":1036,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["container(s",{"_index":2461,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["container_name",{"_index":2425,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["containers",{"_index":1025,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["containing",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["contains",{"_index":1141,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["content",{"_index":1485,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":1453,"title":{},"body":{"license.html":{}}}],["context",{"_index":430,"title":{},"body":{"guards/RequestGuard.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["contexts",{"_index":2279,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["contract",{"_index":1300,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":734,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["contribution",{"_index":743,"title":{"additional-documentation/contribution.html":{}},"body":{"contributing.html":{},"license.html":{},"additional-documentation/contribution.html":{}}}],["contribution(s",{"_index":1407,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1241,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":1373,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1419,"title":{},"body":{"license.html":{}}}],["control",{"_index":1286,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["controlled",{"_index":1287,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["controller('auth",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":649,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["conventional",{"_index":2370,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["conventions",{"_index":1842,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["conversions",{"_index":1324,"title":{},"body":{"license.html":{}}}],["convince",{"_index":1816,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["copies",{"_index":1426,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1431,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["copyright",{"_index":1279,"title":{},"body":{"license.html":{}}}],["core",{"_index":877,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["corebootstrap(app",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coremodule",{"_index":118,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{}}}],["correcting",{"_index":2404,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["corresponds",{"_index":2570,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["cors",{"_index":1229,"title":{},"body":{"index.html":{}}}],["corsoptions",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["counter",{"_index":2311,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["counterclaim",{"_index":1415,"title":{},"body":{"license.html":{}}}],["couple",{"_index":2278,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["coupled",{"_index":2252,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["coverage",{"_index":774,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["covered",{"_index":2194,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["create",{"_index":985,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["create.user.dto",{"_index":2226,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["created",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["createlogger",{"_index":77,"title":{},"body":{"injectables/AppLogger.html":{}}}],["creates",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":562,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["createuser(payload",{"_index":568,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["createuserdto",{"_index":229,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":1217,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["creator",{"_index":2643,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["credentials",{"_index":1916,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["cross",{"_index":1413,"title":{},"body":{"license.html":{}}}],["crypto",{"_index":1227,"title":{"additional-documentation/modules/crypto.html":{}},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["crypto.createcipheriv(\"aes",{"_index":2337,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["crypto.createcipheriv(algorithm",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.createdecipheriv(algorithm",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.pbkdf2sync(password",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.randombytes(12",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.randombytes(64",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto.ts",{"_index":2260,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cryptographic",{"_index":2293,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cryptography",{"_index":2267,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["current",{"_index":406,"title":{},"body":{"interfaces/Request.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["currently",{"_index":1921,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["custom",{"_index":1213,"title":{},"body":{"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["customary",{"_index":1481,"title":{},"body":{"license.html":{}}}],["customloggerformat",{"_index":92,"title":{},"body":{"injectables/AppLogger.html":{}}}],["cwc",{"_index":2318,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["cycle",{"_index":1206,"title":{},"body":{"index.html":{}}}],["cz",{"_index":2478,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["d",{"_index":1043,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["damage",{"_index":2118,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["damages",{"_index":1518,"title":{},"body":{"license.html":{}}}],["data",{"_index":439,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["database",{"_index":259,"title":{"additional-documentation/modules/database.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/UserDbRepository.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["database.module.ts",{"_index":1984,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["database.the",{"_index":2167,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["databasemodule",{"_index":119,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databasename",{"_index":2027,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["databases",{"_index":1991,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["date",{"_index":1423,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["datetime",{"_index":1901,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["db",{"_index":1985,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["db/mysql",{"_index":2634,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["db_database=rest_api",{"_index":1013,"title":{},"body":{"index.html":{}}}],["db_host=127.0.0.1",{"_index":1012,"title":{},"body":{"index.html":{}}}],["db_password=root",{"_index":1015,"title":{},"body":{"index.html":{}}}],["db_port=3306start",{"_index":1016,"title":{},"body":{"index.html":{}}}],["db_user=user",{"_index":1014,"title":{},"body":{"index.html":{}}}],["dba",{"_index":2120,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["dealing",{"_index":2551,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["debug",{"_index":53,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/modules/logger.html":{}}}],["debug(message",{"_index":63,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debug?(message",{"_index":106,"title":{},"body":{"injectables/AppLogger.html":{}}}],["debugging(https://nodejs.org/en/docs/guides/debugging",{"_index":2524,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["decipher",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.final(outputencoding",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.setauthtag(tag",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decipher.update(text",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declare",{"_index":2236,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["decorating",{"_index":2712,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["decorator",{"_index":2035,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["decorators",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["decrypt",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["decrypted",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decryption",{"_index":2254,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["dedicated",{"_index":2349,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["deeper",{"_index":2697,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["defeats",{"_index":2141,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["defend",{"_index":1548,"title":{},"body":{"license.html":{}}}],["define",{"_index":1160,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["defines",{"_index":1970,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["defining",{"_index":1893,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{}}}],["definition",{"_index":1290,"title":{},"body":{"license.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["definitions",{"_index":1272,"title":{},"body":{"license.html":{}}}],["delay",{"_index":2515,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["delete",{"_index":639,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["delete('/users/2",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":681,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleteuser",{"_index":563,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{}}}],["deleteuser(@req",{"_index":683,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":570,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["deleteuser(req",{"_index":615,"title":{},"body":{"controllers/UsersController.html":{}}}],["deliberate",{"_index":1513,"title":{},"body":{"license.html":{}}}],["demanded",{"_index":2285,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["demonstrable",{"_index":1776,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["dependencies",{"_index":113,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["dependency",{"_index":1897,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["dependent",{"_index":2025,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["depends",{"_index":2105,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["deploy",{"_index":2077,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["derivation",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivative",{"_index":1335,"title":{},"body":{"license.html":{}}}],["derive",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derived",{"_index":1336,"title":{},"body":{"license.html":{}}}],["describe",{"_index":2347,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["describing",{"_index":1482,"title":{},"body":{"license.html":{}}}],["description",{"_index":653,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["descriptive",{"_index":1788,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["design",{"_index":2174,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["designated",{"_index":1371,"title":{},"body":{"license.html":{}}}],["designed",{"_index":2315,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["designing",{"_index":1931,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["desired",{"_index":1898,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{}}}],["desktop",{"_index":976,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1819,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["detailed",{"_index":1133,"title":{},"body":{"index.html":{}}}],["details",{"_index":2474,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["detect",{"_index":2112,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["determines",{"_index":2021,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["determining",{"_index":1501,"title":{},"body":{"license.html":{}}}],["dev",{"_index":267,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["dev/local/staging",{"_index":2358,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["developer",{"_index":897,"title":{},"body":{"index.html":{}}}],["developers",{"_index":755,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["developing",{"_index":757,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/pattern.html":{}}}],["development",{"_index":986,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{}}}],["diagram",{"_index":2197,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["difference",{"_index":2092,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["different",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["difficult",{"_index":2101,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["digest",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["din",{"_index":1032,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1153,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["direct",{"_index":1293,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1296,"title":{},"body":{"license.html":{}}}],["directional",{"_index":2609,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["directly",{"_index":896,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1021,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["disadvantage",{"_index":2298,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["disclaimer",{"_index":1486,"title":{},"body":{"license.html":{}}}],["discord",{"_index":1260,"title":{},"body":{"index.html":{}}}],["discovery",{"_index":2022,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["discoverymodule",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{}}}],["discussing",{"_index":1366,"title":{},"body":{"license.html":{}}}],["discussionsstay",{"_index":1248,"title":{},"body":{"index.html":{}}}],["display",{"_index":1392,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dist",{"_index":1127,"title":{},"body":{"index.html":{}}}],["dist/db/migrations/*.js",{"_index":270,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["dist/server.js",{"_index":1105,"title":{},"body":{"index.html":{}}}],["distributable",{"_index":1121,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1395,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1448,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1271,"title":{},"body":{"license.html":{}}}],["dividing",{"_index":2179,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["diving",{"_index":2694,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["doc",{"_index":1113,"title":{},"body":{"index.html":{}}}],["docker",{"_index":973,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["docker/docker",{"_index":1028,"title":{},"body":{"index.html":{}}}],["docker/init.sql:/docker",{"_index":2433,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["docs",{"_index":2391,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["documenation",{"_index":1115,"title":{},"body":{"index.html":{}}}],["document",{"_index":740,"title":{},"body":{"contributing.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["documentation",{"_index":775,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["documentations",{"_index":1197,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["doesn't",{"_index":2040,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["doesn’t",{"_index":2328,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["doing",{"_index":2638,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["domain",{"_index":2182,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["don't",{"_index":1184,"title":{},"body":{"index.html":{},"license.html":{}}}],["done",{"_index":1956,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dotenv",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":2462,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["drive",{"_index":946,"title":{},"body":{"index.html":{}}}],["driver",{"_index":2012,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["driver.we",{"_index":2010,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["dto",{"_index":1167,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["duplex",{"_index":2599,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["dynamic",{"_index":934,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["e",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["e.g",{"_index":1831,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["e2e",{"_index":1062,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["each",{"_index":1089,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["easier",{"_index":1567,"title":{},"body":{"license.html":{}}}],["easily",{"_index":938,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["easy",{"_index":745,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/database.html":{}}}],["eax",{"_index":2319,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["ecb",{"_index":2326,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["editorial",{"_index":1337,"title":{},"body":{"license.html":{}}}],["effective",{"_index":746,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["effectively",{"_index":914,"title":{},"body":{"index.html":{}}}],["eg",{"_index":2225,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["elaborations",{"_index":1340,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1355,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["email",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["email_host",{"_index":1940,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["email_port",{"_index":1941,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["emailhandlermodule",{"_index":279,"title":{"modules/EmailHandlerModule.html":{}},"body":{"modules/EmailHandlerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["emailhandlerservice",{"_index":283,"title":{"injectables/EmailHandlerService.html":{}},"body":{"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["emails",{"_index":1913,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emailservice",{"_index":1960,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["embarking",{"_index":1829,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["emit",{"_index":2581,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emitter(http://nodejs.org/api/events.html",{"_index":2575,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["emitters",{"_index":2629,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["enabled",{"_index":1214,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["enabling",{"_index":2711,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["enc1",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enc2",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encapsulation",{"_index":2693,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["enclosed",{"_index":1556,"title":{},"body":{"license.html":{}}}],["encoding",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encompass",{"_index":2662,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["encourage",{"_index":1244,"title":{},"body":{"index.html":{}}}],["encrypt",{"_index":435,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["encrypt(this.config",{"_index":447,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["encrypted",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["encryptingthe",{"_index":2256,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["encryption",{"_index":2253,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["encryption/decryption",{"_index":2301,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["end",{"_index":1553,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["endpoints",{"_index":2237,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["engine",{"_index":1925,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["engineered",{"_index":2058,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["engineering",{"_index":2206,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["engines",{"_index":2061,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["enter",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":261,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/User.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["entity",{"_index":542,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["entityrepository",{"_index":579,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["entityrepository(user",{"_index":585,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["entity{.ts,.js",{"_index":263,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["entry",{"_index":1107,"title":{},"body":{"index.html":{}}}],["entrypoint",{"_index":2421,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["enum",{"_index":81,"title":{},"body":{"injectables/AppLogger.html":{}}}],["enumerations",{"_index":870,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1909,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["env",{"_index":1030,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["env_file",{"_index":2436,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["envfilepath",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["environment",{"_index":987,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["envlist",{"_index":2359,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["envlist.includes(config.get('app.env",{"_index":2361,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["envthe",{"_index":2437,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["err",{"_index":356,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["error",{"_index":54,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["error('user",{"_index":595,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["error(error",{"_index":475,"title":{},"body":{"interfaces/Response.html":{}}}],["error(exception",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(message",{"_index":67,"title":{},"body":{"injectables/AppLogger.html":{}}}],["errormsg",{"_index":451,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject",{"_index":449,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject?.errors",{"_index":455,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errorobject?.message",{"_index":454,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["errors",{"_index":360,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["eslint",{"_index":956,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["eslintignore",{"_index":1193,"title":{},"body":{"index.html":{}}}],["eslintrc",{"_index":1190,"title":{},"body":{"index.html":{}}}],["eslintrc.js",{"_index":2473,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["etc",{"_index":1798,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["even",{"_index":1532,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["event",{"_index":1509,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["events",{"_index":2566,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["everyone",{"_index":747,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["everything",{"_index":2234,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["example",{"_index":1333,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["except",{"_index":1397,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2704,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exclude",{"_index":1195,"title":{},"body":{"index.html":{}}}],["excluding",{"_index":1368,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1384,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1022,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["executed",{"_index":1472,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["executing",{"_index":2250,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["executioncontext",{"_index":428,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["exercise",{"_index":1507,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1311,"title":{},"body":{"license.html":{}}}],["exist",{"_index":331,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{}}}],["existing",{"_index":1247,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["expandvariables",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["expect(data).toequal('deletion",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data).toequal('response",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data).toequal('updation",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(data.length).tobegreaterthanorequal(1",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.body.data).tobe('success",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.body.success).toequal(true",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.headers['content",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.status).tobe(statuscodes.created",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(response.status).toequal(statuscodes.ok",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(status).toequal(200",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(status).toequal(statuscodes.ok",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(statuscodes.ok",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expected",{"_index":1131,"title":{},"body":{"index.html":{},"additional-documentation/modules/request-response.html":{}}}],["explain",{"_index":2490,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["explained",{"_index":2184,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["explanation",{"_index":1207,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":1939,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["explicitly",{"_index":1465,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":2059,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["exploiting",{"_index":2100,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["exported",{"_index":2670,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exportprovider",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["exports",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["exports:[authservice",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["exposes",{"_index":894,"title":{},"body":{"index.html":{}}}],["express",{"_index":407,"title":{},"body":{"interfaces/Request.html":{},"interfaces/Response.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["express/fastify",{"_index":893,"title":{},"body":{"index.html":{}}}],["express@latest",{"_index":2454,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["expresses",{"_index":2217,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["extend",{"_index":1890,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["extends",{"_index":378,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"injectables/UserDbRepository.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["extensible",{"_index":920,"title":{},"body":{"index.html":{}}}],["external",{"_index":2200,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["extract",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["extractjwt",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extremely",{"_index":1779,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["f",{"_index":1027,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["facility",{"_index":2611,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["factory",{"_index":2696,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["failure",{"_index":1528,"title":{},"body":{"license.html":{}}}],["false",{"_index":268,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["fantastic",{"_index":1822,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["feat",{"_index":2372,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["feat(documentation",{"_index":2378,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["feature",{"_index":953,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["features",{"_index":764,"title":{"additional-documentation/contribution/features-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["fee",{"_index":1536,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":950,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1920,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["fetching",{"_index":2248,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["few",{"_index":2617,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["fields",{"_index":1555,"title":{},"body":{"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["fifty",{"_index":1304,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["filed",{"_index":1424,"title":{},"body":{"license.html":{}}}],["filename",{"_index":101,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{}}}],["files",{"_index":1102,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["files/source",{"_index":1162,"title":{},"body":{"index.html":{}}}],["filter",{"_index":2645,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["filters",{"_index":2705,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["finally",{"_index":1961,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["find",{"_index":1132,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["findall",{"_index":701,"title":{},"body":{"injectables/UsersService.html":{}}}],["findalluser",{"_index":564,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["findemail",{"_index":702,"title":{},"body":{"injectables/UsersService.html":{}}}],["findemail(email",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":703,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser",{"_index":565,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduser(id",{"_index":573,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail(email",{"_index":575,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["finduserbyemail(user",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":1794,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["firstname",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["fitness",{"_index":1498,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1812,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["fix",{"_index":1867,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["fixed",{"_index":1784,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["fixes",{"_index":2395,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["flag",{"_index":2258,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["flow",{"_index":2210,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["flowing",{"_index":2584,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["flows",{"_index":2198,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["focused",{"_index":1824,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["fol",{"_index":1977,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["folder",{"_index":1005,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["folders",{"_index":1128,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1848,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["followed",{"_index":965,"title":{},"body":{"index.html":{}}}],["following",{"_index":749,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["forced",{"_index":2095,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["forfeature",{"_index":2031,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["forge",{"_index":2271,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["fork",{"_index":1851,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["form",{"_index":1314,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["format",{"_index":78,"title":{},"body":{"injectables/AppLogger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["formatter",{"_index":1103,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":2400,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["forms",{"_index":2556,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["found",{"_index":596,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["foundation",{"_index":2489,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["framework",{"_index":884,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["framework.typeorm",{"_index":1999,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["frameworks",{"_index":892,"title":{},"body":{"index.html":{}}}],["free",{"_index":1387,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":899,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":2661,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["fromemail",{"_index":315,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["front",{"_index":2624,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["fs",{"_index":2586,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["full",{"_index":1095,"title":{},"body":{"index.html":{}}}],["fully",{"_index":2469,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["function",{"_index":791,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{}}}],["functional",{"_index":2534,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["functionalities",{"_index":2232,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["functionality",{"_index":1885,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["functions",{"_index":872,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["further",{"_index":1797,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["g",{"_index":2448,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["gain",{"_index":2051,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["galois",{"_index":2310,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gather",{"_index":2076,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["gcm",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["general",{"_index":2481,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["generally",{"_index":2284,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["generate",{"_index":1114,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["generated",{"_index":1323,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["generatetoken",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["generatetoken(@req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatetoken(req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["generatetoken(user",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["generating",{"_index":2350,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["generation",{"_index":1198,"title":{},"body":{"index.html":{}}}],["generic",{"_index":2215,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["get('/users",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/users/2",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/v1/users",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/v2/users",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(':id",{"_index":674,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('all/:param",{"_index":490,"title":{},"body":{"controllers/TestController.html":{}}}],["get('logger",{"_index":493,"title":{},"body":{"controllers/TestController.html":{}}}],["get('nocontent",{"_index":496,"title":{},"body":{"controllers/TestController.html":{}}}],["get('withmeta",{"_index":499,"title":{},"body":{"controllers/TestController.html":{}}}],["get(data",{"_index":459,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["getemailserver",{"_index":287,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["getemailserver(mailconfig",{"_index":291,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@req",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/request-response.html":{}}}],["gethello(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getproviders",{"_index":220,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gets",{"_index":2332,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gettemplate",{"_index":288,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["gettemplate(templatename",{"_index":295,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["getting",{"_index":732,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["getuserbyid",{"_index":609,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@req",{"_index":676,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(req",{"_index":619,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers",{"_index":610,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@req",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(req",{"_index":622,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1",{"_index":611,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1(@req",{"_index":655,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv1(req",{"_index":625,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2",{"_index":612,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2(@req",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersv2(req",{"_index":628,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":992,"title":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["git's",{"_index":1873,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["github",{"_index":1145,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["give",{"_index":1429,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["given",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["gives",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["global",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["globally",{"_index":2655,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["go",{"_index":2243,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["going",{"_index":1972,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["good",{"_index":1778,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["goodwill",{"_index":1526,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1576,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1378,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1313,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1282,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1380,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1591,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":2654,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["grossly",{"_index":1514,"title":{},"body":{"license.html":{}}}],["group",{"_index":1161,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["grunt",{"_index":1078,"title":{},"body":{"index.html":{}}}],["guarantee",{"_index":2306,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["guard",{"_index":408,"title":{"guards/RequestGuard.html":{}},"body":{"coverage.html":{},"index.html":{},"overview.html":{},"additional-documentation/modules/request-response.html":{}}}],["guards",{"_index":410,"title":{},"body":{"guards/RequestGuard.html":{},"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["guess",{"_index":2270,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["gui",{"_index":2682,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["guidelines",{"_index":750,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["guiding",{"_index":1245,"title":{},"body":{"index.html":{}}}],["gulp",{"_index":1079,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["haml",{"_index":1928,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["handle",{"_index":2411,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["handler",{"_index":959,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["handling",{"_index":424,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["harmless",{"_index":1550,"title":{},"body":{"license.html":{}}}],["header",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heap",{"_index":2574,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["hear",{"_index":949,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":1926,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["hello",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1823,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{}}}],["helper",{"_index":422,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["helpers",{"_index":419,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules/pattern.html":{}}}],["helpful",{"_index":1780,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/pattern.html":{}}}],["helps",{"_index":751,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["hence",{"_index":1952,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["here",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["hereby",{"_index":1379,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1469,"title":{},"body":{"license.html":{}}}],["high",{"_index":1923,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["higher",{"_index":2147,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["hold",{"_index":1549,"title":{},"body":{"license.html":{}}}],["home",{"_index":1888,"title":{},"body":{"additional-documentation/modules.html":{}}}],["hooks",{"_index":2364,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["host",{"_index":252,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["hostname",{"_index":2427,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["html",{"_index":353,"title":{},"body":{"injectables/EmailHandlerService.html":{},"miscellaneous/variables.html":{}}}],["htmlbody",{"_index":372,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{}}}],["http",{"_index":83,"title":{},"body":{"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://localhost:5000/api/docs",{"_index":2362,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["http://nodejs.org/api/assert.html",{"_index":2533,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/buffer.html",{"_index":2568,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/child_process.html",{"_index":2607,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/console.html",{"_index":2508,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/fs.html",{"_index":2553,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/globals.html",{"_index":2505,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/http.html",{"_index":2542,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/modules.html",{"_index":2523,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/os.html",{"_index":2621,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/querystring.html",{"_index":2550,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/stream.html",{"_index":2583,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/timers.html",{"_index":2513,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/url.htm",{"_index":2546,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://nodejs.org/api/util.html",{"_index":2559,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["http://www.apache.org/licenses",{"_index":1267,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1574,"title":{},"body":{"license.html":{}}}],["https",{"_index":2544,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://127.0.0.1:5500",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.docker.com/config/containers/resource_constraints",{"_index":2417,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://docs.docker.com/docker",{"_index":978,"title":{},"body":{"index.html":{}}}],["https://example1.com",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://example2.com",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com",{"_index":1855,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["https://github.com/definitelytyped/definitelytyped/issues/46639",{"_index":2447,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://github.com/juliandavidmr/awesome",{"_index":2720,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["https://github.com/neosoft",{"_index":993,"title":{},"body":{"index.html":{}}}],["https://github.com/nestjs/nest/issues/4953",{"_index":2441,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://learn.nestjs.com/p/fundamentals",{"_index":2719,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["https://medium.com/@neosofttech",{"_index":1258,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":984,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/api/crypto.html",{"_index":2589,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://nodejs.org/api/zlib.html",{"_index":2588,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["https://nodejs.org/en",{"_index":970,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/57469252/is",{"_index":2457,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://stackoverflow.com/questions/63330265/getting",{"_index":2445,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["https://www.devglan.com/online",{"_index":2341,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["https://www.docker.com",{"_index":974,"title":{},"body":{"index.html":{}}}],["https://www.meetup.com/neosoft",{"_index":1255,"title":{},"body":{"index.html":{}}}],["https://www.neosofttech.com",{"_index":1251,"title":{},"body":{"index.html":{}}}],["https://www.pgadmin.org",{"_index":2683,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["husky",{"_index":958,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["i.e",{"_index":2114,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["iapm",{"_index":2320,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["id",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["idea",{"_index":1811,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["identical",{"_index":2090,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["identification",{"_index":1568,"title":{},"body":{"license.html":{}}}],["identified",{"_index":1805,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["identifier",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":2491,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["identifying",{"_index":1559,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["ignoreexpiration",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ii",{"_index":1302,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1309,"title":{},"body":{"license.html":{}}}],["image",{"_index":1041,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["images",{"_index":1024,"title":{"additional-documentation/miscellaneous/clean-docker-images.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["imailauth",{"_index":367,"title":{"interfaces/IMailAuth.html":{}},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailconfig",{"_index":292,"title":{"interfaces/IMailConfig.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailoptions",{"_index":302,"title":{"interfaces/IMailOptions.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["imailresponse",{"_index":309,"title":{"interfaces/IMailResponse.html":{}},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["implemenetation",{"_index":2354,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["implement",{"_index":2255,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["implementation",{"_index":2067,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["implemented",{"_index":929,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{}}}],["implementing",{"_index":1832,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["implements",{"_index":86,"title":{},"body":{"injectables/AppLogger.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["implications",{"_index":2526,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["implied",{"_index":1494,"title":{},"body":{"license.html":{}}}],["implies",{"_index":2280,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["important",{"_index":941,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["imported",{"_index":1944,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["importing",{"_index":1954,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["impossible",{"_index":2102,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["improvements",{"_index":1821,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["improves",{"_index":2393,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["improving",{"_index":1367,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1524,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1520,"title":{},"body":{"license.html":{}}}],["include",{"_index":1344,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["included",{"_index":1331,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["includes",{"_index":1443,"title":{},"body":{"license.html":{}}}],["including",{"_index":1147,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{}}}],["inclusion",{"_index":1352,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["incoming",{"_index":2126,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["incorporated",{"_index":1376,"title":{},"body":{"license.html":{}}}],["incorrectly",{"_index":2442,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["incurred",{"_index":1551,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1547,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1538,"title":{},"body":{"license.html":{}}}],["indentation",{"_index":1844,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["independent",{"_index":1951,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2692,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["indicated",{"_index":1330,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1294,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1092,"title":{},"body":{"index.html":{},"license.html":{}}}],["inestapplication",{"_index":876,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["inferential",{"_index":2079,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["influenced",{"_index":1927,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/enumerations.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["information",{"_index":1560,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["informational",{"_index":1454,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1406,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1420,"title":{},"body":{"license.html":{}}}],["init",{"_index":2418,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initdb.d",{"_index":2422,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initdb.d/init.sql",{"_index":2434,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["initial",{"_index":2275,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["initialization",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["initialize",{"_index":2503,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inject",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["injectable",{"_index":47,"title":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":48,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":2143,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["injection",{"_index":2044,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["injections",{"_index":2043,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["injector",{"_index":2673,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["injectrepository",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{}}}],["injectrepository(userdbrepository",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userdbrepository,'mongodb_connection",{"_index":2037,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["input",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inputencoding",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["inputs",{"_index":404,"title":{},"body":{"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["inputs[key",{"_index":469,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["inserts",{"_index":2689,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inside",{"_index":1986,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["insomnia/postman",{"_index":2658,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inspect",{"_index":2525,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector",{"_index":2529,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector(https://github.com/node",{"_index":2527,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["inspector/node",{"_index":2528,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["install",{"_index":975,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["installation",{"_index":996,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["installcreate",{"_index":1000,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1018,"title":{},"body":{"index.html":{}}}],["installing",{"_index":2170,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instance",{"_index":2459,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["instanceof",{"_index":453,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["instances",{"_index":2679,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instantiate",{"_index":2665,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instantiated",{"_index":2672,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["instead",{"_index":2083,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["institute",{"_index":1410,"title":{},"body":{"license.html":{}}}],["instruction",{"_index":1934,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["integers",{"_index":2569,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["integrated",{"_index":955,"title":{},"body":{"index.html":{}}}],["integrates",{"_index":1997,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["integrating",{"_index":1988,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["integration",{"_index":1215,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["integrity",{"_index":2308,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["intend",{"_index":2178,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["intentionally",{"_index":1350,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1874,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["interceptors",{"_index":2707,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["interface",{"_index":366,"title":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{}},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{},"coverage.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["interface(cli",{"_index":926,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":311,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"interfaces/UserRepository.html":{},"license.html":{},"overview.html":{},"additional-documentation/modules/pattern.html":{}}}],["interfaces/interfaces.ts",{"_index":369,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["internal",{"_index":2429,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["internally",{"_index":2312,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["introducing",{"_index":2684,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["introduction",{"_index":2488,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["inversion",{"_index":2204,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["inverts",{"_index":2209,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["invite",{"_index":2640,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invited",{"_index":2642,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invites",{"_index":2646,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["invoked",{"_index":1110,"title":{},"body":{"index.html":{}}}],["involved",{"_index":748,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["io",{"_index":2240,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ioc",{"_index":2205,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["irrevocable",{"_index":1388,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":537,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["isemail",{"_index":554,"title":{},"body":{"entities/User.html":{}}}],["isemail()@column",{"_index":544,"title":{},"body":{"entities/User.html":{}}}],["isglobal",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["issue",{"_index":761,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["issues",{"_index":1234,"title":{"additional-documentation/miscellaneous/known-issues.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["issues/discussions",{"_index":1246,"title":{},"body":{"index.html":{}}}],["it's",{"_index":1118,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{}}}],["it('should",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["it('testing",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":359,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{}}}],["iterated",{"_index":2276,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["iterations",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2193,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["it’s",{"_index":2323,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["iv",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["ivs",{"_index":2289,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["january",{"_index":1265,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":912,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["jest",{"_index":1050,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["joi",{"_index":2115,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["js",{"_index":880,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["json",{"_index":1908,"title":{},"body":{"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["json.parse(str",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juice",{"_index":304,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{}}}],["juice(html",{"_index":363,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["jwks",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":375,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":175,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":2268,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["kept",{"_index":1976,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["key",{"_index":468,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/crypto.html":{}}}],["keylen",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1180,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["kind",{"_index":1493,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":2186,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["know",{"_index":2723,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["knowledge",{"_index":2649,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["known",{"_index":1233,"title":{"additional-documentation/miscellaneous/known-issues.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["knows",{"_index":2269,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["label",{"_index":90,"title":{},"body":{"injectables/AppLogger.html":{}}}],["lack",{"_index":2054,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["language",{"_index":1575,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["large",{"_index":935,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["later",{"_index":2203,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["latest",{"_index":1785,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["launch",{"_index":2074,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["law",{"_index":1489,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1416,"title":{},"body":{"license.html":{}}}],["layer",{"_index":2183,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["layers",{"_index":2181,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["lazy",{"_index":933,"title":{},"body":{"index.html":{}}}],["leak",{"_index":2246,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["learn",{"_index":922,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1283,"title":{},"body":{"license.html":{}}}],["length",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["let's",{"_index":2228,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["lets",{"_index":2048,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["level",{"_index":93,"title":{},"body":{"injectables/AppLogger.html":{},"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{}}}],["levels",{"_index":1894,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["leverage",{"_index":1983,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["leveraging",{"_index":2351,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["liability",{"_index":1508,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1517,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":908,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["library",{"_index":1930,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["libs/core",{"_index":1911,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["libuv",{"_index":2498,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["licensable",{"_index":1404,"title":{},"body":{"license.html":{}}}],["license",{"_index":1262,"title":{"license.html":{}},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["licensed",{"_index":1571,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1421,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1278,"title":{},"body":{"license.html":{}}}],["limit",{"_index":531,"title":{},"body":{"modules/ThrottleModule.html":{},"index.html":{}}}],["limitation",{"_index":1495,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1577,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1317,"title":{},"body":{"license.html":{}}}],["limiter/throttle.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["limiter/throttle.module.ts",{"_index":523,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["line",{"_index":925,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["lines",{"_index":1804,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["link",{"_index":1347,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["lint",{"_index":1101,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["linting",{"_index":1196,"title":{},"body":{"index.html":{}}}],["list",{"_index":1094,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["listener",{"_index":2627,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["listeners",{"_index":2580,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["lists",{"_index":1361,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1411,"title":{},"body":{"license.html":{}}}],["live",{"_index":1123,"title":{},"body":{"index.html":{}}}],["load",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{},"modules/TestCoreModule.html":{}}}],["loaded",{"_index":878,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":266,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["locally",{"_index":1877,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["lodash",{"_index":433,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["log",{"_index":55,"title":{},"body":{"injectables/AppLogger.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["log(message",{"_index":69,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logged",{"_index":1222,"title":{},"body":{"index.html":{}}}],["logger",{"_index":52,"title":{"additional-documentation/modules/logger.html":{}},"body":{"injectables/AppLogger.html":{},"controllers/TestController.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{}}}],["loggerservice",{"_index":75,"title":{},"body":{"injectables/AppLogger.html":{}}}],["logging",{"_index":1892,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["logic",{"_index":2242,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["logical",{"_index":1869,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["login",{"_index":2636,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["logincredentials",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginresponse",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loginresponse.body.data.access_token",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":2637,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["logs",{"_index":1895,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["logs/app.log",{"_index":1900,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["looking",{"_index":1055,"title":{},"body":{"index.html":{}}}],["looks",{"_index":2482,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["loop",{"_index":2492,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["loosely",{"_index":2251,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["loss",{"_index":1525,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1531,"title":{},"body":{"license.html":{}}}],["lot",{"_index":1836,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/pattern.html":{}}}],["love",{"_index":948,"title":{},"body":{"index.html":{}}}],["low",{"_index":2129,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["ls",{"_index":2467,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["lts",{"_index":971,"title":{},"body":{"index.html":{}}}],["m",{"_index":2377,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["mac",{"_index":977,"title":{},"body":{"index.html":{}}}],["mac/install",{"_index":979,"title":{},"body":{"index.html":{}}}],["machine",{"_index":1019,"title":{},"body":{"index.html":{}}}],["made",{"_index":1329,"title":{},"body":{"license.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mail",{"_index":306,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/mailer.html":{}}}],["mail.options",{"_index":325,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailconfig",{"_index":294,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailconfig.fromemail",{"_index":326,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailer",{"_index":310,"title":{"additional-documentation/modules/mailer.html":{}},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["mailer.module.ts",{"_index":1953,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["mailer.service",{"_index":285,"title":{},"body":{"modules/EmailHandlerModule.html":{}}}],["mailer.ts",{"_index":1945,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["mailing",{"_index":1360,"title":{},"body":{"license.html":{}}}],["mailoptions",{"_index":324,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.attachments",{"_index":338,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.html",{"_index":335,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["mailoptions.text",{"_index":352,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["main",{"_index":916,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["maintainer",{"_index":1056,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":2192,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["major",{"_index":1884,"title":{},"body":{"additional-documentation/modules.html":{}}}],["make",{"_index":742,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["makes",{"_index":1090,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["making",{"_index":1315,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["malfunction",{"_index":1529,"title":{},"body":{"license.html":{}}}],["malicious",{"_index":2049,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["manage",{"_index":1080,"title":{},"body":{"index.html":{}}}],["managed",{"_index":1364,"title":{},"body":{"license.html":{}}}],["management",{"_index":1297,"title":{},"body":{"license.html":{},"additional-documentation/modules.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["manager",{"_index":2502,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["managing",{"_index":756,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["manually",{"_index":2134,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["many",{"_index":2000,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["map",{"_index":2440,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mapper",{"_index":1995,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["maps",{"_index":2028,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["marked",{"_index":1370,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1478,"title":{},"body":{"license.html":{}}}],["master",{"_index":923,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["mature",{"_index":1993,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mbind",{"_index":2406,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mean",{"_index":1274,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["meaning",{"_index":2397,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["means",{"_index":1291,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1320,"title":{},"body":{"license.html":{}}}],["media",{"_index":1325,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1257,"title":{},"body":{"index.html":{},"license.html":{}}}],["meet",{"_index":1428,"title":{},"body":{"license.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["meetup",{"_index":1254,"title":{},"body":{"index.html":{}}}],["memory",{"_index":2571,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["mentioned",{"_index":1917,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["merchantability",{"_index":1497,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1346,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1839,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["merged",{"_index":1872,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["merits",{"_index":1810,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["message",{"_index":65,"title":{},"body":{"injectables/AppLogger.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["message)eg",{"_index":1903,"title":{},"body":{"additional-documentation/modules/logger.html":{}}}],["messages",{"_index":2369,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["meta",{"_index":440,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"additional-documentation/modules/request-response.html":{}}}],["metadata",{"_index":863,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["method",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["microservices",{"_index":2653,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["microsoft",{"_index":2003,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["middleware",{"_index":2169,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["migration",{"_index":1231,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":269,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["migrationsdir",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":271,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minimize",{"_index":2117,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["miscellaneous",{"_index":869,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/miscellaneous.html":{}}}],["missing",{"_index":2401,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["mocha",{"_index":1051,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["mock_error",{"_index":1585,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_nocontent",{"_index":1586,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_success",{"_index":1584,"title":{},"body":{"classes/mockResponse.html":{}}}],["mock_withmeta",{"_index":1587,"title":{},"body":{"classes/mockResponse.html":{}}}],["mockrequest",{"_index":822,"title":{"classes/mockRequest.html":{}},"body":{"coverage.html":{},"classes/mockRequest.html":{}}}],["mockresponse",{"_index":824,"title":{"classes/mockResponse.html":{}},"body":{"coverage.html":{},"classes/mockResponse.html":{}}}],["mode",{"_index":1046,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["model",{"_index":2530,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["models",{"_index":2648,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["modern",{"_index":2060,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["modes",{"_index":2316,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["modifications",{"_index":1316,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1034,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":1455,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["modifying",{"_index":1460,"title":{},"body":{"license.html":{}}}],["module",{"_index":110,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["module(http",{"_index":1165,"title":{},"body":{"index.html":{}}}],["module/scope",{"_index":2374,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["modulefixture",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulefixture.createnestapplication",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":112,"title":{"modules.html":{},"additional-documentation/modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["moment",{"_index":738,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["mongo",{"_index":2125,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb",{"_index":272,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mongodb.database",{"_index":2127,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb@3.7.0",{"_index":2014,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mongodb_connection",{"_index":274,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["mongoose",{"_index":2716,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mongosanitize",{"_index":2172,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["monitoring",{"_index":2023,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["more",{"_index":1053,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["mostly",{"_index":2104,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["mount",{"_index":2420,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["much",{"_index":1818,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["multi",{"_index":2604,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["multiple",{"_index":2180,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["mydata",{"_index":503,"title":{},"body":{"controllers/TestController.html":{}}}],["mykey",{"_index":504,"title":{},"body":{"controllers/TestController.html":{}}}],["myriad",{"_index":901,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":251,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql2",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["mysql2for",{"_index":2009,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["mysql:/var/lib/mysql",{"_index":2435,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql:8",{"_index":2424,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql:8.0.15",{"_index":2413,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["mysql_connection",{"_index":2016,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["myvalue",{"_index":505,"title":{},"body":{"controllers/TestController.html":{}}}],["name",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["names",{"_index":1477,"title":{},"body":{"license.html":{}}}],["namespaces",{"_index":2699,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["navigate",{"_index":1856,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["nearly",{"_index":2089,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["necessarily",{"_index":1405,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1156,"title":{},"body":{"index.html":{}}}],["need",{"_index":1017,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["needed",{"_index":2677,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["needs",{"_index":2133,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["negligence",{"_index":1512,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1515,"title":{},"body":{"license.html":{}}}],["neosoft_logo",{"_index":344,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["neosoft_logo.png",{"_index":339,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["neosofttech",{"_index":1253,"title":{},"body":{"index.html":{}}}],["nest",{"_index":425,"title":{"additional-documentation/trainings/nest-js-for-beginners.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nest_logo",{"_index":347,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nest_logo.png",{"_index":345,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nestjs",{"_index":919,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nestjs.gitquick",{"_index":995,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":2449,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/common@latest",{"_index":2451,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"injectables/AppLogger.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"dependencies.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/config@latest",{"_index":2452,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/core",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{},"modules/ThrottleModule.html":{},"dependencies.html":{}}}],["nestjs/core@latest",{"_index":2453,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/jwt",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":837,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/swagger",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateUserDto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["nestjs/testing",{"_index":2456,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["nestjs/throttler",{"_index":527,"title":{},"body":{"modules/ThrottleModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":249,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"additional-documentation/modules/database.html":{}}}],["nestjs/typeorm@latest",{"_index":2455,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["networks",{"_index":2428,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["neutral",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["never",{"_index":2286,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["new",{"_index":98,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{},"injectables/UserDbRepository.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["newly",{"_index":1857,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["next",{"_index":997,"title":{},"body":{"index.html":{}}}],["nice",{"_index":1075,"title":{},"body":{"index.html":{}}}],["nocontent",{"_index":456,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{}}}],["node",{"_index":910,"title":{"additional-documentation/trainings/node-js-for-beginners.html":{}},"body":{"index.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["node.js",{"_index":891,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["node_env=dev",{"_index":1011,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1151,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1261,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["nodemailer",{"_index":305,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{},"additional-documentation/modules/mailer.html":{}}}],["nodemailer.createtransport",{"_index":364,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailer.sentmessageinfo",{"_index":357,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailer/lib/mailer",{"_index":307,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["nodemailerthe",{"_index":1932,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["non",{"_index":1383,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["nonce",{"_index":2265,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["nonces",{"_index":2292,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["noncompliant",{"_index":2335,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["none",{"_index":913,"title":{},"body":{"index.html":{}}}],["normal",{"_index":2091,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["normally",{"_index":1451,"title":{},"body":{"license.html":{}}}],["nosql",{"_index":1990,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["note",{"_index":1136,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["notes",{"_index":2647,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["nothing",{"_index":1468,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1088,"title":{},"body":{"index.html":{},"license.html":{}}}],["notices",{"_index":1435,"title":{},"body":{"license.html":{}}}],["notorious",{"_index":2165,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["notwithstanding",{"_index":1467,"title":{},"body":{"license.html":{}}}],["now",{"_index":1958,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["npm",{"_index":972,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["npx",{"_index":1200,"title":{},"body":{"index.html":{}}}],["null",{"_index":452,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":370,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["nvm",{"_index":2504,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["oaep",{"_index":2334,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["object",{"_index":405,"title":{},"body":{"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["objectidcolumn",{"_index":556,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{}}}],["objective",{"_index":1891,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["objects",{"_index":2151,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["obligations",{"_index":1539,"title":{},"body":{"license.html":{}}}],["observable",{"_index":431,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["observing",{"_index":2086,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["obtain",{"_index":1573,"title":{},"body":{"license.html":{}}}],["ocb",{"_index":2321,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["occurs",{"_index":1792,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["od",{"_index":1971,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["offending",{"_index":2168,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["offer",{"_index":1399,"title":{},"body":{"license.html":{}}}],["official",{"_index":1202,"title":{},"body":{"index.html":{}}}],["older",{"_index":2011,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["omit",{"_index":432,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["omit(data",{"_index":460,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["once",{"_index":2282,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["one",{"_index":1446,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["open",{"_index":758,"title":{"additional-documentation/modules/open-api/swagger.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["openapi",{"_index":2344,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["operating",{"_index":2618,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["operation",{"_index":2164,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["operations",{"_index":2639,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["operator",{"_index":2163,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["operators",{"_index":2162,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["opinions",{"_index":1809,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["option",{"_index":1038,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["optional",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionalare",{"_index":2484,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["options",{"_index":296,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["options.body",{"_index":351,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.htmlbody",{"_index":354,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.replace",{"_index":337,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.subject",{"_index":329,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.templatename",{"_index":334,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["options.to",{"_index":327,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["oracle",{"_index":2002,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["orchestrated",{"_index":1067,"title":{},"body":{"index.html":{}}}],["order",{"_index":741,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/crypto.html":{}}}],["oriented",{"_index":2652,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["origin",{"_index":1483,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["original",{"_index":1343,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["orm",{"_index":1996,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["orm's",{"_index":2144,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["otherwise",{"_index":1301,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["out",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{}}}],["output",{"_index":1126,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{}}}],["outputencoding",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["outside",{"_index":2573,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["outstanding",{"_index":1307,"title":{},"body":{"license.html":{}}}],["over",{"_index":1882,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/database.html":{}}}],["overview",{"_index":1592,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["owner",{"_index":1280,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["ownership",{"_index":1303,"title":{},"body":{"license.html":{}}}],["p",{"_index":1204,"title":{},"body":{"index.html":{}}}],["package",{"_index":832,"title":{"dependencies.html":{}},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["package.json",{"_index":1082,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["packages",{"_index":998,"title":{},"body":{"index.html":{}}}],["padding",{"_index":2303,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["page",{"_index":1566,"title":{"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["pagination",{"_index":2660,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["param",{"_index":443,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["param('id",{"_index":677,"title":{},"body":{"controllers/UsersController.html":{}}}],["paramenters",{"_index":1968,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["parameter",{"_index":1969,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["parameterized",{"_index":2131,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["parse",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(id",{"_index":590,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["parsing",{"_index":2548,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["part",{"_index":1442,"title":{},"body":{"license.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["partial",{"_index":1578,"title":{},"body":{"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["particular",{"_index":1499,"title":{},"body":{"license.html":{},"additional-documentation/modules/crypto.html":{}}}],["party",{"_index":903,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["pass",{"_index":320,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["passed",{"_index":1910,"title":{},"body":{"additional-documentation/modules/request-response.html":{}}}],["passport",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["passwords",{"_index":1182,"title":{},"body":{"index.html":{}}}],["patch",{"_index":640,"title":{},"body":{"controllers/UsersController.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["patch('/users/2",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":687,"title":{},"body":{"controllers/UsersController.html":{}}}],["patches",{"_index":763,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["patent",{"_index":1396,"title":{},"body":{"license.html":{}}}],["path",{"_index":340,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["paths",{"_index":1194,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pattern",{"_index":1226,"title":{"additional-documentation/modules/pattern.html":{}},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["patterns",{"_index":2472,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["payload",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["payload.firstname",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloads",{"_index":2085,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["per",{"_index":1987,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["percent",{"_index":1305,"title":{},"body":{"license.html":{}}}],["perf",{"_index":2392,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["perform",{"_index":1393,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["performance",{"_index":1924,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["performs",{"_index":1099,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1475,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1312,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2407,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["perpetual",{"_index":1381,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1441,"title":{},"body":{"license.html":{}}}],["phases",{"_index":2493,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["pipes",{"_index":2710,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pkcs5/7",{"_index":2336,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["place",{"_index":2238,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["placed",{"_index":1003,"title":{},"body":{"index.html":{}}}],["places",{"_index":1447,"title":{},"body":{"license.html":{}}}],["plaintext",{"_index":2330,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["plate",{"_index":1881,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["platform",{"_index":906,"title":{},"body":{"index.html":{}}}],["please",{"_index":736,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["pluggable",{"_index":2470,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["plugin",{"_index":2468,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["point",{"_index":1108,"title":{},"body":{"index.html":{}}}],["pointcuts",{"_index":2708,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["pool",{"_index":2500,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["popen",{"_index":2610,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["port",{"_index":254,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["porting",{"_index":1834,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["portions",{"_index":2212,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["ports",{"_index":2430,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["possibility",{"_index":1534,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1820,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["post",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('generatetoken",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('generatetoken')@apibody({type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apicreatedresponse({description",{"_index":632,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":2681,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["postgres/mongo",{"_index":2633,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["postgresql",{"_index":2001,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["postman",{"_index":2650,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["potential",{"_index":1807,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["power",{"_index":1292,"title":{},"body":{"license.html":{}}}],["practical",{"_index":2536,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["practice",{"_index":2015,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["pre",{"_index":2363,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["preference",{"_index":2262,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["preferred",{"_index":767,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/contribution.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prepare",{"_index":1390,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2111,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["prerequisite",{"_index":2657,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["prerequisites",{"_index":969,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["present",{"_index":1889,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["pretteri",{"_index":1237,"title":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}},"body":{"index.html":{},"additional-documentation/miscellaneous.html":{}}}],["prettier",{"_index":957,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["prevent",{"_index":2107,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["primarygeneratedcolumn",{"_index":557,"title":{},"body":{"entities/User.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["primarygeneratedcolumn()@objectidcolumn",{"_index":548,"title":{},"body":{"entities/User.html":{}}}],["principle",{"_index":2208,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["principles",{"_index":932,"title":{},"body":{"index.html":{}}}],["principlesgetting",{"_index":966,"title":{},"body":{"index.html":{}}}],["printed",{"_index":1565,"title":{},"body":{"license.html":{}}}],["printf",{"_index":91,"title":{},"body":{"injectables/AppLogger.html":{}}}],["private",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{}}}],["probably",{"_index":1052,"title":{},"body":{"index.html":{}}}],["problem",{"_index":917,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["procedural",{"_index":2216,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["proceed",{"_index":2006,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["process",{"_index":744,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process(http://nodejs.org/api/process.html",{"_index":2606,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.cwd()}/config/env/.env",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{}}}],["process.cwd()}/config/env/.env.${process.env.node_env",{"_index":224,"title":{},"body":{"modules/CoreModule.html":{}}}],["process.cwd()}/config/env/test.env",{"_index":521,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["process.env.db_database",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.email_host",{"_index":1948,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.email_port",{"_index":1949,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.secret_jwt_key",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.user_email",{"_index":1947,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.env.user_password",{"_index":1950,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["process.nexttick",{"_index":2494,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stderr",{"_index":2598,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stdin",{"_index":2595,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["process.stdout",{"_index":2597,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["processing",{"_index":2605,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["product",{"_index":1479,"title":{},"body":{"license.html":{}}}],["production",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["program",{"_index":2213,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["programming",{"_index":2207,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["progressive",{"_index":928,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":2157,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["project",{"_index":735,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["project's",{"_index":1817,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["projects",{"_index":2501,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["prominent",{"_index":1434,"title":{},"body":{"license.html":{}}}],["promise",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/request-response.html":{}}}],["promises",{"_index":2541,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["properties",{"_index":50,"title":{},"body":{"injectables/AppLogger.html":{},"classes/CreateUserDto.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/ValidateUserDto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["protect",{"_index":2706,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["protocol",{"_index":1915,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["provide",{"_index":533,"title":{},"body":{"modules/ThrottleModule.html":{},"license.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["provided",{"_index":1209,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["provider",{"_index":2695,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["providers",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/ThrottleModule.html":{},"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["provides",{"_index":887,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["providing",{"_index":2231,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["proxy",{"_index":1225,"title":{},"body":{"index.html":{}}}],["ps",{"_index":2464,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["public",{"_index":51,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["publicly",{"_index":1391,"title":{},"body":{"license.html":{}}}],["pug",{"_index":308,"title":{},"body":{"injectables/EmailHandlerService.html":{},"dependencies.html":{},"additional-documentation/modules/mailer.html":{}}}],["pug.renderfile(`${__dirname}/email",{"_index":361,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["pugfor",{"_index":1935,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["pull",{"_index":773,"title":{"additional-documentation/contribution/pull-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["purpose",{"_index":1365,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["purpose,if",{"_index":2148,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["purposes",{"_index":1289,"title":{},"body":{"license.html":{}}}],["push",{"_index":1878,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["puts",{"_index":2146,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["putting",{"_index":2631,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["q",{"_index":2465,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["qualify",{"_index":2291,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["queries",{"_index":2062,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["query",{"_index":2066,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["questions",{"_index":2099,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["quick",{"_index":954,"title":{},"body":{"index.html":{}}}],["random",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["rate",{"_index":1228,"title":{},"body":{"index.html":{}}}],["raw",{"_index":2137,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["read",{"_index":2557,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["readable",{"_index":1444,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["ready",{"_index":964,"title":{},"body":{"index.html":{}}}],["reason",{"_index":314,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{}}}],["reasonable",{"_index":1480,"title":{},"body":{"license.html":{}}}],["rebase",{"_index":1875,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["rebuild",{"_index":1040,"title":{},"body":{"index.html":{}}}],["receive",{"_index":2214,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["received",{"_index":1374,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["recipients",{"_index":1430,"title":{},"body":{"license.html":{}}}],["reciprocate",{"_index":759,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["recommend",{"_index":1564,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":2314,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["reconstruct",{"_index":2084,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["record",{"_index":297,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockRequest.html":{}}}],["recreate",{"_index":1042,"title":{},"body":{"index.html":{}}}],["redistributing",{"_index":1503,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1425,"title":{},"body":{"license.html":{}}}],["reduced",{"_index":1799,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["ref",{"_index":2244,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["refactor",{"_index":2394,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["refactoring",{"_index":1833,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["refer",{"_index":2187,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["references",{"_index":2718,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["reflect",{"_index":862,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["refrences",{"_index":2352,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["regarding",{"_index":1473,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["register",{"_index":2635,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["registeras('mailer",{"_index":1946,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["registered",{"_index":2033,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["registration",{"_index":2700,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["rejects",{"_index":313,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["related",{"_index":2188,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["relation",{"_index":2685,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["relational",{"_index":1994,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["relations",{"_index":2686,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["relevant",{"_index":1802,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/crypto.html":{}}}],["remain",{"_index":1129,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["remote",{"_index":1860,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["remotes",{"_index":1853,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["remove",{"_index":704,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{}}}],["remove(id",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["removealllisteners",{"_index":2578,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["removelistener",{"_index":2577,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["replace",{"_index":373,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/database.html":{}}}],["replace:{'name",{"_index":1967,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["replaced",{"_index":1558,"title":{},"body":{"license.html":{}}}],["repo",{"_index":1854,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["reponses",{"_index":2257,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["report",{"_index":1789,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["reported",{"_index":1783,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["reporting",{"_index":2471,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["reports",{"_index":770,"title":{"additional-documentation/contribution/bug-reports.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["repos",{"_index":1186,"title":{},"body":{"index.html":{}}}],["repositories",{"_index":2032,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["repository",{"_index":561,"title":{},"body":{"injectables/UserDbRepository.html":{},"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["represent",{"_index":1341,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1359,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1389,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{}}}],["reproducing",{"_index":1484,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1270,"title":{},"body":{"license.html":{}}}],["req",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["req.body",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"additional-documentation/modules/database.html":{}}}],["req.headers['x",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.params",{"_index":2155,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["req.query",{"_index":2154,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["request",{"_index":11,"title":{"interfaces/Request.html":{},"additional-documentation/modules/request-response.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["request(app.gethttpserver",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).get('/api/docs",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).post('/auth/generatetoken').send(logincredentials",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request(app.gethttpserver()).post('/users').send(userstub",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.all",{"_index":472,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.body",{"_index":466,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.params",{"_index":467,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["request.query",{"_index":465,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["requestguard",{"_index":409,"title":{"guards/RequestGuard.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["requests",{"_index":771,"title":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{}},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["require",{"_index":2263,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["require('fs",{"_index":2554,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('http",{"_index":2543,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('os",{"_index":2620,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('path",{"_index":2560,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('querystring",{"_index":2552,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["require('url",{"_index":2549,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["required",{"_index":999,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["required\"parameterized",{"_index":2132,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["required.this",{"_index":2149,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["requiredgenerates",{"_index":2130,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["requirements",{"_index":1847,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["requires",{"_index":2669,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["res",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["res.error(e",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["res.nocontent",{"_index":507,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success('deletion",{"_index":685,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('response",{"_index":656,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('success",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success('updation",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success(logger",{"_index":517,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success(req.all",{"_index":509,"title":{},"body":{"controllers/TestController.html":{}}}],["res.success(reswithacesstoken",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.success(this.appservice.gethello",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/request-response.html":{}}}],["res.success(userbyid",{"_index":680,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.success(users",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.withmeta",{"_index":502,"title":{},"body":{"controllers/TestController.html":{}}}],["reserved",{"_index":2161,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["reset",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["resolution",{"_index":2547,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["resolve",{"_index":312,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["resources",{"_index":2714,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["respect",{"_index":753,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["respective",{"_index":2041,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["respond",{"_index":1163,"title":{},"body":{"index.html":{}}}],["response",{"_index":13,"title":{"interfaces/Response.html":{},"additional-documentation/modules/request-response.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["response.error",{"_index":462,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.nocontent",{"_index":463,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.status(status).json(result",{"_index":448,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.status(statuscodes.no_content).end",{"_index":457,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.success",{"_index":461,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["response.withmeta",{"_index":464,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["responseresbody",{"_index":2446,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["responses",{"_index":2264,"title":{},"body":{"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["responsetype",{"_index":437,"title":{"interfaces/ResponseType.html":{}},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["responsibility",{"_index":1545,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":423,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"license.html":{}}}],["rest",{"_index":882,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["restart",{"_index":2458,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["restful",{"_index":2348,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["result",{"_index":446,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"injectables/UserDbRepository.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["resulting",{"_index":1319,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{},"additional-documentation/trainings/git-for-beginners.html":{}}}],["reswithacesstoken",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["retain",{"_index":1438,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2687,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["retrieved",{"_index":2094,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"contributing.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/modules/request-response.html":{}}}],["returned",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailHandlerService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"controllers/TestController.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{}}}],["reusable",{"_index":2218,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["reverse",{"_index":1224,"title":{},"body":{"index.html":{}}}],["review",{"_index":739,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{}}}],["revisions",{"_index":1338,"title":{},"body":{"license.html":{}}}],["right",{"_index":943,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1541,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["rimraf",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1835,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{}}}],["risks",{"_index":1505,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2463,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["roles",{"_index":2122,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["root",{"_index":1004,"title":{},"body":{"index.html":{},"additional-documentation/modules/logger.html":{}}}],["route",{"_index":2659,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["routes",{"_index":2664,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["royalty",{"_index":1386,"title":{},"body":{"license.html":{}}}],["rsa",{"_index":852,"title":{},"body":{"dependencies.html":{},"additional-documentation/modules/crypto.html":{}}}],["run",{"_index":990,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["runner",{"_index":1111,"title":{},"body":{"index.html":{}}}],["running",{"_index":1035,"title":{},"body":{"index.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["runs",{"_index":1096,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":434,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["s",{"_index":1205,"title":{},"body":{"index.html":{}}}],["safe",{"_index":2110,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["salt",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["same",{"_index":1109,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["sample",{"_index":1974,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["sample.pug",{"_index":1975,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["samples",{"_index":2405,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["sanitization",{"_index":2055,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["sanitize",{"_index":2124,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["sanitized",{"_index":2069,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["santosh",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["santoshshinde@gmail.com",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saucelabs",{"_index":2390,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["save",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["save(user",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{}}}],["saveuser",{"_index":613,"title":{},"body":{"controllers/UsersController.html":{}}}],["saveuser(@req",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{}}}],["saveuser(req",{"_index":631,"title":{},"body":{"controllers/UsersController.html":{}}}],["saving",{"_index":2249,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["saw",{"_index":2667,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scaffolding",{"_index":962,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":2142,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["schema",{"_index":1169,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["schemas",{"_index":2717,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scheme",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["schemes",{"_index":2294,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["scope",{"_index":1813,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scoped",{"_index":2698,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["scopes",{"_index":2382,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["script",{"_index":1085,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["scripts",{"_index":1069,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["search",{"_index":1782,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["searches",{"_index":2150,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["second",{"_index":1796,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["secret",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/modules/crypto.html":{}}}],["secretorkey",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1084,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["sections",{"_index":1275,"title":{},"body":{"license.html":{}}}],["secure",{"_index":365,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/crypto.html":{}}}],["security",{"_index":2047,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["see",{"_index":1083,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["seems",{"_index":1054,"title":{},"body":{"index.html":{}}}],["selected",{"_index":2008,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["self",{"_index":1938,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sell",{"_index":1400,"title":{},"body":{"license.html":{}}}],["semi",{"_index":2402,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["send",{"_index":1973,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["send(updateuserstub",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendemail",{"_index":289,"title":{},"body":{"injectables/EmailHandlerService.html":{},"additional-documentation/modules/mailer.html":{}}}],["sendemail(options",{"_index":301,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["sending",{"_index":1912,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["sendmail",{"_index":1963,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sense",{"_index":2274,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["sent",{"_index":1358,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["separable",{"_index":1345,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1120,"title":{},"body":{"index.html":{},"license.html":{}}}],["separation",{"_index":2175,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["series",{"_index":2098,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["serious",{"_index":2329,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["serve",{"_index":1104,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["server",{"_index":322,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["server.sendmail(mailoptions",{"_index":355,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["servers",{"_index":2616,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["serves",{"_index":1100,"title":{},"body":{"index.html":{}}}],["service",{"_index":1221,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["services",{"_index":1176,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["set",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["set('authorization",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setdescription(`api",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setimmediate(callback",{"_index":2520,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setinterval(callback",{"_index":2518,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setmaxlisteners",{"_index":2579,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["settimeout(callback",{"_index":2514,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setting",{"_index":1057,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["settings",{"_index":1144,"title":{},"body":{"index.html":{}}}],["settitle(config.get('app.name",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle(config.get(config.get('app.name",{"_index":2356,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["setup",{"_index":273,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["setupapiversioning",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setupapiversioning(app",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setupswagger(app",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["setversion(config.get('app.version",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion(config.get('app.vesrion",{"_index":2357,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["sha512",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1273,"title":{},"body":{"license.html":{}}}],["share",{"_index":1801,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["shares",{"_index":1308,"title":{},"body":{"license.html":{}}}],["sheet",{"_index":2722,"title":{},"body":{"additional-documentation/trainings/git-for-beginners.html":{}}}],["shinde",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ship",{"_index":1150,"title":{},"body":{"index.html":{}}}],["short",{"_index":1787,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["shouldcompress",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["shown",{"_index":2029,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["side",{"_index":911,"title":{},"body":{"index.html":{}}}],["sign",{"_index":2153,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["signal",{"_index":2295,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["significant",{"_index":1830,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["silently",{"_index":2412,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["silly",{"_index":84,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["similar",{"_index":2056,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["simple",{"_index":960,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["simply",{"_index":1086,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["single",{"_index":2495,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["skeleton",{"_index":881,"title":{},"body":{"index.html":{}}}],["skills",{"_index":2651,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["smtp",{"_index":1887,"title":{},"body":{"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{}}}],["snippet",{"_index":1981,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["socket",{"_index":2626,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["socket.io",{"_index":2623,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["sockets",{"_index":2591,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["software",{"_index":1318,"title":{},"body":{"license.html":{},"additional-documentation/modules/pattern.html":{}}}],["sole",{"_index":1544,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1500,"title":{},"body":{"license.html":{}}}],["solid",{"_index":931,"title":{},"body":{"index.html":{}}}],["solution",{"_index":2340,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["solutions",{"_index":1808,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["solve",{"_index":915,"title":{},"body":{"index.html":{}}}],["something",{"_index":1838,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["sorting",{"_index":2644,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EmailHandlerModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"modules/TestCoreModule.html":{},"modules/ThrottleModule.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"contributing.html":{},"index.html":{},"license.html":{},"classes/mockRequest.html":{},"classes/mockResponse.html":{},"additional-documentation/contribution.html":{}}}],["space",{"_index":2399,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["spec",{"_index":2676,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["special",{"_index":1519,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1143,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["specific/limited",{"_index":2123,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["specification",{"_index":2345,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["specified",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":1218,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{}}}],["spending",{"_index":940,"title":{},"body":{"index.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["sql",{"_index":1989,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["sqlite",{"_index":2004,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["src",{"_index":1124,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["src/.../api.response.dto.ts",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.versioning.ts",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../applogger.ts",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../bootstrap.ts",{"_index":874,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../compression.ts",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crypto.ts",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":873,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../providers.ts",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt.auth.guard.ts",{"_index":376,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:15",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:6",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/components",{"_index":1158,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/dto",{"_index":1166,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/entities",{"_index":1171,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/module_name.controllers.ts",{"_index":1177,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/module_name.module.ts",{"_index":1178,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/repository",{"_index":1174,"title":{},"body":{"index.html":{}}}],["src/components/${module_name}/services",{"_index":1175,"title":{},"body":{"index.html":{}}}],["src/components/users/constants/api.response.dto.ts",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/users/dto/create.user.dto.ts",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/create.user.dto.ts:10",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:13",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:16",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/create.user.dto.ts:7",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts",{"_index":536,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/update.user.dto.ts:10",{"_index":541,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts:13",{"_index":540,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/update.user.dto.ts:7",{"_index":538,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["src/components/users/dto/validate.user.dto.ts",{"_index":729,"title":{},"body":{"classes/ValidateUserDto.html":{},"coverage.html":{}}}],["src/components/users/dto/validate.user.dto.ts:10",{"_index":731,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["src/components/users/dto/validate.user.dto.ts:7",{"_index":730,"title":{},"body":{"classes/ValidateUserDto.html":{}}}],["src/components/users/entities/user.entity.ts",{"_index":543,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/components/users/entities/user.entity.ts:11",{"_index":547,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:14",{"_index":552,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:18",{"_index":545,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:21",{"_index":553,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:24",{"_index":551,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/entities/user.entity.ts:8",{"_index":549,"title":{},"body":{"entities/User.html":{}}}],["src/components/users/repository/db/user.repository.ts",{"_index":560,"title":{},"body":{"injectables/UserDbRepository.html":{},"coverage.html":{}}}],["src/components/users/repository/db/user.repository.ts:10",{"_index":567,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:15",{"_index":574,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:19",{"_index":572,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:23",{"_index":576,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:32",{"_index":569,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:39",{"_index":578,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/db/user.repository.ts:48",{"_index":571,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["src/components/users/repository/user.repository.ts",{"_index":599,"title":{},"body":{"interfaces/UserRepository.html":{},"coverage.html":{}}}],["src/components/users/repository/user.repository.ts:10",{"_index":604,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:11",{"_index":600,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:12",{"_index":605,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:13",{"_index":601,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:8",{"_index":603,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/repository/user.repository.ts:9",{"_index":602,"title":{},"body":{"interfaces/UserRepository.html":{}}}],["src/components/users/services/users.service.ts",{"_index":700,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/components/users/services/users.service.ts:11",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:17",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:21",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:25",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:29",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:33",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/services/users.service.ts:37",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/components/users/users.controller.ts",{"_index":607,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/components/users/users.controller.ts:111",{"_index":638,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:34",{"_index":627,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:45",{"_index":630,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:58",{"_index":624,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:70",{"_index":634,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:84",{"_index":621,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.controller.ts:97",{"_index":618,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/components/users/users.module.ts",{"_index":695,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/config",{"_index":1154,"title":{},"body":{"index.html":{}}}],["src/core",{"_index":1179,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["src/core/api.versioning.ts",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/bootstrap.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/compression/compression.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/cors.config.ts",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/crypto/crypto.ts",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/guards/request.ts",{"_index":411,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"coverage.html":{}}}],["src/core/guards/request.ts:102",{"_index":417,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:19",{"_index":415,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:21",{"_index":429,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/guards/request.ts:34",{"_index":421,"title":{},"body":{"guards/RequestGuard.html":{}}}],["src/core/http/request.ts",{"_index":401,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["src/core/http/request.ts:7",{"_index":403,"title":{},"body":{"interfaces/Request.html":{}}}],["src/core/http/response.ts",{"_index":473,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{}}}],["src/core/http/response.ts:11",{"_index":482,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:5",{"_index":480,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:7",{"_index":476,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/http/response.ts:9",{"_index":478,"title":{},"body":{"interfaces/Response.html":{}}}],["src/core/logger/applogger.ts",{"_index":49,"title":{},"body":{"injectables/AppLogger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/applogger.ts:17",{"_index":61,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:31",{"_index":70,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:34",{"_index":68,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:37",{"_index":74,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:40",{"_index":64,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/logger/applogger.ts:43",{"_index":72,"title":{},"body":{"injectables/AppLogger.html":{}}}],["src/core/mailer/mailer",{"_index":368,"title":{},"body":{"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.module.ts",{"_index":284,"title":{},"body":{"modules/EmailHandlerModule.html":{}}}],["src/core/mailer/mailer.service.ts",{"_index":286,"title":{},"body":{"injectables/EmailHandlerService.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.service.ts:11",{"_index":290,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:13",{"_index":303,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:78",{"_index":298,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/mailer.service.ts:83",{"_index":293,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["src/core/mailer/template/sample.pug",{"_index":1979,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["src/core/module.ts",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/providers.ts",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/rate",{"_index":522,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["src/db/database.module.ts",{"_index":247,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/db/migrations",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/db/typeorm.config.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["src/swagger/index.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["staged",{"_index":2485,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["staging",{"_index":2360,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["standard",{"_index":961,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":2064,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["stands",{"_index":1914,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["start",{"_index":939,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{}}}],["start:debug",{"_index":1098,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1047,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1048,"title":{},"body":{"index.html":{}}}],["started",{"_index":733,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["starter",{"_index":886,"title":{},"body":{"index.html":{}}}],["starting",{"_index":2160,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["startup",{"_index":2419,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["state",{"_index":1466,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1398,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1461,"title":{},"body":{"license.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["statements",{"_index":777,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["static",{"_index":2444,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["stating",{"_index":1436,"title":{},"body":{"license.html":{}}}],["status",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["statuscodes",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{}}}],["statuscodes.created",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{}}}],["statuscodes.ok",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"controllers/UsersController.html":{}}}],["statuscodes.unauthorized",{"_index":450,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["stderr",{"_index":2594,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["stdin",{"_index":2596,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["stdout",{"_index":2593,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["steal",{"_index":2096,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["step",{"_index":1795,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["steps",{"_index":1066,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{}}}],["still",{"_index":2063,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["stop",{"_index":2460,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["stoppage",{"_index":1527,"title":{},"body":{"license.html":{}}}],["store",{"_index":2641,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["str",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["stream",{"_index":2582,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["streams",{"_index":2565,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["string",{"_index":94,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/AppService.html":{},"classes/CreateUserDto.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["string.also",{"_index":2138,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["strings",{"_index":2109,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["strong",{"_index":1815,"title":{},"body":{"additional-documentation/contribution/features-requests.html":{}}}],["structure",{"_index":1117,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["structures",{"_index":1135,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["stuff",{"_index":942,"title":{},"body":{"index.html":{}}}],["style",{"_index":1191,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["subject",{"_index":328,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"license.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["subject:'subject",{"_index":1965,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["sublicense",{"_index":1394,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1463,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1353,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1351,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":772,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["subsequently",{"_index":1375,"title":{},"body":{"license.html":{}}}],["succesfully",{"_index":516,"title":{},"body":{"controllers/TestController.html":{}}}],["success",{"_index":358,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{}}}],["success(data",{"_index":479,"title":{},"body":{"interfaces/Response.html":{}}}],["successful",{"_index":2119,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["successfull",{"_index":686,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["such",{"_index":1298,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["suitable",{"_index":1793,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["suites",{"_index":2715,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["summary",{"_index":1790,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["super",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserDbRepository.html":{}}}],["superb",{"_index":907,"title":{},"body":{"index.html":{}}}],["supersede",{"_index":1470,"title":{},"body":{"license.html":{}}}],["support",{"_index":1201,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["supports",{"_index":1918,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["sure",{"_index":1137,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["svg",{"_index":1589,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["swagger/open",{"_index":1230,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule",{"_index":2355,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule.createdocument(app",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["swaggermodule.setup('api/docs",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/open-api/swagger.html":{}}}],["switch",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2266,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["synchronize",{"_index":264,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["synchronous",{"_index":2555,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["syntax",{"_index":1563,"title":{},"body":{"license.html":{}}}],["sys_nice",{"_index":2415,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["system",{"_index":2381,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["systems",{"_index":1362,"title":{},"body":{"license.html":{}}}],["table",{"_index":831,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tag]).tostring(outputencoding",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tags",{"_index":2713,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["take",{"_index":737,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["task",{"_index":2220,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["tasks",{"_index":1097,"title":{},"body":{"index.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/miscellaneous/git-commits.html":{}}}],["tcp",{"_index":2590,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["techniques",{"_index":2190,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["technologies",{"_index":1256,"title":{},"body":{"index.html":{}}}],["technologies/rest",{"_index":994,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["template",{"_index":330,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{},"additional-documentation/modules.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["templatename",{"_index":300,"title":{},"body":{"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"additional-documentation/modules/mailer.html":{}}}],["templatename:'sample",{"_index":1966,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["templates",{"_index":1922,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["templates/${templatename}.pug",{"_index":362,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["templates/neosoft_logo.png",{"_index":342,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["templates/nest_logo.png",{"_index":346,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["term",{"_index":2277,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["terminal",{"_index":991,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1422,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1268,"title":{},"body":{"license.html":{}}}],["test",{"_index":945,"title":{},"body":{"index.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["test.createtestingmodule",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":520,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["test/.../generate",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.e2e.ts",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.stub.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../user.update.stub.ts",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/.../users.response.ts",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/e2e/user.e2e.ts",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/generate",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/mock.request.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"classes/mockRequest.html":{}}}],["test/mock/mock.request.ts:4",{"_index":1579,"title":{},"body":{"classes/mockRequest.html":{}}}],["test/mock/mock.response.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:10",{"_index":1581,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:13",{"_index":1583,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:4",{"_index":1582,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/mock.response.ts:7",{"_index":1580,"title":{},"body":{"classes/mockResponse.html":{}}}],["test/mock/user.stub.ts",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/user.update.stub.ts",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/mock/users.response.ts",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/unit/core/guards/controller/test.controller.ts",{"_index":484,"title":{},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:11",{"_index":500,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:18",{"_index":497,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:22",{"_index":491,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/controller/test.controller.ts:26",{"_index":494,"title":{},"body":{"controllers/TestController.html":{}}}],["test/unit/core/guards/module/core",{"_index":519,"title":{},"body":{"modules/TestCoreModule.html":{}}}],["test:covrunning",{"_index":1064,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1063,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":1112,"title":{},"body":{"index.html":{}}}],["testall",{"_index":485,"title":{},"body":{"controllers/TestController.html":{}}}],["testall(@req",{"_index":508,"title":{},"body":{"controllers/TestController.html":{}}}],["testall(req",{"_index":489,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger",{"_index":486,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger(@req",{"_index":510,"title":{},"body":{"controllers/TestController.html":{}}}],["testapplogger(req",{"_index":492,"title":{},"body":{"controllers/TestController.html":{}}}],["testcontroller",{"_index":483,"title":{"controllers/TestController.html":{}},"body":{"controllers/TestController.html":{},"coverage.html":{}}}],["testcoremodule",{"_index":518,"title":{"modules/TestCoreModule.html":{}},"body":{"modules/TestCoreModule.html":{},"modules.html":{}}}],["testing",{"_index":1058,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["testingmodule",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testnocontent",{"_index":487,"title":{},"body":{"controllers/TestController.html":{}}}],["testnocontent(@req",{"_index":506,"title":{},"body":{"controllers/TestController.html":{}}}],["testnocontent(req",{"_index":495,"title":{},"body":{"controllers/TestController.html":{}}}],["tests",{"_index":1061,"title":{},"body":{"index.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["testwithmeta",{"_index":488,"title":{},"body":{"controllers/TestController.html":{}}}],["testwithmeta(@req",{"_index":501,"title":{},"body":{"controllers/TestController.html":{}}}],["testwithmeta(req",{"_index":498,"title":{},"body":{"controllers/TestController.html":{}}}],["text",{"_index":348,"title":{},"body":{"injectables/EmailHandlerService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/logger.html":{}}}],["textbody",{"_index":1980,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["thank",{"_index":1781,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{}}}],["theory",{"_index":1510,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":2065,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["thereof",{"_index":1348,"title":{},"body":{"license.html":{}}}],["thing",{"_index":2283,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["think",{"_index":2663,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["third",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{}}}],["this.applogger.debug('debug",{"_index":514,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.error('error",{"_index":512,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.log('api",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{}}}],["this.applogger.log('log",{"_index":511,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.verbose('verbose",{"_index":515,"title":{},"body":{"controllers/TestController.html":{}}}],["this.applogger.warn('warn",{"_index":513,"title":{},"body":{"controllers/TestController.html":{}}}],["this.authservice.generatetoken(user",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bindrequesthelpers(context.switchtohttp().getrequest",{"_index":441,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.bindresponsehelpers(context.switchtohttp().getresponse",{"_index":442,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.config.get('app.applyencription",{"_index":445,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["this.config.get('mailer.fromemail",{"_index":316,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.host",{"_index":317,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.password",{"_index":321,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.port",{"_index":318,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.config.get('mailer.username",{"_index":319,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.delete(id",{"_index":598,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.emailservice.sendemail",{"_index":1964,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["this.find",{"_index":587,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findone(id",{"_index":592,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findoneorfail",{"_index":588,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.findoneorfail(id",{"_index":586,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.finduserbyemail(user",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getemailserver(mailconfig",{"_index":323,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.gettemplate(options.templatename",{"_index":336,"title":{},"body":{"injectables/EmailHandlerService.html":{}}}],["this.jwtservice.sign(payload",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":95,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.debug",{"_index":107,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.error",{"_index":104,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.info",{"_index":103,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.verbose",{"_index":109,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.logger.log(winstonloglevel.warn",{"_index":105,"title":{},"body":{"injectables/AppLogger.html":{}}}],["this.save",{"_index":591,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.save(payload",{"_index":589,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.update(id",{"_index":597,"title":{},"body":{"injectables/UserDbRepository.html":{}}}],["this.usersrepository.createuser(user",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.deleteuser(id",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findalluser",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.finduser(id",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.finduserbyemail(email",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.updateuser(id",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findall",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findemail(user.email",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":679,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":684,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.save(user",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{}}}],["those",{"_index":1402,"title":{},"body":{"license.html":{}}}],["thought",{"_index":952,"title":{},"body":{"index.html":{}}}],["thread",{"_index":2499,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["threaded",{"_index":2496,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["throttlemodule",{"_index":120,"title":{"modules/ThrottleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ThrottleModule.html":{},"modules.html":{},"overview.html":{}}}],["throttlerguard",{"_index":525,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["throttlermodule",{"_index":526,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["throttlermodule.forrootasync",{"_index":528,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["through",{"_index":1276,"title":{},"body":{"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["throughout",{"_index":1843,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["throw",{"_index":594,"title":{},"body":{"injectables/UserDbRepository.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":2325,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["tidy",{"_index":1876,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["time",{"_index":754,"title":{},"body":{"contributing.html":{},"index.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timeend",{"_index":2509,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timeouts",{"_index":2709,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["timers",{"_index":2512,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["timestamp",{"_index":89,"title":{},"body":{"injectables/AppLogger.html":{}}}],["title",{"_index":1496,"title":{},"body":{"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["together",{"_index":2632,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["token",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token.stub.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1181,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["tool",{"_index":2116,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["tools",{"_index":909,"title":{},"body":{"index.html":{}}}],["tools/aes",{"_index":2342,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["top",{"_index":1130,"title":{},"body":{"index.html":{},"additional-documentation/modules.html":{}}}],["topic",{"_index":1865,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["topics",{"_index":2487,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["tort",{"_index":1511,"title":{},"body":{"license.html":{}}}],["touch",{"_index":1249,"title":{},"body":{"index.html":{}}}],["trace",{"_index":2510,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["tracker",{"_index":766,"title":{},"body":{"contributing.html":{},"additional-documentation/contribution.html":{}}}],["tracking",{"_index":1363,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1476,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1439,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1474,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":2057,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["training",{"_index":2486,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["trainings",{"_index":1239,"title":{"additional-documentation/trainings.html":{}},"body":{"index.html":{},"additional-documentation/trainings.html":{}}}],["transactions",{"_index":2691,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transfer",{"_index":1168,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transfering",{"_index":2223,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["transferred",{"_index":2082,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["transform",{"_index":2600,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transformation",{"_index":1321,"title":{},"body":{"license.html":{}}}],["transformations",{"_index":2562,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["transformer",{"_index":840,"title":{},"body":{"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["transforming",{"_index":2561,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["translation",{"_index":1322,"title":{},"body":{"license.html":{}}}],["transports",{"_index":79,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.console",{"_index":99,"title":{},"body":{"injectables/AppLogger.html":{}}}],["transports.file",{"_index":100,"title":{},"body":{"injectables/AppLogger.html":{}}}],["travis",{"_index":2387,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["tri",{"_index":2608,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["trigger",{"_index":1962,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["true",{"_index":226,"title":{},"body":{"modules/CoreModule.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"modules/TestCoreModule.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["try",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/database.html":{}}}],["ts",{"_index":1122,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{}}}],["tsconfig.build.json",{"_index":1189,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":1187,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":529,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["twice",{"_index":2287,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["twitter",{"_index":1252,"title":{},"body":{"index.html":{}}}],["two",{"_index":1907,"title":{},"body":{"additional-documentation/modules/request-response.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["type",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppLogger.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"injectables/JwtStrategy.html":{},"interfaces/Request.html":{},"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"controllers/TestController.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["type']).tocontain('text/html",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type(scope",{"_index":2483,"title":{},"body":{"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{}}}],["typeof",{"_index":470,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["typeorm",{"_index":558,"title":{},"body":{"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"dependencies.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["typeormmodule",{"_index":248,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([userdbrepository",{"_index":698,"title":{},"body":{"modules/UsersModule.html":{},"additional-documentation/modules/mailer.html":{}}}],["typeormmodule.forfeature([userdbrepository],'mongodb_connection",{"_index":699,"title":{},"body":{"modules/UsersModule.html":{},"additional-documentation/modules/database.html":{}}}],["typeormmodule.forrootasync",{"_index":250,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["typeormnow",{"_index":2005,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["types",{"_index":1326,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["types/express",{"_index":2443,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["types/nodemailerto",{"_index":1933,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["types/pugconfiguration",{"_index":1936,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["typescript",{"_index":885,"title":{},"body":{"index.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["ui",{"_index":2353,"title":{},"body":{"additional-documentation/modules/open-api/swagger.html":{}}}],["unable",{"_index":2106,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["undefined",{"_index":593,"title":{},"body":{"injectables/UserDbRepository.html":{},"controllers/UsersController.html":{}}}],["undefined})@apibearerauth('jwt",{"_index":617,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@apibody({type",{"_index":633,"title":{},"body":{"controllers/UsersController.html":{}}}],["under",{"_index":1288,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/crypto.html":{}}}],["underlying",{"_index":905,"title":{},"body":{"index.html":{}}}],["understand",{"_index":2229,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["understanding",{"_index":2185,"title":{},"body":{"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["union",{"_index":1284,"title":{},"body":{"license.html":{}}}],["unique",{"_index":2288,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["unit",{"_index":1060,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["unknown",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unless",{"_index":1464,"title":{},"body":{"license.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["unlikely",{"_index":1871,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["unref",{"_index":2522,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["unrelated",{"_index":1826,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["until",{"_index":2410,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["unwanted",{"_index":2247,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["up",{"_index":1031,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["update",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["update(id",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{}}}],["update.user.dto",{"_index":2227,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["updated",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatenpm",{"_index":2450,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{}}}],["updateresult",{"_index":580,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["updates",{"_index":2690,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["updateuser",{"_index":566,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{}}}],["updateuser(id",{"_index":577,"title":{},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{}}}],["updateuserbyid",{"_index":614,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserbyid(@req",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserbyid(req",{"_index":635,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":535,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto})@apibearerauth('jwt",{"_index":637,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserstub",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":2385,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["upload",{"_index":2601,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["upstream",{"_index":1861,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["uri",{"_index":1183,"title":{},"body":{"index.html":{}}}],["url",{"_index":2545,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["usability",{"_index":1896,"title":{},"body":{"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{}}}],["use",{"_index":900,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["useclass",{"_index":534,"title":{},"body":{"modules/ThrottleModule.html":{}}}],["used",{"_index":1219,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/modules/request-response.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["usefactory",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ThrottleModule.html":{},"additional-documentation/modules/database.html":{}}}],["useful",{"_index":2191,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["useguards",{"_index":641,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':id')@apiokresponse({description",{"_index":616,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get(':id')@apiokresponse({description",{"_index":620,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@patch(':id')@apiokresponse({description",{"_index":636,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@version(version_neutral)@get()@apiokresponse({description",{"_index":623,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":162,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/EmailHandlerService.html":{},"interfaces/IMailAuth.html":{},"interfaces/IMailConfig.html":{},"interfaces/IMailOptions.html":{},"interfaces/IMailResponse.html":{},"interfaces/Request.html":{},"entities/User.html":{},"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["user.controller.ts",{"_index":1959,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user.module.ts",{"_index":1957,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user.password",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_email",{"_index":1942,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["user_password=once",{"_index":1943,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["userbyid",{"_index":678,"title":{},"body":{"controllers/UsersController.html":{}}}],["usercontroller",{"_index":2221,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["userdata",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.firstname}${userdata.id",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdbrepository",{"_index":559,"title":{"injectables/UserDbRepository.html":{}},"body":{"injectables/UserDbRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["username",{"_index":256,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userrepository",{"_index":583,"title":{"interfaces/UserRepository.html":{}},"body":{"injectables/UserDbRepository.html":{},"interfaces/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/modules/database.html":{}}}],["users",{"_index":608,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["users.controller",{"_index":2235,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["users.entity.ts",{"_index":2030,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["users.module",{"_index":2233,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["users.module.ts",{"_index":2034,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["users.service.ts",{"_index":2036,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["userscontroller",{"_index":606,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userservice",{"_index":2222,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["usersmodule",{"_index":121,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{}}}],["usersrepository",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/modules/database.html":{}}}],["usersservice",{"_index":193,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["userstub",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":1992,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["useunifiedtopology",{"_index":276,"title":{},"body":{"modules/DatabaseModule.html":{},"additional-documentation/modules/database.html":{}}}],["using",{"_index":765,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution.html":{},"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/modules/open-api/swagger.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["utf8",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["util",{"_index":2558,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utilities",{"_index":1076,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utility",{"_index":2619,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["utilize",{"_index":2196,"title":{},"body":{"additional-documentation/modules/pattern.html":{}}}],["v4",{"_index":2013,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["v8",{"_index":2497,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["validate",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validate(payload",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuserdto",{"_index":147,"title":{"classes/ValidateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ValidateUserDto.html":{},"coverage.html":{}}}],["validation",{"_index":1170,"title":{},"body":{"index.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validationpipe",{"_index":2439,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["validator",{"_index":555,"title":{},"body":{"entities/User.html":{},"dependencies.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["value",{"_index":299,"title":{},"body":{"injectables/EmailHandlerService.html":{},"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{},"miscellaneous/enumerations.html":{},"classes/mockRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["value.trim",{"_index":471,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/ResponseType.html":{}}}],["values",{"_index":1937,"title":{},"body":{"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{}}}],["variable",{"_index":784,"title":{},"body":{"coverage.html":{},"additional-documentation/modules/crypto.html":{}}}],["variables",{"_index":1001,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{}}}],["various",{"_index":1164,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{}}}],["vector",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/modules/crypto.html":{}}}],["verbal",{"_index":1356,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":56,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":71,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verbose?(message",{"_index":108,"title":{},"body":{"injectables/AppLogger.html":{}}}],["verify",{"_index":2113,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["versatile",{"_index":927,"title":{},"body":{"index.html":{}}}],["version",{"_index":642,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{}}}],["version('1",{"_index":652,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('1')@get()@apiokresponse({description",{"_index":626,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('2",{"_index":658,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('2')@get()@apiokresponse({description",{"_index":629,"title":{},"body":{"controllers/UsersController.html":{}}}],["version(version_neutral",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{}}}],["version_neutral",{"_index":643,"title":{},"body":{"controllers/UsersController.html":{}}}],["versioning",{"_index":650,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["versioningtype.header",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.media_type",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":2103,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["via",{"_index":1068,"title":{},"body":{"index.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["view",{"_index":2531,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["views",{"_index":333,"title":{},"body":{"injectables/EmailHandlerService.html":{},"index.html":{}}}],["visualize",{"_index":2680,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["void",{"_index":66,"title":{},"body":{"injectables/AppLogger.html":{},"injectables/EmailHandlerService.html":{}}}],["volume",{"_index":2466,"title":{},"body":{"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["volumes",{"_index":2432,"title":{},"body":{"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/miscellaneous/clean-docker-images.html":{}}}],["vs",{"_index":1142,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["vscode",{"_index":1140,"title":{},"body":{"index.html":{}}}],["vulnerability",{"_index":2045,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["vulnerabilty",{"_index":2128,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["vulnerable",{"_index":2070,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["want",{"_index":1800,"title":{},"body":{"additional-documentation/contribution/bug-reports.html":{},"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/modules/mailer.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["warn",{"_index":57,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/modules/logger.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["warn(message",{"_index":73,"title":{},"body":{"injectables/AppLogger.html":{}}}],["warranties",{"_index":1492,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1487,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1045,"title":{},"body":{"index.html":{}}}],["way",{"_index":2093,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/miscellaneous/known-issues.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["ways",{"_index":2135,"title":{},"body":{"additional-documentation/modules/database.html":{}}}],["we'd",{"_index":947,"title":{},"body":{"index.html":{}}}],["web",{"_index":2046,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["website",{"_index":1250,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1242,"title":{},"body":{"index.html":{},"additional-documentation/contribution/features-requests.html":{}}}],["well",{"_index":1998,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["we’re",{"_index":2671,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["what’s",{"_index":2656,"title":{},"body":{"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["wherever",{"_index":1450,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1299,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/contribution/features-requests.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{}}}],["white",{"_index":2398,"title":{},"body":{"additional-documentation/miscellaneous/git-commits.html":{}}}],["whole",{"_index":1342,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1978,"title":{},"body":{"additional-documentation/modules/mailer.html":{}}}],["wicked",{"_index":1059,"title":{},"body":{"index.html":{}}}],["windows",{"_index":980,"title":{},"body":{"index.html":{}}}],["windows/install",{"_index":981,"title":{},"body":{"index.html":{}}}],["winston",{"_index":80,"title":{},"body":{"injectables/AppLogger.html":{},"dependencies.html":{},"additional-documentation/modules/logger.html":{}}}],["winstonloglevel",{"_index":82,"title":{},"body":{"injectables/AppLogger.html":{},"miscellaneous/enumerations.html":{}}}],["within",{"_index":1377,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/nest-js-for-beginners.html":{}}}],["withmeta",{"_index":458,"title":{},"body":{"guards/RequestGuard.html":{},"interfaces/Response.html":{},"interfaces/ResponseType.html":{},"classes/mockResponse.html":{},"additional-documentation/modules/request-response.html":{}}}],["withmeta(data",{"_index":481,"title":{},"body":{"interfaces/Response.html":{}}}],["without",{"_index":1427,"title":{},"body":{"license.html":{},"additional-documentation/modules/database.html":{}}}],["work",{"_index":1327,"title":{},"body":{"license.html":{},"additional-documentation/contribution/pull-requests.html":{}}}],["workflow",{"_index":1211,"title":{},"body":{"index.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["workflows",{"_index":1149,"title":{},"body":{"index.html":{}}}],["working",{"_index":1837,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{},"additional-documentation/miscellaneous/git-commits.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["works",{"_index":1208,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/crypto.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["world",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["worldwide",{"_index":1382,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2602,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["writable",{"_index":2585,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["write",{"_index":2139,"title":{},"body":{"additional-documentation/modules/database.html":{},"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["writing",{"_index":1372,"title":{},"body":{"license.html":{}}}],["written",{"_index":968,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/modules/database.html":{},"additional-documentation/modules/pattern.html":{}}}],["yes",{"_index":477,"title":{},"body":{"interfaces/Response.html":{}}}],["you'd",{"_index":1849,"title":{},"body":{"additional-documentation/contribution/pull-requests.html":{}}}],["you'll",{"_index":1087,"title":{},"body":{"index.html":{}}}],["you've",{"_index":951,"title":{},"body":{"index.html":{},"additional-documentation/modules/crypto.html":{}}}],["yyyy",{"_index":1570,"title":{},"body":{"license.html":{}}}],["zero/no",{"_index":2313,"title":{},"body":{"additional-documentation/modules/crypto.html":{}}}],["zlib",{"_index":2587,"title":{},"body":{"additional-documentation/trainings/node-js-for-beginners.html":{}}}],["zoom",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/EmailHandlerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AppService } from '@app/app.service';\nimport { Request, Response } from '@app/core';\nimport AppLogger from '@app/core/logger/AppLogger';\n\n@ApiTags('nest_app')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private readonly appLogger: AppLogger) {}\n\n  @Get()\n  getHello(@Req() req: Request, @Res() res: Response): Promise {\n    this.appLogger.log('API called');\n    return res.success(this.appService.getHello());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLogger.html":{"url":"injectables/AppLogger.html","title":"injectable - AppLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/AppLogger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Optional\n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/AppLogger.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/core/logger/AppLogger.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/AppLogger.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Logger, createLogger, format, transports } from 'winston';\n\nenum WinstonLogLevel {\n  INFO = 'info',\n  ERROR = 'error',\n  WARN = 'WARN',\n  HTTP = 'HTTP',\n  VERBOSE = 'verbose',\n  DEBUG = 'debug',\n  SILLY = 'silly',\n}\n\n@Injectable()\nexport default class AppLogger implements LoggerService {\n  public logger: Logger;\n  constructor(config: ConfigService) {\n    const { combine, timestamp, label, printf } = format;\n    const customLoggerFormat = printf(\n      ({ level, message, Label, Timestamp }: { level: string; message: string; Label: string; Timestamp: string }) => {\n        return `${Timestamp} [${Label}] ${level}: ${message}`;\n      }\n    );\n    this.logger = createLogger({\n      format: combine(label({ label: config.get('app.name') }), timestamp(), customLoggerFormat),\n      transports: [new transports.Console(), new transports.File({ filename: config.get('app.logFileName') })],\n    });\n  }\n\n  log(message: any) {\n    this.logger.log(WinstonLogLevel.INFO, message);\n  }\n  error(message: any) {\n    this.logger.log(WinstonLogLevel.ERROR, message);\n  }\n  warn(message: any) {\n    this.logger.log(WinstonLogLevel.WARN, message);\n  }\n  debug?(message: any) {\n    this.logger.log(WinstonLogLevel.DEBUG, message);\n  }\n  verbose?(message: any) {\n    this.logger.log(WinstonLogLevel.VERBOSE, message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nThrottleModule\n\nThrottleModule\n\nAppModule -->\n\nThrottleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            ThrottleModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { AppController } from '@app/app.controller';\nimport { AppService } from '@app/app.service';\nimport { AuthModule } from '@app/auth/auth.module';\nimport { UsersModule } from '@app/components/users/users.module';\nimport { CoreModule } from '@app/core/module';\nimport { ThrottleModule } from '@app/core/rate-limiter/throttle.module';\nimport { DatabaseModule } from '@app/db/database.module';\n\n@Module({\n  imports: [CoreModule, DatabaseModule, UsersModule, ThrottleModule, AuthModule],\n  controllers: [AppController],\n\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  public getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateToken')@ApiBody({type: ValidateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, Res } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { StatusCodes } from 'http-status-codes';\n\nimport { AuthService } from '@app/auth/auth.service';\nimport { ValidateUserDto } from '@app/components/users/dto/validate.user.dto';\nimport { Request, Response } from '@app/core';\n\n@ApiTags('authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('generateToken')\n  @ApiBody({ type: ValidateUserDto })\n  async generateToken(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const user: ValidateUserDto = req.body;\n      const resWithAcessToken = await this.authService.generateToken(user);\n      return res.success(resWithAcessToken, StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { AuthController } from '@app/auth/auth.controller';\nimport { AuthService } from '@app/auth/auth.service';\nimport { JwtStrategy } from '@app/auth/jwt.strategy';\nimport { UsersModule } from '@app/components/users/users.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (config: ConfigService) => {\n        return {\n          secret: config.get('SECRET_JWT_KEY'),\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ConfigModule,\n    PassportModule,\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  // exports:[AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByEmail\n                            \n                            \n                                    Async\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(user: ValidateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ValidateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: ValidateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ValidateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { ValidateUserDto } from '@app/components/users/dto/validate.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UsersService } from '@app/components/users/services/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly usersService: UsersService, private readonly jwtService: JwtService) {}\n\n  findUserByEmail(user: ValidateUserDto): Promise {\n    return this.usersService.findEmail(user.email, user.password);\n  }\n\n  async generateToken(user: ValidateUserDto): Promise {\n    const userData = await this.findUserByEmail(user);\n    const payload = `${userData.firstName}${userData.id}`;\n    const accessToken = this.jwtService.sign(payload);\n    return {\n      access_token: accessToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\n\n...exportProvider() \n\n...exportProvider() \n\n\n\nCoreModule\n\nCoreModule\n\n...exportProvider()  -->\n\nCoreModule->...exportProvider() \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ...exportProvider()\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { DiscoveryModule } from '@nestjs/core';\n\nimport config from '@app/config/index';\n\nimport { exportProvider, getProviders } from './providers';\n\n@Global()\n@Module({\n  imports: [\n    DiscoveryModule,\n    ConfigModule.forRoot({\n      envFilePath: [`${process.cwd()}/config/env/.env`, `${process.cwd()}/config/env/.env.${process.env.NODE_ENV}`],\n      isGlobal: true,\n      expandVariables: true,\n      load: config,\n    }),\n  ],\n  providers: [...getProviders()],\n  exports: [...exportProvider()],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/create.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserEmail)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserPass)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/create.user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class CreateUserDto {\n  @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n  firstName: string;\n\n  @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n  lastName: string;\n\n  @ApiProperty(apiResponse.apiValidateUserEmail)\n  email: string;\n\n  @ApiProperty(apiResponse.apiValidateUserPass)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/db/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { User } from '@app/components/users/entities/user.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mysql',\n        host: config.get('db.host'),\n        port: config.get('db.port'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        entities: [User],\n        // entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n        migrations: ['dist/db/migrations/*.js'],\n        migrationsRun: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n/**\n * For MongoDb setup\n *\n * TypeOrmModule.forRootAsync({\n *   name: 'mongoDB_connection',\n *   imports: [ConfigModule],\n *   inject: [ConfigService],\n *   useFactory: (config: ConfigService) => ({\n *     type: 'mongodb',\n *     host: config.get('db.host'),\n *     port: config.get('db.mongodb_port'),\n *     username: config.get('db.username'),\n *     password: config.get('db.password'),\n *     database: config.get('db.database'),\n *     useUnifiedTopology: true,\n *     authSource: 'admin',\n *     entities: [User],\n *     synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n *   }),\n * }),\n */\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailHandlerModule.html":{"url":"modules/EmailHandlerModule.html","title":"module - EmailHandlerModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailHandlerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EmailHandlerModule\n\n\n\ncluster_EmailHandlerModule_providers\n\n\n\ncluster_EmailHandlerModule_exports\n\n\n\n\nEmailHandlerService \n\nEmailHandlerService \n\n\n\nEmailHandlerModule\n\nEmailHandlerModule\n\nEmailHandlerService  -->\n\nEmailHandlerModule->EmailHandlerService \n\n\n\n\n\nEmailHandlerService\n\nEmailHandlerService\n\nEmailHandlerModule -->\n\nEmailHandlerService->EmailHandlerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailHandlerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailHandlerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { EmailHandlerService } from './mailer.service';\n\n@Module({\n  providers: [EmailHandlerService],\n  exports: [EmailHandlerService],\n})\nexport class EmailHandlerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailHandlerService.html":{"url":"injectables/EmailHandlerService.html","title":"injectable - EmailHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getEmailServer\n                            \n                            \n                                    Private\n                                    Async\n                                getTemplate\n                            \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/mailer/mailer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getEmailServer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmailServer(mailConfig: IMailConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailConfig\n                                    \n                                                IMailConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTemplate(templateName: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(options: IMailOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                IMailOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport juice from 'juice';\nimport nodemailer from 'nodemailer';\nimport Mail from 'nodemailer/lib/mailer';\nimport pug from 'pug';\n\nimport { IMailConfig, IMailOptions, IMailResponse } from './mailer-interfaces';\n\n@Injectable()\nexport class EmailHandlerService {\n  constructor(private readonly config: ConfigService) {}\n  async sendEmail(options: IMailOptions): Promise {\n    return new Promise(\n      async (resolve: (value?: IMailResponse) => void, rejects: (reason?: IMailResponse) => void): Promise => {\n        const mailConfig: IMailConfig = {\n          fromEmail: this.config.get('mailer.fromEmail'),\n          host: this.config.get('mailer.host'),\n          port: this.config.get('mailer.port'),\n          auth: {\n            user: this.config.get('mailer.username'),\n            pass: this.config.get('mailer.password'),\n          },\n        };\n\n        const server: Mail = await this.getEmailServer(mailConfig);\n\n        const mailOptions: Mail.Options = {\n          from: mailConfig.fromEmail,\n          to: options.to,\n          subject: options.subject,\n        };\n\n        // if template name is exist then choose pug template from views\n        if (options.templateName) {\n          mailOptions.html = await this.getTemplate(options.templateName, options.replace);\n          mailOptions.attachments = [\n            {\n              filename: 'neosoft_logo.png',\n              path: `${__dirname}/email-templates/neosoft_logo.png`,\n              cid: 'neosoft_logo',\n            },\n            {\n              filename: 'nest_logo.png',\n              path: `${__dirname}/email-templates/nest_logo.png`,\n              cid: 'nest_logo',\n            },\n          ];\n        }\n\n        // if text body then assign as text\n        if (options.body) {\n          mailOptions.text = options.body;\n        }\n\n        // if html body then assign as html\n        if (options.htmlBody) {\n          mailOptions.html = options.htmlBody;\n        }\n\n        server.sendMail(mailOptions, (err: Error, info: nodemailer.SentMessageInfo) => {\n          if (info) {\n            resolve({\n              success: true,\n              item: info,\n            });\n          } else {\n            rejects({\n              success: false,\n              errors: err,\n            });\n          }\n        });\n      }\n    );\n  }\n\n  private async getTemplate(templateName: string, options: Record = {}): Promise {\n    const html: string = pug.renderFile(`${__dirname}/email-templates/${templateName}.pug`, options);\n    return juice(html);\n  }\n\n  private async getEmailServer(mailConfig: IMailConfig): Promise {\n    return nodemailer.createTransport({\n      secure: true,\n      ...mailConfig,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailAuth.html":{"url":"interfaces/IMailAuth.html","title":"interface - IMailAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailConfig.html":{"url":"interfaces/IMailConfig.html","title":"interface - IMailConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                        \n                                            fromEmail\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         IMailAuth\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IMailAuth\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailOptions.html":{"url":"interfaces/IMailOptions.html","title":"interface - IMailOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            htmlBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replace\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templateName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlBody:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replace:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMailResponse.html":{"url":"interfaces/IMailResponse.html","title":"interface - IMailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer-interfaces/interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            item\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IMailConfig {\n  fromEmail: string;\n  host: string;\n  port: number;\n  auth: IMailAuth;\n}\n\ninterface IMailAuth {\n  user: string;\n  pass: string;\n}\n\nexport interface IMailResponse {\n  success: boolean;\n  message?: string;\n  item?: any;\n  errors?: any;\n}\n\nexport interface IMailOptions {\n  subject: string;\n  templateName?: string;\n  body?: string;\n  htmlBody?: string;\n  replace?: Record;\n  to?: string | Array;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.SECRET_JWT_KEY,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      firstName: payload.firstName,\n      id: payload.id,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/Request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRequest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        all\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Request.ts:7\n                \n            \n\n\n            \n                \n                    Get all inputs from the request object\n\n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Get the current user from the request object\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Request as BaseRequest } from 'express';\n\nexport interface Request extends BaseRequest {\n  /**\n   * Get all inputs from the request object\n   */\n  all(): Record;\n\n  /**\n   * Get the current user from the request object\n   */\n  user: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RequestGuard.html":{"url":"guards/RequestGuard.html","title":"guard - RequestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RequestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/core/guards/request.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindRequestHelpers\n                            \n                            \n                                bindResponseHelpers\n                            \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/guards/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bindRequestHelpers\n                        \n                    \n                \n            \n            \n                \nbindRequestHelpers(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:102\n                \n            \n\n\n            \n                \n                    Bind Request Helpers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Request\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bindResponseHelpers\n                        \n                    \n                \n            \n            \n                \nbindResponseHelpers(response: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:34\n                \n            \n\n\n            \n                \n                    Bind Response Helpers\nThis helper is responsible for handling Response of nest app.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Response\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/core/guards/request.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { StatusCodes } from 'http-status-codes';\nimport { get, omit } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { Request, Response } from '@app/core';\nimport { encrypt } from '@app/core/crypto/crypto';\n\ninterface ResponseType {\n  success: boolean;\n  code: StatusCodes;\n  data: any;\n  message?: string;\n  errors?: any;\n  meta?: any;\n}\n@Injectable()\nexport class RequestGuard implements CanActivate {\n  constructor(private readonly config: ConfigService) {}\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    this.bindRequestHelpers(context.switchToHttp().getRequest());\n    this.bindResponseHelpers(context.switchToHttp().getResponse());\n\n    return true;\n  }\n  /**\n   * Bind Response Helpers\n   * This helper is responsible for handling Response of nest app.\n   *\n   * @param response\n   */\n\n  bindResponseHelpers(response: Response): Response {\n    const APPLY_ENCRYPTION = this.config.get('app.applyEncription');\n    const success = (data: Record | Array | string, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: data,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const error = (errorObject: any, status = StatusCodes.UNAUTHORIZED) => {\n      let errorMsg: any;\n      let errors = null;\n      if (errorObject instanceof Object) {\n        errorMsg = errorObject?.message;\n        errors = errorObject?.errors;\n      } else {\n        errorMsg = errorObject;\n      }\n      let result: ResponseType | any = {\n        success: false,\n        code: status,\n        message: errorMsg,\n        errors: errors,\n        data: null,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const noContent = () => {\n      return response.status(StatusCodes.NO_CONTENT).end();\n    };\n\n    const withMeta = (data: Record, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: get(data, 'data'),\n        meta: omit(data, ['data']),\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n    response.success = success;\n    response.error = error;\n    response.noContent = noContent;\n    response.withMeta = withMeta;\n\n    return response;\n  }\n\n  /**\n   * Bind Request Helpers\n   *\n   * @param request\n   */\n  bindRequestHelpers(request: Request): Request {\n    const all = (): Record => {\n      const inputs = { ...request.query, ...request.body, ...request.params };\n\n      for (const key in inputs) {\n        const value = inputs[key];\n        if (typeof value === 'string' || value instanceof String) {\n          inputs[key] = value.trim();\n        }\n      }\n\n      return inputs;\n    };\n\n    request.all = all;\n    return request;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http/Response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseResponse\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        noContent\n                                    \n                                \n                                \n                                    \n                                        success\n                                    \n                                \n                                \n                                    \n                                        withMeta\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(error: Record | string, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Record | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noContent\n                        \n                    \n                \n            \n            \n                \nnoContent()\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: Record | Array | string, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record | Array | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withMeta\n                        \n                    \n                \n            \n            \n                \nwithMeta(data: Record, status?: StatusCodes)\n                \n            \n\n\n            \n                \n                    Defined in src/core/http/Response.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            StatusCodes\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Response as BaseResponse } from 'express';\nimport { StatusCodes } from 'http-status-codes';\n\nexport interface Response extends BaseResponse {\n  success(data: Record | Array | string, status?: StatusCodes): any;\n\n  error(error: Record | string, status?: StatusCodes): any;\n\n  noContent(): any;\n\n  withMeta(data: Record, status?: StatusCodes): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseType.html":{"url":"interfaces/ResponseType.html","title":"interface - ResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/guards/request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:     StatusCodes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusCodes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { StatusCodes } from 'http-status-codes';\nimport { get, omit } from 'lodash';\nimport { Observable } from 'rxjs';\n\nimport { Request, Response } from '@app/core';\nimport { encrypt } from '@app/core/crypto/crypto';\n\ninterface ResponseType {\n  success: boolean;\n  code: StatusCodes;\n  data: any;\n  message?: string;\n  errors?: any;\n  meta?: any;\n}\n@Injectable()\nexport class RequestGuard implements CanActivate {\n  constructor(private readonly config: ConfigService) {}\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    this.bindRequestHelpers(context.switchToHttp().getRequest());\n    this.bindResponseHelpers(context.switchToHttp().getResponse());\n\n    return true;\n  }\n  /**\n   * Bind Response Helpers\n   * This helper is responsible for handling Response of nest app.\n   *\n   * @param response\n   */\n\n  bindResponseHelpers(response: Response): Response {\n    const APPLY_ENCRYPTION = this.config.get('app.applyEncription');\n    const success = (data: Record | Array | string, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: data,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const error = (errorObject: any, status = StatusCodes.UNAUTHORIZED) => {\n      let errorMsg: any;\n      let errors = null;\n      if (errorObject instanceof Object) {\n        errorMsg = errorObject?.message;\n        errors = errorObject?.errors;\n      } else {\n        errorMsg = errorObject;\n      }\n      let result: ResponseType | any = {\n        success: false,\n        code: status,\n        message: errorMsg,\n        errors: errors,\n        data: null,\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n\n    const noContent = () => {\n      return response.status(StatusCodes.NO_CONTENT).end();\n    };\n\n    const withMeta = (data: Record, status = StatusCodes.OK) => {\n      let result: ResponseType | any = {\n        success: true,\n        code: status,\n        data: get(data, 'data'),\n        meta: omit(data, ['data']),\n      };\n\n      if (APPLY_ENCRYPTION) {\n        result = encrypt(this.config, result);\n      }\n      return response.status(status).json(result);\n    };\n    response.success = success;\n    response.error = error;\n    response.noContent = noContent;\n    response.withMeta = withMeta;\n\n    return response;\n  }\n\n  /**\n   * Bind Request Helpers\n   *\n   * @param request\n   */\n  bindRequestHelpers(request: Request): Request {\n    const all = (): Record => {\n      const inputs = { ...request.query, ...request.body, ...request.params };\n\n      for (const key in inputs) {\n        const value = inputs[key];\n        if (typeof value === 'string' || value instanceof String) {\n          inputs[key] = value.trim();\n        }\n      }\n\n      return inputs;\n    };\n\n    request.all = all;\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestController.html":{"url":"controllers/TestController.html","title":"controller - TestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/unit/core/guards/controller/test.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testall\n                            \n                            \n                                testAppLogger\n                            \n                            \n                                testnoContent\n                            \n                            \n                                testwithMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testall\n                        \n                    \n                \n            \n            \n                \ntestall(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all/:param')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testAppLogger\n                        \n                    \n                \n            \n            \n                \ntestAppLogger(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('logger')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testnoContent\n                        \n                    \n                \n            \n            \n                \ntestnoContent(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('noContent')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testwithMeta\n                        \n                    \n                \n            \n            \n                \ntestwithMeta(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('withMeta')\n                \n            \n\n            \n                \n                    Defined in test/unit/core/guards/controller/test.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Res } from '@nestjs/common';\n\nimport { Request, Response } from '@app/core';\nimport AppLogger from '@app/core/logger/AppLogger';\n\n@Controller()\nexport class TestController {\n  constructor(private readonly appLogger: AppLogger) {}\n\n  @Get('withMeta')\n  testwithMeta(@Req() req: Request, @Res() res: Response): Promise {\n    return res.withMeta({\n      data: 'mydata',\n      myKey: 'myValue',\n    });\n  }\n  @Get('noContent')\n  testnoContent(@Req() req: Request, @Res() res: Response): Promise {\n    return res.noContent();\n  }\n  @Get('all/:param')\n  testall(@Req() req: Request, @Res() res: Response): Promise {\n    return res.success(req.all());\n  }\n  @Get('logger')\n  testAppLogger(@Req() req: Request, @Res() res: Response): Promise {\n    const logger = () => {\n      this.appLogger.log('Log called');\n      this.appLogger.error('Error called');\n      this.appLogger.warn('Warn called');\n      this.appLogger.debug('Debug called');\n      this.appLogger.verbose('Verbose called');\n\n      return 'AppLogger methods called succesfully';\n    };\n\n    return res.success(logger());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestCoreModule.html":{"url":"modules/TestCoreModule.html","title":"module - TestCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TestCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/unit/core/guards/module/core-test.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport config from '@app/config/index';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: [`${process.cwd()}/config/env/test.env`],\n      isGlobal: true,\n      expandVariables: true,\n      load: config,\n    }),\n  ],\n})\nexport class TestCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThrottleModule.html":{"url":"modules/ThrottleModule.html","title":"module - ThrottleModule","body":"\n                   \n\n\n\n\n    Modules\n    ThrottleModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/rate-limiter/throttle.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        ttl: config.get('throttler.ttl'),\n        limit: config.get('throttler.limit'),\n      }),\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class ThrottleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/update.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiUpdateUserBoolProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/update.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class UpdateUserDto {\n  @ApiProperty(apiResponse.apiCreateUserFirstNameProperty)\n  firstName: string;\n\n  @ApiProperty(apiResponse.apiCreateUserLastNameProperty)\n  lastName: string;\n\n  @ApiProperty(apiResponse.apiUpdateUserBoolProperty)\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()@ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsEmail } from 'class-validator';\nimport { Column, Entity, ObjectIdColumn, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @IsEmail()\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserDbRepository.html":{"url":"injectables/UserDbRepository.html","title":"injectable - UserDbRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserDbRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/repository/db/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                findAllUser\n                            \n                            \n                                findUser\n                            \n                            \n                                findUserByEmail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/components/users/repository/db/user.repository.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(payload: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUser\n                        \n                    \n                \n            \n            \n                \nfindAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/db/user.repository.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityRepository, Repository, UpdateResult } from 'typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UserRepository } from '@app/components/users/repository/user.repository';\n@Injectable()\n@EntityRepository(User)\nexport class UserDbRepository extends Repository implements UserRepository {\n  constructor() {\n    super();\n  }\n\n  findUser(id: string): Promise {\n    return this.findOneOrFail(id);\n  }\n\n  findAllUser(): Promise {\n    return this.find();\n  }\n\n  findUserByEmail(email: string, password: string): Promise {\n    return this.findOneOrFail({\n      where: {\n        email: email,\n        password: password,\n      },\n    });\n  }\n\n  createUser(payload: CreateUserDto): Promise {\n    return this.save(payload);\n  }\n  // updateUser(id: string, payload: UpdateUserDto): Promise {\n  //   // let id = parseInt(id);\n  //   return this.save({ ...payload, id });\n  // }\n  async updateUser(id: string, user: UpdateUserDto): Promise {\n    const result = await this.findOne(id);\n    if (result === undefined) {\n      throw new Error('User not found in database');\n    }\n    return this.update(id, {\n      ...user,\n    });\n  }\n  async deleteUser(id: string): Promise {\n    const result = await this.findOne(id);\n    if (result === undefined) {\n      throw new Error('User not found in database');\n    }\n    await this.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepository.html":{"url":"interfaces/UserRepository.html","title":"interface - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/repository/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        deleteUser\n                                    \n                                \n                                \n                                    \n                                        findAllUser\n                                    \n                                \n                                \n                                    \n                                        findUser\n                                    \n                                \n                                \n                                    \n                                        findUserByEmail\n                                    \n                                \n                                \n                                    \n                                        updateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(payload: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUser\n                        \n                    \n                \n            \n            \n                \nfindAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \nfindUserByEmail(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/repository/user.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateResult } from 'typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\n\nexport interface UserRepository {\n  findUser(id: string): Promise;\n  findAllUser(): Promise;\n  findUserByEmail(email: string, password: string): Promise;\n  createUser(payload: CreateUserDto): Promise;\n  updateUser(id: string, user: UpdateUserDto): Promise;\n  deleteUser(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                getUsersV1\n                            \n                            \n                                    Async\n                                getUsersV2\n                            \n                            \n                                    Async\n                                saveUser\n                            \n                            \n                                    Async\n                                updateUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Version(VERSION_NEUTRAL)@Get()@ApiOkResponse({description: undefined})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersV1\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersV1(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Get()@ApiOkResponse({description: undefined})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersV2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersV2(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('2')@Get()@ApiOkResponse({description: undefined})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUser(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: undefined})@ApiBody({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserById(req: Request, res: Response, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')@ApiOkResponse({description: undefined})@ApiBody({type: UpdateUserDto})@ApiBearerAuth('JWT-auth')\n                \n            \n\n            \n                \n                    Defined in src/components/users/users.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n  Version,\n  VERSION_NEUTRAL,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiCreatedResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { StatusCodes } from 'http-status-codes';\n\nimport { JwtAuthGuard } from '@app/auth/jwt.auth.guard';\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UsersService } from '@app/components/users/services/users.service';\nimport { Request, Response } from '@app/core';\n\n@ApiTags('user_api')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  // Versioning API\n  @Version('1')\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseV1 })\n  async getUsersV1(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      return res.success('Response from API version 1');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @Version('2')\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseV2 })\n  async getUsersV2(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      return res.success('Response from API version 2');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Version(VERSION_NEUTRAL)\n  @Get()\n  @ApiOkResponse({ description: apiResponse.apiUserGetResponseNeutral })\n  @ApiBearerAuth('JWT-auth')\n  async getUsers(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const users: User[] = await this.usersService.findAll();\n      return res.success(users);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @Post()\n  @ApiCreatedResponse({ description: apiResponse.apiUserCreatedResponse })\n  @ApiBody({ type: CreateUserDto })\n  async saveUser(@Req() req: Request, @Res() res: Response): Promise {\n    try {\n      const user: CreateUserDto = req.body;\n      await this.usersService.save(user);\n      return res.success('success', StatusCodes.CREATED);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserGetById })\n  @ApiBearerAuth('JWT-auth')\n  async getUserById(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      const userById = await this.usersService.findOne(id);\n      return res.success(userById, StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserDeletedResponse })\n  @ApiBearerAuth('JWT-auth')\n  async deleteUser(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      await this.usersService.remove(id);\n      return res.success('Deletion Successfull', StatusCodes.OK);\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  @ApiOkResponse({ description: apiResponse.apiUserUpdatedResponse })\n  @ApiBody({ type: UpdateUserDto })\n  @ApiBearerAuth('JWT-auth')\n  async updateUserById(@Req() req: Request, @Res() res: Response, @Param('id') id: string): Promise {\n    try {\n      const updateUser: UpdateUserDto = req.body;\n      await this.usersService.update(id, updateUser);\n      return res.success('Updation Successfull');\n    } catch (e) {\n      return res.error(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/components/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserDbRepository } from '@app/components/users/repository/db/user.repository';\nimport { UsersService } from '@app/components/users/services/users.service';\nimport { UsersController } from '@app/components/users/users.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserDbRepository])],\n  // imports: [TypeOrmModule.forFeature([UserDbRepository],'mongoDB_connection')],\n  exports: [TypeOrmModule, UsersService],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/services/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/components/users/services/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findEmail\n                        \n                    \n                \n            \n            \n                \nfindEmail(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/components/users/services/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { CreateUserDto } from '@app/components/users/dto/create.user.dto';\nimport { UpdateUserDto } from '@app/components/users/dto/update.user.dto';\nimport { User } from '@app/components/users/entities/user.entity';\nimport { UserDbRepository } from '@app/components/users/repository/db/user.repository';\nimport { UserRepository } from '@app/components/users/repository/user.repository';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserDbRepository)\n    private readonly usersRepository: UserRepository\n  ) {}\n\n  findAll(): Promise {\n    return this.usersRepository.findAllUser();\n  }\n\n  findOne(id: string): Promise {\n    return this.usersRepository.findUser(id);\n  }\n\n  findEmail(email: string, password: string): Promise {\n    return this.usersRepository.findUserByEmail(email, password);\n  }\n\n  async save(user: CreateUserDto): Promise {\n    await this.usersRepository.createUser(user);\n  }\n\n  async update(id: string, user: UpdateUserDto): Promise {\n    await this.usersRepository.updateUser(id, user);\n  }\n\n  async remove(id: string): Promise {\n    await this.usersRepository.deleteUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateUserDto.html":{"url":"classes/ValidateUserDto.html","title":"class - ValidateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/users/dto/validate.user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserEmail)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/validate.user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty(apiResponse.apiValidateUserPass)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/components/users/dto/validate.user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { apiResponse } from '@app/components/users/constants/api.response.dto';\n\nexport class ValidateUserDto {\n  @ApiProperty(apiResponse.apiValidateUserEmail)\n  email: string;\n\n  @ApiProperty(apiResponse.apiValidateUserPass)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to this project\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\nUsing the issue tracker\nThe issue tracker is the preferred channel for bug reports,\nfeatures requests and submitting pull\nrequests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/constants/api.response.dto.ts\n            \n            variable\n            apiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/dto/create.user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/users/dto/update.user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/components/users/dto/validate.user.dto.ts\n            \n            class\n            ValidateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/users/repository/db/user.repository.ts\n            \n            injectable\n            UserDbRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/users/repository/user.repository.ts\n            \n            interface\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/components/users/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/api.versioning.ts\n            \n            variable\n            setupAPIVersioning\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/bootstrap.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/core/compression/compression.ts\n            \n            variable\n            shouldCompress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/cors.config.ts\n            \n            variable\n            corsOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            algorithm\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            decrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            digest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            encrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            iterations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            keylen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/crypto/crypto.ts\n            \n            variable\n            salt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/guards/request.ts\n            \n            interface\n            ResponseType\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/guards/request.ts\n            \n            guard\n            RequestGuard\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/core/http/Request.ts\n            \n            interface\n            Request\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/core/http/Response.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/logger/AppLogger.ts\n            \n            injectable\n            AppLogger\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailAuth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer-interfaces/interfaces.ts\n            \n            interface\n            IMailResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.service.ts\n            \n            injectable\n            EmailHandlerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/providers.ts\n            \n            variable\n            exportProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/providers.ts\n            \n            variable\n            getProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/db/typeorm.config.ts\n            \n            variable\n            configa\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/index.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/e2e/user.e2e.ts\n            \n            variable\n            AppController_test\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/generate-token.stub.ts\n            \n            variable\n            loginCredentials\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/mock.request.ts\n            \n            class\n            mockRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                test/mock/mock.response.ts\n            \n            class\n            mockResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                test/mock/user.stub.ts\n            \n            variable\n            userStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/user.update.stub.ts\n            \n            variable\n            updateUserStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/mock/users.response.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/unit/core/guards/controller/test.controller.ts\n            \n            controller\n            TestController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.6\n        \n            @nestjs/config : ^1.0.1\n        \n            @nestjs/core : ^8.0.6\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.6\n        \n            @nestjs/throttler : ^2.0.0\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            class-transformer : ^0.5.0\n        \n            class-validator : ^0.13.1\n        \n            compression : ^1.7.4\n        \n            dotenv : ^11.0.0\n        \n            express-jwt : ^6.1.0\n        \n            helmet : 5.0.1\n        \n            http-status-codes : ^2.1.4\n        \n            juice : ^8.0.0\n        \n            jwks-rsa : ^2.0.5\n        \n            mongodb : ^4.2.0\n        \n            mysql2 : ^2.2.5\n        \n            nodemailer : ^6.7.0\n        \n            passport : 0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pug : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.3.0\n        \n            typeorm : ^0.2.34\n        \n            winston : ^3.3.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WinstonLogLevel   (src/.../AppLogger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/logger/AppLogger.ts\n    \n        \n            \n                \n                    \n                        \n                        WinstonLogLevel\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : HTTP\n                            \n                        \n                        \n                            \n                                 VERBOSE\n                            \n                        \n                        \n                            \n                                Value : verbose\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : debug\n                            \n                        \n                        \n                            \n                                 SILLY\n                            \n                        \n                        \n                            \n                                Value : silly\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../bootstrap.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/bootstrap.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    Core bootstrap module should be loaded here.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nNest JS Skeleton for REST Application\nDescription\n\nNest framework TypeScript starter repository.\n\nNest provides a level of abstraction above these common Node.js frameworks (Express/Fastify) but also exposes their APIs directly to the developer. This allows developers the freedom to use the myriad of third-party modules which are available for the underlying platform.\n\nThere are superb libraries, helpers, and tools that exist for Node (and server-side JavaScript), none of them effectively solve the main problem of — Architecture.\n\nFeatures of NestJS\n\nExtensible Approach\nEasy to use, learn and master\nCommand Line Interface(CLI)\nVersatile\nProgressive\nImplemented Based on SOLID Principles\nLazy and Dynamic Modules\nAPI Versioning\nDocumentation\nOpen Source\nLarge & Active CommunityMotivation\n\n\n\nWith this skeleton, we can easily start a server application using Node.js, Nest JS and TypeScript.\n\nRather than spending time on the project setup, get on with the important stuff right away.\n\n\nTake it for a test drive. We'd love to hear any feedback you have or if you've thought of a new feature.\nCommon Features\n\nQuick start\nIntegrated ESLint, Prettier and Husky\nCommon Error Handler\nSimple and Standard scaffolding\nProduction-Ready Skeleton\nFollowed SOLID PrinciplesGetting started\n\n\nSkeleton for REST API applications written in Node JS & Nest JS with TypeScript\nPrerequisites\n\nNode https://nodejs.org/en/ use the LTS version\nNPM\nDocker https://www.docker.com/\nInstall Docker Desktop for MAC: https://docs.docker.com/docker-for-mac/install/\nInstall Docker Desktop for Windows: https://docs.docker.com/docker-for-windows/install/\n\n\nDocker Compose\nNestJS CLI https://nestjs.com/\n\nCreate Development Environment\nTo get started, clone the repository to your local computer. Use the following command to run in your terminal.\nClone The Application\n// clone the application\n$ git clone https://github.com/NeoSOFT-Technologies/rest-node-nestjs.gitQuick Installation\nNext, install the packages that are required for this project.\n// Install the required npm modules\n$ npm installCreate The Environment Variables\nThe config/env/.env file should be placed in root folder with the following variables.\n\nconfig/env/.env : Default Environment File\nconfig/env/.env.dev : Development Environment File\nconfig/env/.env.test : Test Environment File\nconfig/env/.env.prod : Production Environment File\n\n# config/env/.env.example\n\nAPP_NAME=rest_api\nNODE_ENV=dev\nDB_HOST=127.0.0.1\nDB_DATABASE=rest_api\nDB_USER=user\nDB_PASSWORD=root\nDB_PORT=3306Start MySQL Database\nIn order to use mysql, you need to have it installed in your local machine.\nDocker Compose is what we will be using in our case, In the project directory, execute the following command.\n# build images, create and run containers in background\ndocker-compose -f ./docker/docker-compose.yml --env-file ./config/env/.env up -dIn order to apply your modified code to a running container, you should add a build option.\n# if source code is changed, rebuild image, recreate and start container\ndocker-compose  -f ./docker/docker-compose.yml --env-file ./config/env/.env up -d --buildRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nFor this project, We chose Jest as our test framework.\nWhile Mocha is probably more common, Mocha seems to be looking for a new maintainer and setting up TypeScript testing in Jest is wicked simple.\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covRunning the build\nAll the different build steps are orchestrated via npm scripts.\nNpm scripts basically allow us to call (and chain) terminal commands via npm.\nThis is nice because most JavaScript tools have easy to use command line utilities allowing us to not need grunt or gulp to manage our builds.\nIf you open package.json, you will see a scripts section with all the different scripts you can call.\nTo call a script, simply run npm run  from the command line.\nYou'll notice that npm scripts can call each other which makes it easy to compose complex builds out of simple individual build scripts.\nBelow is a list of all the scripts this template has available:\n\n\n\nNpm Script\nDescription\n\n\n\n\nbuild\nFull build. Runs ALL build tasks\n\n\nstart:debug\nPerforms a full build and then serves the app in watch mode\n\n\nlint\nRuns ESLint on project files\n\n\nformat\nRuns the file formatter\n\n\nserve\nRuns node on dist/server.js which is the apps entry point\n\n\nstart\nDoes the same as 'npm run serve'. Can be invoked with npm start\n\n\ntest\nRuns tests using Jest test runner\n\n\ntest:watch\nRuns tests in watch mode\n\n\ndoc\nGenerate the project documenation using compdoc\n\n\n\nProject Structure\nIn a TypeScript project, it's best to have separate source  and distributable files.\nTypeScript (.ts) files live in your src folder and after compilation are output as JavaScript (.js) in the dist folder.\nThe test and views folders remain top level as expected.\nPlease find below a detailed description of the app's folder structures:\n\nNote! Make sure you have already built the app using  npm run build\n\n\n\n\nName\nDescription\n\n\n\n\n.vscode\nContains VS Code specific settings\n\n\n.github\nContains GitHub settings and configurations, including the GitHub Actions workflows\n\n\ndist\nContains the distributable (or output) from your TypeScript build. This is the code you ship\n\n\nnode_modules\nContains all your npm dependencies\n\n\nsrc\nContains your source code that will be compiled to the dist dir\n\n\nsrc/config\nHere you will find all the environment configuration necessary to access the application\n\n\nsrc/components\nComponents define group of files/source that respond to various module(http requests)\n\n\nsrc/components/${module_name}/dto/\nDTO (Data Transfer Object) Schema, Validation\n\n\nsrc/components/${module_name}/entities/\nEntities belongs to that Component\n\n\nsrc/components/${module_name}/repository/\nRepository belongs to that Component\n\n\nsrc/components/${module_name}/services/\nServices belongs to that Component\n\n\nsrc/components/${module_name}/module_name.controllers.ts\nController belongs to that Component\n\n\nsrc/components/${module_name}/module_name.module.ts\nModule belongs to that Component\n\n\nsrc/core\nAll core modules - Guards, Http Request & Response Handler, Logger\n\n\nsrc/main.ts\nEntry point to your express app\n\n\ntest\nContains your tests. Separate from source because there is a different build process.\n\n\nconfig/env/.env.example\nAPI keys, tokens, passwords, database URI. Clone this, but don't check it in to public repos.\n\n\npackage.json\nFile that contains npm dependencies\n\n\ntsconfig.json\nConfig settings for compiling server code written in TypeScript\n\n\ntsconfig.build.json\nConfig settings for compiling tests written in TypeScript\n\n\n.eslintrc\nConfig settings for ESLint code style checking\n\n\n.eslintignore\nConfig settings for paths to exclude from linting\n\n\n\nDocumentations\n1. Generation with compdoc\nGenerate project documentation using the following command (npm 6 is required for npx support). See the official documentation for more options.\nnpm run doc\nOR\nnpx @compodoc/compodoc -p tsconfig.json -s\n2. Request and Response Cycle\n\nAn explanation of how the request and response cycle works is provided here\n\n2.1 Request and Response Workflow\n\nBoilerplate has a custom guard enabled for handling response and request for every api. The integration of request response guard is enabled by default with response structure\n\n\n2.2 Request Workflow\n\nBy creating a workflow, you can specify the template that should be used to create a change request when a request for service is logged.\n\n\n3. Modules\n\nLogger\nRequest Response\nMailer\nDatabase\nReverse Proxy\nPattern\nCrypto\nRate Limit\nCompression\nCORS\nSwagger/Open API\nDatabase Migration\n\n4. Miscellaneous\n\nKnown Issues\nGit commits\nClean Docker Images\nInstallation Pretteri, Husky & Lint\n\n5. Trainings\n\nNest JS for Beginners\nNode JS for Beginners\n\nContributing to this project\nContributions are welcome from anyone and everyone. We encourage you to review the guiding principles for contributing\n\nBug reports\nFeature requests\nPull requests\n\nIssues/Discussions\n\nCreate New Issue\nCheck Existing Issues\nDiscussionsStay in touch\n\n\n\nWebsite - https://www.neosofttech.com/\nTwitter - @neosofttech\nMeetup -  https://www.meetup.com/neosoft-technologies/\nMedium -  https://medium.com/@neosofttech-technologies-blog\nGitHub - https://github.com/NeoSOFT-Technologies\nDiscord - NodeJS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/mockRequest.html":{"url":"classes/mockRequest.html","title":"class - mockRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  mockRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/mock/mock.request.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.request.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from '@app/core';\n\nexport class mockRequest implements Partial {\n  all(): Record {\n    return { key: 'value' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/mockResponse.html":{"url":"classes/mockResponse.html","title":"class - mockResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  mockResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            test/mock/mock.response.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                noContent\n                            \n                            \n                                success\n                            \n                            \n                                withMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noContent\n                        \n                    \n                \n            \n            \n                \nnoContent()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        withMeta\n                        \n                    \n                \n            \n            \n                \nwithMeta()\n                \n            \n\n\n            \n                \n                    Defined in test/mock/mock.response.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Response } from '@app/core';\n\nexport class mockResponse implements Partial {\n  success(): any {\n    return 'mock_success';\n  }\n  error(): any {\n    return 'mock_error';\n  }\n  noContent(): any {\n    return 'mock_noContent';\n  }\n  withMeta(): any {\n    return 'mock_withMeta';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailHandlerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThrottleModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_EmailHandlerModule\n\n\n\ncluster_EmailHandlerModule_exports\n\n\n\ncluster_EmailHandlerModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n...exportProvider() \n\n...exportProvider() \n\n...exportProvider()  -->\n\nCoreModule->...exportProvider() \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nThrottleModule\n\nThrottleModule\n\nAppModule -->\n\nThrottleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nEmailHandlerService \n\nEmailHandlerService \n\n\n\nEmailHandlerModule\n\nEmailHandlerModule\n\nEmailHandlerService  -->\n\nEmailHandlerModule->EmailHandlerService \n\n\n\n\n\nEmailHandlerService\n\nEmailHandlerService\n\nEmailHandlerModule -->\n\nEmailHandlerService->EmailHandlerModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            algorithm   (src/.../crypto.ts)\n                        \n                        \n                            apiResponse   (src/.../api.response.dto.ts)\n                        \n                        \n                            AppController_test   (test/.../user.e2e.ts)\n                        \n                        \n                            configa   (src/.../typeorm.config.ts)\n                        \n                        \n                            corsOptions   (src/.../cors.config.ts)\n                        \n                        \n                            decrypt   (src/.../crypto.ts)\n                        \n                        \n                            digest   (src/.../crypto.ts)\n                        \n                        \n                            encrypt   (src/.../crypto.ts)\n                        \n                        \n                            exportProvider   (src/.../providers.ts)\n                        \n                        \n                            getProviders   (src/.../providers.ts)\n                        \n                        \n                            iterations   (src/.../crypto.ts)\n                        \n                        \n                            keylen   (src/.../crypto.ts)\n                        \n                        \n                            loginCredentials   (test/.../generate-token.stub.ts)\n                        \n                        \n                            salt   (src/.../crypto.ts)\n                        \n                        \n                            setupAPIVersioning   (src/.../api.versioning.ts)\n                        \n                        \n                            setupSwagger   (src/.../index.ts)\n                        \n                        \n                            shouldCompress   (src/.../compression.ts)\n                        \n                        \n                            updateUserStub   (test/.../user.update.stub.ts)\n                        \n                        \n                            users   (test/.../users.response.ts)\n                        \n                        \n                            userStub   (test/.../user.stub.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/crypto/crypto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        algorithm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-gcm'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService, data: any) => {\n  try {\n    // constant to decrypt the data\n    const inputEncoding = 'base64';\n    const outputEncoding = 'utf8';\n\n    // Creates a new Buffer containing the given JavaScript string {str}\n    const bufferData = Buffer.from(data, inputEncoding);\n\n    // password - master key\n    const password = config.get('crypto.secretKey');\n\n    // derive key using; 32 byte key length\n    const key = crypto.pbkdf2Sync(password, salt, iterations, keylen, digest);\n\n    // extract iv from encrypted data\n    const iv = bufferData.slice(bufferData.length - 28, bufferData.length - 16);\n\n    // extract tag from encrypted data\n    const tag = bufferData.slice(bufferData.length - 16);\n\n    // extract encrypted text from encrypted data\n    const text = bufferData.slice(0, bufferData.length - 28);\n\n    // AES 256 GCM Mode\n    const decipher = crypto.createDecipheriv(algorithm, key, iv);\n\n    // set the auth tag\n    decipher.setAuthTag(tag);\n\n    // Used to update the cipher with data according to the given encoding format.\n    // @data: It is used to update the cipher by new content\n    // @inputEncoding: Input encoding format\n    // @outputEncoding: Output encoding format\n    let str = decipher.update(text, null, outputEncoding);\n\n    // Return the buffer containing the value of cipher object.\n    // @outputEncoding: Output encoding format\n    str += decipher.final(outputEncoding);\n\n    // parse the string decrypted data\n    return JSON.parse(str);\n  } catch (exception) {\n    throw new Error(exception);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sha512'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService, data: any) => {\n  try {\n    // constant to encrypt the data\n    const inputEncoding = 'utf8';\n    const outputEncoding = 'base64';\n\n    // password - master key\n    const password = config.get('crypto.secretKey');\n\n    // random initialization vector\n    const iv = crypto.randomBytes(12);\n\n    // The method gives an asynchronous Password-Based Key Derivation\n    const key: Buffer = crypto.pbkdf2Sync(password, salt, iterations, keylen, digest);\n\n    // create a Cipher object, with the stated algorithm, key and initialization vector (iv).\n    // @algorithm - AES 256 GCM Mode\n    // @key\n    // @iv\n    // @options\n    const cipher = crypto.createCipheriv(algorithm, key, iv);\n\n    // create a Cipher object, with the stated algorithm, key and initialization vector (iv).\n    // @algorithm - AES 256 GCM Mode\n    // @key\n    // @iv\n    // @options\n    const enc1 = cipher.update(JSON.stringify(data), inputEncoding);\n\n    // Return the buffer containing the value of cipher object.\n    // @outputEncoding: Output encoding format\n    // const enc2 = cipher.final();\n    const enc2 = cipher.final();\n\n    // extract the auth tag\n    const tag = cipher.getAuthTag();\n\n    // return the result\n    return Buffer.concat([enc1, enc2, iv, tag]).toString(outputEncoding);\n  } catch (exception) {\n    throw new Error(exception);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iterations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2145\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keylen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : crypto.randomBytes(64)\n                    \n                \n\n\n        \n    \n\n    src/components/users/constants/api.response.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUserCreatedResponse: 'User has been created successfully',\n\n  apiUserGetResponseV1: 'Users list from version 1 returned successfully',\n\n  apiUserGetResponseV2: 'Users list from version 2 returned successfully',\n\n  apiUserGetResponseNeutral: 'Users list from version neutral returned successfully',\n\n  apiUserGetById: 'User with specified Id returned successfully',\n\n  apiUserUpdatedResponse: 'User with specified id updated successfully',\n\n  apiUserDeletedResponse: 'User with specified id deleted successfully',\n\n  apiCreateUserFirstNameProperty: {\n    type: 'String',\n    description: 'Firstname of the user',\n  },\n\n  apiCreateUserLastNameProperty: {\n    type: 'String',\n    description: 'Lastname of the user',\n  },\n\n  apiUpdateUserBoolProperty: {\n    type: 'Boolean',\n    description: 'Tells us whether user is active or not',\n  },\n\n  apiValidateUserEmail: {\n    type: 'String',\n    description: 'Email of the user',\n  },\n\n  apiValidateUserPass: {\n    type: 'String',\n    description: 'Password of the user',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    test/e2e/user.e2e.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppController_test\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  let app: INestApplication;\n\n  beforeAll(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    coreBootstrap(app);\n    setupAPIVersioning(app);\n    setupSwagger(app);\n    await app.init();\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n\n  it('Should return 201 created status along with success message', async () => {\n    const response = await request(app.getHttpServer()).post('/users').send(userStub());\n\n    expect(response.status).toBe(StatusCodes.CREATED);\n    expect(response.body.data).toBe('success');\n  });\n\n  it('Should return response from version 1 along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const { status, body } = await request(app.getHttpServer())\n      .get('/v1/users')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Response from API version 1');\n  });\n\n  it('Should return response from version 2 along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const { status, body } = await request(app.getHttpServer())\n      .get('/v2/users')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Response from API version 2');\n  });\n\n  it('Should return users array along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const { status, body } = await request(app.getHttpServer())\n      .get('/users')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(200);\n    const { data } = body;\n    expect(data.length).toBeGreaterThanOrEqual(1);\n  });\n\n  it('Should return user of specified id along with 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const response = await request(app.getHttpServer())\n      .get('/users/2')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .expect(StatusCodes.OK);\n\n    expect(response.status).toEqual(StatusCodes.OK);\n    expect(response.body.success).toEqual(true);\n  });\n\n  it('Should update user of specified id and return 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const { status, body } = await request(app.getHttpServer())\n      .patch('/users/2')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .send(updateUserStub());\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Updation Successfull');\n  });\n\n  it('Should delete user of specified id and return 200 status code', async () => {\n    const loginResponse = await request(app.getHttpServer()).post('/auth/generateToken').send(loginCredentials);\n\n    const { status, body } = await request(app.getHttpServer())\n      .delete('/users/2')\n      .set('Authorization', 'Bearer ' + loginResponse.body.data.access_token)\n      .expect(StatusCodes.OK);\n\n    expect(status).toEqual(StatusCodes.OK);\n    const { data } = body;\n    expect(data).toEqual('Deletion Successfull');\n  });\n\n  it('Testing Swagger module - should return HTML in response', async () => {\n    const response = await request(app.getHttpServer()).get('/api/docs');\n    expect(response.headers['content-type']).toContain('text/html');\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/db/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configa\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mysql',\n  host: process.env.DB_HOST,\n  port: +process.env.DB_PORT,\n  username: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  entities: [User],\n  synchronize: false,\n  cli: {\n    migrationsDir: 'src/db/migrations',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/core/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        corsOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  origin: ['https://example1.com', 'https://example2.com', 'https://127.0.0.1:5500'],\n}\n                    \n                \n\n\n        \n    \n\n    src/core/providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        exportProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): [any] => {\n  return [AppLogger];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): [any] => {\n  return [AppLogger];\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/generate-token.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loginCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  email: 'santoshshinde@gmail.com',\n  password: '123456seven',\n}\n                    \n                \n\n\n        \n    \n\n    src/core/api.versioning.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupAPIVersioning\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  switch (config.get('app.apiVersioning')) {\n    case 'Header':\n      app.enableVersioning({\n        type: VersioningType.HEADER,\n        header: config.get('app.apiVersioningHeader'),\n      });\n      break;\n    case 'Media Type':\n      app.enableVersioning({\n        type: VersioningType.MEDIA_TYPE,\n        key: config.get('app.apiVersioningKey'),\n      });\n      break;\n    default:\n      app.enableVersioning({\n        type: VersioningType.URI,\n      });\n      break;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/swagger/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  const options = new DocumentBuilder()\n    .setTitle(config.get('app.name'))\n    .setDescription(`API Documentation for the app ${config.get('app.name')}`)\n    .setVersion(config.get('app.version'))\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWT',\n        description: 'Enter JWT token',\n        in: 'header',\n      },\n      'JWT-auth'\n    )\n    .build();\n\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api/docs', app, document);\n}\n                    \n                \n\n\n        \n    \n\n    src/core/compression/compression.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        shouldCompress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req: Request, res: Response) => {\n  if (req.headers['x-no-compression']) {\n    return false;\n  }\n  return compression.filter(req, res);\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/user.update.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        updateUserStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    isActive: true,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    test/mock/users.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 127,\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    email: 'santoshshinde@gmail.com',\n    password: '123456seven',\n    isActive: true,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    test/mock/user.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    firstName: 'Santosh',\n    lastName: 'Shinde',\n    email: 'santoshshinde@gmail.com',\n    password: '123456seven',\n    isActive: true,\n  };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution.html":{"url":"additional-documentation/contribution.html","title":"additional-page - Contribution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributing to this project\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\nUsing the issue tracker\nThe issue tracker is the preferred channel for bug reports,\nfeatures requests and submitting pull\nrequests.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/bug-reports.html":{"url":"additional-documentation/contribution/bug-reports.html","title":"additional-page - Bug Reports","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBug reports\nA bug is a demonstrable problem that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\nGuidelines for bug reports:\n\nUse the GitHub issue search — check if the issue has already been\nreported.\n\nCheck if the issue has been fixed — try to reproduce it using the\nlatest main or development branch in the repository.\n\n\nExample:\n\nShort and descriptive example bug report title\nA summary of the issue and the browser/OS environment in which it occurs. If\nsuitable, include the steps required to reproduce the bug.\n\nThis is the first step\nThis is the second step\nFurther steps, etc.\n\n - a link to the reduced test case\nAny other information you want to share that is relevant to the issue being\nreported. This might include the lines of code that you have identified as\ncausing the bug, and potential solutions (and your opinions on their\nmerits).\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/features-requests.html":{"url":"additional-documentation/contribution/features-requests.html","title":"additional-page - Features Requests","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeature requests\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to you to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contribution/pull-requests.html":{"url":"additional-documentation/contribution/pull-requests.html","title":"additional-page - Pull Requests","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPull requests\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\nPlease ask first before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\nFollow this process if you'd like your work considered for inclusion in the\nproject:\n\nFork the project, clone your fork,\nand configure the remotes:\n# Clone your fork of the repo into the current directory\ngit clone https://github.com//\n# Navigate to the newly cloned directory\ncd \n# Assign the original repo to a remote called \"upstream\"\ngit remote add upstream https://github.com//\nIf you cloned a while ago, get the latest changes from upstream:\ngit checkout \ngit pull upstream \nCreate a new topic branch (off the main project development branch) to\ncontain your feature, change, or fix:\ngit checkout -b \nCommit your changes in logical chunks. Please adhere to these git commit\nmessage guidelines\nor your code is unlikely be merged into the main project. Use Git's\ninteractive rebase\nfeature to tidy up your commits before making them public.\n\nLocally merge (or rebase) the upstream development branch into your topic branch:\ngit pull [--rebase] upstream \nPush your topic branch up to your fork:\ngit push origin \nOpen a Pull Request\n with a clear title and description.\n\n\nIMPORTANT: By submitting a patch, you agree to allow the project owner to\nlicense your work under the same license as that used by the project.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules.html":{"url":"additional-documentation/modules.html","title":"additional-page - Modules","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModules\nBoiler plate is build over the top of Nest with structure of /src/core module which consist all the major functionality required in the development like database connection, SMTP integration, Email template management, request response handler, Logger etc.\n\nHome\nLogger\nRequest Response\nMailer\nDatabase\nPattern\nCrypto\nSwagger/Open API\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/logger.html":{"url":"additional-documentation/modules/logger.html","title":"additional-page - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogger\nLogger module is already present in Boiler Plate. We have used  winston npm package to extend the logger functionality. The objective of the logger module is \n\nIt should support text-based logging \nDefining different levels of logs like warn, error, debug etc.\n\nUsability\nLogger is part of CoreModule imports which would be default enabled for every application. To call the logger module we need to import it as dependency and then call the desired function for logging info \n\nLogger module has different level of functions for logging\nconstructor( private appLogger: AppLogger) {} \n\nthis.appLogger.log('API called');Logs are created in logs/app.log file at project root level below\nOutput format\nLog format would be (datetime [app_name] level: message)eg. 2021-06-15T05:45:28.894Z [Boiler plate NestJS] info: API called \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/request-response.html":{"url":"additional-documentation/modules/request-response.html","title":"additional-page - Request Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRequest Response\n  Boilerplate has a custom guard enabled for handling response and request for every api. The integration of request response guard is enabled by default with response structure\nOverview\n\nAvailable function for response.\nsuccess\n\n The success function expected two parameters\n\ndata: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nerror\n\n The error function expected two parameters\n\nerror: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nnoContent\n\n The noContent function expected no parameters\nwithMeta\n\n The withMeta function expected two parameters. This function extract additional data passed to response object into new response key as meta.\n\ndata: Json response data.\nStatus code: API response status code, we have used http-status-codes enums for different type of response code.\n\nUsability:\nWe need to import the Request and Response interface from the core modules\nimport { Request, Response } from '@libs/core';\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private appLogger: AppLogger) {}\n\n  @Get()\n  getHello(@Req() req: Request, @Res() res: Response): Promise {\n    this.appLogger.log('API called');\n    return res.success(this.appService.getHello());\n  }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/mailer.html":{"url":"additional-documentation/modules/mailer.html","title":"additional-page - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMailer\nThe objective of Mailer module\n\nThis module would support sending emails via SMTP which stands for Simple Mail Transfer Protocol. We need to provide SMTP credentials in .env in the desired format mentioned below.\nMailer module also supports the attachment functionality.\nWe need to define the email template folder from where we need fetch the email template.\nCurrently we support pug email templates\nThe third-party service that we are using is the nodemailer package.\n\nPug\nPug is a high performance template engine heavily influenced by Haml and implemented with JavaScript for Node.js and browsers. This library is used for designing the template of the email body.\nInstall Dependencies\nFirst we need to install the nodemailer package by the following command.\nnpm install --save nodemailerThe below command is executed to support .ts files.\nnpm install --save @types/nodemailerTo install Pug template execute the following instruction.\nFor .js\nnpm install --save pugFor .ts\nnpm install --save @types/pugConfiguration\nTo configure the SMTP service we need to add below values in the environment. The values are self explanatory.  \nEMAIL_HOST=\nEMAIL_PORT=\nUSER_EMAIL=\nUSER_PASSWORD=Once the .env is setup then the values of the .env file will be imported in the application with the help of mailer.ts file present in the config directory.\nexport default registerAs('mailer', () => ({\nfromEmail: process.env.USER_EMAIL,\nhost: process.env.EMAIL_HOST ,\nport: process.env.EMAIL_PORT ,\nusername: process.env.USER_EMAIL ,\npassword: process.env.USER_PASSWORD ,\n}));Usability\nSince Mailer is required in every module it is the part of the CoreModule imports.\nAlso it is an independent module hence a mailer.module.ts file is being created in which we have provided the EmailHandlerService.\n@Module({\n  providers: [EmailHandlerService],\n  exports: [EmailHandlerService],\n})\nexport class EmailHandlerModule {}The class EmailHandlerModule can be used via importing it in any of the core module such as Users module or App module etc. Consider we want to use the Mailer module in the Users module. It can  be done simply by the below steps. First import the EmailHandlerModule in the user.module.ts file.\n@Module({\n  imports: [TypeOrmModule.forFeature([UserDbRepository]), EmailHandlerModule],\n  providers: [UsersService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}Now since we need it in the User module we need to add the EmailHandlerService as a dependency in the user.controller.ts file.\nconstructor(private readonly emailService: EmailHandlerService) {} \nFinally to trigger an email, we need pass below parameters to sendMail function in EmailHandlerService.\nIn this case we are sending template as a mail.\n await this.emailService.sendEmail({\n        to:'',\n        subject:'subject',\n        templateName:'sample',\n        replace:{'name': ''},\n });The paramenters of the sendEmail function are self explanatory. The templateName parameter defines the template od the email that we are going to send through the  sendEmail function.\nThe value sample is the sample.pug file which contains the template that is to be sent in the mail. The .pug should be kept in the template fol\n\ntemplate: The .pug file should be kept in the template folder whose directory might be in the following format /src/core/mailer/template/sample.pug\n\nAt the same time if we want to send a textbody via email then it has to be defined\nin as a value against the body parameter. Use the following snippet of the code.\n await this.emailService.sendEmail({\n        to:'',\n        subject:'subject',\n        body:'This is email body',\n });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/database.html":{"url":"additional-documentation/modules/database.html","title":"additional-page - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDatabase\nBoiler plate has already included mysql and mongodb database configuration within the core modules. To leverage the functionality, we need to define the database connection in database.module.ts which is in db folder inside src. Update the database configuration as per your setting.\nInstallation\nFor integrating with SQL and NoSQL databases, Nest provides the @nestjs/typeorm package. Nest uses TypeORM because it's the most mature Object Relational Mapper (ORM) available for TypeScript. Since it's written in TypeScript, it integrates well with the Nest framework.TypeORM provides support for many relational databases, such as PostgreSQL, Oracle, Microsoft SQL Server, SQLite, and even NoSQL databases like MongoDB.\n$ npm install --save @nestjs/typeorm typeormNow proceed to install the associated client API libraries for selected database.\nFor MySQL install mysql\n$ npm install --save mysql2For MongoDB install MongoDB NodeJS Driver.We install older version as typeorm does not support mongodb driver for v4\n$ npm install --save mongodb@3.7.0\nNote: It is a best practice to import database information from application configuration.\n\nConfiguration\n# database.module.ts\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      name: 'mysql_connection',\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mysql',\n        host: config.get('db.host'),\n        port: config.get('db.port1'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        entities: [User],\n        // entities: [__dirname + '/**/*.entity{.ts,.js}'],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n      }\n      ),\n    }),\n    TypeOrmModule.forRootAsync({\n      name: 'mongoDB_connection',\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        type: 'mongodb',\n        host: config.get('db.host'),\n        port: config.get('db.port2'),\n        username: config.get('db.username'),\n        password: config.get('db.password'),\n        database: config.get('db.database'),\n        useUnifiedTopology: true,\n        authSource: 'admin',\n        entities: [User],\n        synchronize: config.get('app.env') === 'local' || 'dev' ? true : false,\n      }),\n    }),\n  ],\n})type:   Database type. Must specify which database engine to use.\nhost:   Database host.\nport:   Database host port. Default mysql port is 3306 & default mongodb port is 27017.\nusername:   Database username.\npassword:   Database password.\ndatabase:   Database name.\nuseUnifiedTopology:   Determines whether or not to use the new Server Discovery and Monitoring engine.\nauthSource:   If the Database authentication is dependent on another databaseName\nentities:   Entities that maps with database table. It is shown below\n# users.entity.ts\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  id: string;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n}synchronize:   Synchronize the entities with databases. Should not be enabled for production.\n\nUsing the forFeature() method repositories are registered in the current scope.\n\n# users.module.ts\n\n    @Module({\n    imports: [TypeOrmModule.forFeature([UserDbRepository],'mongoDB_connection')],\n    providers: [UsersService],\n    controllers: [UsersController],\n    })\nInject UserDbRepository using @InjectRepository decorator\n\n# users.service.ts\n\nconstructor(\n    @InjectRepository(UserDbRepository,'mongoDB_connection')\n    private readonly usersRepository: UserRepository\n  ) {}Using other database apart from MySQL and MongoDb.\nThe existing boiler plate comes with by default support for MySQL. This doesn't mean that you cannot use any other database like  PostgreSQL, Oracle, Microsoft SQL Server etc. Install the respective package of the database and update the config.ts as per required database configuration.\n\n\nNoSQL injections\nA NoSQL injection vulnerability is an error in a web application that uses a NoSQL database. This web application security issue lets a malicious party bypass authentication, extract data, modify data, or even gain complete control over the application. NoSQL injection attacks are the result of a lack of data sanitization.\nNoSQL injections are just one of many injection attacks, similar to traditional SQL Injections. They are engineered to exploit modern databases that do not use SQL. While NoSQL database engines have a different structure and do not support SQL statements and SQL queries, they still let users perform queries. They do not support one standardized language and therefore the query language is dependent on the implementation: database (e.g. MongoDB), language, and framework (e.g. Node.js, Angular). However, NoSQL queries are most often based on JSON and they can include user input. If this input is not sanitized, they are vulnerable to injections.\n\nTypes Of Injection Attacks\n\nIn-band Injections : In-band Injection is the most common and easy-to-exploit of Injection attacks. In-band Injection occurs when an attacker is able to use the same communication channel to both launch the attack and gather results. As an example, an attacker may use the HTTP communication deploy the attack to a backend and get the results on the same channel\n\nInferential Injection (Blind Injection): In an inferential attack, no data is actually transferred via the web application and the attacker would not be able to see the result of an attack in-band. Instead, an attacker is able to reconstruct the database structure by sending payloads, observing the web application’s response and the resulting behavior of the database server.\nBlind injection is nearly identical to normal injection, the only difference being the way the data is retrieved from the database. When the database does not output data to the web page, an attacker is forced to steal data by asking the database a series of true or false questions. This makes exploiting the Injection vulnerability more difficult, but not impossible.\n\nOut-of-band Injections: This not very common type of injection, mostly because it depends on features being enabled on the database server being used by the web application. Out-of-band Injection occurs when an attacker is unable to use the same channel to launch the attack and gather results.\n\n\nHow to prevent injection attacks\n\nTry to avoid building queries from strings, use safe APIs and prepared statements.\nValidate input to detect malicious values, also verify the types of input data i.e. string, number, Boolean, object etc. We can use joi or any other tool for this.\nTo minimize the potential damage of a successful injection attack, do not assign DBA or admin type access rights to your application accounts, we can create new roles with specific/limited access.\nSanitize the data, we can use express-mongo-sanitize to sanitize incoming data for express mongoDB.Database Vulnerabilty against injection\n\n\n\n\n\nConnection type\nWith ORM\nWithout ORM\n\n\n\n\nSecurity\nRisk is low Data sanitization not requiredGenerates \"parameterized statements\"\nRisk is high Data sanitization required\"parameterized statements\" needs to written manually\n\n\n\nTypeORM provide many ways to construct a database query, but they also give you the option to execute 'raw' queries as a string.Also they allow to write some part of a generated query as a raw string. This should to be avoided, as it defeats the purpose of using an ORM.\nIn that scenario, simply injecting user input variables into a string query (instead of using the ORM's core API / query builder functions) puts data security at a higher risk.\nData sanitization for MongoDB\nWe can use express-mongo-sanitize for this purpose,if required.This module searches for any keys in objects that begin with a $ sign or contain a ., from req.body, req.query or req.params. It can then either:\n\ncompletely remove these keys and associated data from the object, or\nreplace the prohibited characters with another allowed character.\n\nObject keys starting with a $ or containing a . are reserved for use by MongoDB as operators. Without this sanitization, malicious users could send an object containing a $ operator, or including a ., which could change the context of a database operation. Most notorious is the $where operator, which can execute arbitrary JavaScript on the database.The best way to prevent this is to sanitize the received data, and remove any offending keys, or replace the characters with a 'safe' one.\n\nSimple add the the middleware after installing the library as shown below\n\n# bootsrap.ts\n...\nimport  mongoSanitize  from 'express-mongo-sanitize';\n\n...\napp.use(mongoSanitize());\n...\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/pattern.html":{"url":"additional-documentation/modules/pattern.html","title":"additional-page - Pattern","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDesign Pattern\nClean architecture\n\nSeparation of concerns at the architectural level\n\nThis document defines the design pattern for developing any web api application. We intend to follow clean architecture. Dividing the application into multiple layers like Domain layer, Service layer, Repository layer etc. The implementation of these layer would explained via example. For more understanding kindly refer Clean Architecture related articles.\nIn this boiler plate, we define the methods and techniques that would useful for building and maintaining web app build in NestJS. NestJS itself has covered alot techniques like TypeORM, Dependency Injection and so on. This document help us to utilize functionality and follow clean architecture.\n\nIn the above diagram, we code the see the how does the request flows from controller to database. There are lot of aspects that need to consider in this, like external api calls, caching etc which would be covered later.\nInversion of Control (IoC)\nIn software engineering, inversion of control (IoC) is a programming principle. IoC inverts the flow of control as compared to traditional control flow. In IoC, custom-written portions of a computer program receive the flow of control from a generic framework. A software architecture with this design inverts control as compared to traditional procedural programming: in traditional programming, the custom code that expresses the purpose of the program calls into reusable libraries to take care of generic tasks, but with inversion of control, it is the framework that calls into the custom, or task-specific, code.\nBelow is the inversion of flow for the boiler plate which has been used for user module.\n\nThe control flows from UserController to UserService, we have DTO defined for transfering data between classes eg. create.user.dto, update.user.dto\nUnderstanding the implementation of clean code in boilerplate\nTo start with let's understand the folder structure and files first.\n\nApp.module — the core of the project, here we import modules that are providing functionalities.\nusers.module — this module will be imported by AppModule to provide everything that is related to our users.\nusers.controller — Here we declare our endpoints with all parameters.\nentities — in this place we declare our User class.\ndto— data transfer object — a bunch of interfaces for communication with the application.\nrepository — in this place we define all the queries related to database or external IO.\nservices - in this place we have our business logic defined\nNow let us go through each folder\n1. entities\nIn this folder, we have defined the database table fields that is required for that entity. TypeORM has some build-in helpers like PrimaryGeneratedColumn, Column etc. Ref: TypeORM documentation\n2. dto\nIn this folder, we have defined the the data transfer object that would be used to communicated between classes. DTO are helpful for avoid leak of unwanted data or fields\n3. repository\nIn this folder, we have defined the database queries related to the entity. We have used typeORM for fetching or saving data. Before defining the implementation of the repository, it is a good practice to define an interface of the repository.\n4. services\nIn this folder, we have defined the business logic related to the entity. For executing the db queries, we use the repository. Repository and services are loosely coupled with the repository interface.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/crypto.html":{"url":"additional-documentation/modules/crypto.html","title":"additional-page - Crypto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEncryption-Decryption\nEncryption-Decryption module is present in the Boiler Plate. We have used the crypto library in order to implement the encryption decryption functionality.\nThe objective of Encryption-Decryption module\n\nThis module would support sending the requests to the server from the user in encrypted form and also encryptingthe reponses that the user will receive from the server.\nWe need to provide a flag variable which tells us whether we need to encrypt the data or not in the .env file.\nAlso we need to define the constants such as which algorithm to be used for encryption in the crypto.ts file.\nCurrently we are using aes-256-gcm algorithm for encryption and decryption.\n\nConfiguration\nTo start the encryption-decryption service we need to set the APPLY_ENCRYPTION variable to 1 in the .env file.\nAPPLY_ENCRYPTION=We can also set these constants according to our preference in the crypto.ts file.\nconst inputEncoding= \nconst outputEncoding= \nconst salt= \nconst algorithm= \nconst password= Usability\nSince we require to encrypt the request and responses of the application, Encryption-Decryption service is being included in the core module.\nWhat is the main difference between a key, an IV and a nonce?\nA key, in the context of symmetric cryptography, is something you keep secret. Anyone who knows your key (or can guess it) can decrypt any data you've encrypted with it (or forge any authentication codes you've calculated with it, etc.).\nAn IV or initialization vector is, in its broadest sense, just the initial value used to start some iterated process. The term is used in a couple of different contexts and implies different security requirements in each of them.\nA nonce, in the broad sense, is just \"a number used only once\". The only thing generally demanded of a nonce is that it should never be used twice (within the relevant scope, such as encryption with a particular key). The unique IVs used for block cipher encryption qualify as nonces, but various other cryptographic schemes make use of nonces as well.\nWhy does the Signal protocol use AES/CBC instead of AES/GCM?\nAES-GCM Disadvantage\nWhy would I ever use AES-256-CBC if AES-256-GCM is more secure?\nHow to choose an Authenticated Encryption mode\nNode.js - AES Encryption/Decryption with AES-256-GCM using random Initialization Vector + Salt\nEncryption algorithms should be used with secure mode and padding scheme\n\nEncryption operation mode and the padding scheme should be chosen appropriately to guarantee data confidentiality, integrity and authenticity:\n\nFor block cipher encryption algorithms (like AES):\nThe GCM (Galois Counter Mode) mode which works internally with zero/no padding scheme, is recommended, as it is designed to provide both data authenticity (integrity) and confidentiality. Other similar modes are CCM, CWC, EAX, IAPM and OCB.\nThe CBC (Cipher Block Chaining) mode by itself provides only data confidentiality, it’s recommended to use it along with Message Authentication Code or similar to achieve data authenticity (integrity) too and thus to prevent padding oracle attacks.\nThe ECB (Electronic Codebook) mode doesn’t provide serious message confidentiality: under a given key any given plaintext block always gets encrypted to the same ciphertext block. This mode should not be used.\nFor RSA encryption algorithm, the recommended padding scheme is OAEP.\n\n\n\n\nNoncompliant Code Example\n\nNoncompliant: CBC with PKCS5/7 (set by default) is vulnerable to oracle padding attacks\n\n  crypto.createCipheriv(\"AES-128-CBC\", key, iv);\n\nNoncompliant: ECB doesn't provide serious message confidentiality\n\n  crypto.createCipheriv(\"AES-128-ECB\", key, \"\");\n\nCompliant Solution\n\n\ncrypto.createCipheriv(\"AES-256-GCM\", key, iv);\nTest\nhttps://www.devglan.com/online-tools/aes-encryption-decryption\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/modules/open-api/swagger.html":{"url":"additional-documentation/modules/open-api/swagger.html","title":"additional-page - Open API/Swagger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSwagger/Open API\n\nThe OpenAPI specification is a language-agnostic definition format used to describe RESTful APIs. Nest provides a dedicated module which allows generating such a specification by leveraging decorators.\n\nRefrences\n\nOpenAPI (Swagger) | NestJS\n\nInstallation\nTo begin using it, we first install the required dependencies.\nnpm install --save-dev @nestjs/swagger swagger-ui-express\nImplemenetation\nTo begin, we will create a new file called src/swagger/index.ts into which we will add the following code.\nimport { INestApplication } from '@nestjs/common';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nexport const setupSwagger = (app: INestApplication) => {\n  const config = app.get(ConfigService);\n  const options = new DocumentBuilder()\n    .setTitle(config.get(config.get('app.name')))\n    .setDescription(`API Documentation for the app ${config.get('app.name')}`)\n    .setVersion(config.get('app.vesrion'))\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api/docs', app, document);\n};We need to add the following code to the src/main.ts file to call this code, If the environment is dev/local/staging, then only swagger will be enabled.\nconst envList = ['dev', 'staging', 'local', 'test'];\n\nif (envList.includes(config.get('app.env'))) {\n    setupSwagger(app);\n}Run the Swagger\nYou can check swagger running on http://localhost:5000/api/docs\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous.html":{"url":"additional-documentation/miscellaneous.html","title":"additional-page - Miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMiscellaneous\n\nKnown Issues\nGit commits\nClean Docker Images\nInstallation Pretteri, Husky & Lint\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/git-commits.html":{"url":"additional-documentation/miscellaneous/git-commits.html","title":"additional-page - Git commits","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit commits and pre hooks\nWe have added some git pre hooks while committing the code. These pre hooks are executed on every git commit.\nWhat is commitlint\nCommitlint checks if your commit messages meet the conventional commit format.\nCommit message can be bifurcated into 3 section \"(): \"\nType: can be anyone of them feat | bugfix | feature etc.\n\nModule/Scope: Module/Scope is the name of the module you are working on\n\nCommit_Message: Actual commit message\ngit commit -m \"feat(documentation): adding documentation\"\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nchore: Updating tasks etc; no production code change\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeat: A new feature\nfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\nsample: A change to the samples\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/known-issues.html":{"url":"additional-documentation/miscellaneous/known-issues.html","title":"additional-page - Known Issues","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to fix “mbind: Operation not permitted” in mysql error log\nAdd the capability CAP_SYS_NICE to your container until MySQL server can handle the error itself \"silently\".\nservice:\n  mysql:\n    image: mysql:8.0.15\n    # ...\n    cap_add:\n      - SYS_NICE  # CAP_SYS_NICEhttps://stackoverflow.com/questions/55559386/how-to-fix-mbind-operation-not-permitted-in-mysql-error-log\nhttps://docs.docker.com/config/containers/resource_constraints/\nMySQL init script on Docker compose\nMySQL Docker container supports executing init scripts on startup, All we need to do is either copy or mount our script files to /docker-entrypoint-initdb.d/ folder inside MySQL docker image.\n# Docker Compose with MySQL Server\nversion: '3.3'\nservices:\n  database:\n    image: 'mysql:8'\n    cap_add:\n      - SYS_NICE\n    container_name: '${APP_NAME}_mysql'\n    hostname: '${APP_NAME}_mysql'\n    networks:\n        - internal\n    ports:\n        - '127.0.0.1:${DB_PORT}:3306'\n    volumes:\n        - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql\n        - mysql:/var/lib/mysql\n    env_file:\n        - .envThe \"class-validator\" package is missing. Please, make sure to install this library ($ npm install class-validator) to take advantage of ValidationPipe\nnpm install --save class-validator\nThe \"class-transformer\" package is missing. Please, make sure to install this library ($ npm install class-transformer) to take advantage of ValidationPipe.\nnpm install class-transformer --save \nMap src directory in package.json jest config\nhttps://github.com/nestjs/nest/issues/4953\nError: Interface 'Response' incorrectly extends interface 'Response'\nnpm i -D @types/express-serve-static-core\nhttps://stackoverflow.com/questions/63330265/getting-interface-responseresbody-incorrectly-extends-interface-response\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/issues/46639\nIs there a recommended way to update NestJS?\n$ npm install -g @nestjs/cli\n$ nest updatenpm install --save @nestjs/common@latest @nestjs/config@latest @nestjs/core@latest @nestjs/platform-express@latest @nestjs/typeorm@latest reflect-metadata rxjs\nnpm install --save-dev @nestjs/testing\nhttps://stackoverflow.com/questions/57469252/is-there-a-recommended-way-to-update-nestjs\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/clean-docker-images.html":{"url":"additional-documentation/miscellaneous/clean-docker-images.html","title":"additional-page - Clean Docker Images","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClean Docker Images\nHow to Do a Clean Restart of a Docker Instance\n1. Stop the container(s) using the following command\ndocker-compose down\n2. Delete all containers using the following command\ndocker rm -f $(docker ps -a -q)\n3. Delete all volumes using the following command\ndocker volume rm $(docker volume ls -q)\n4. Restart the containers using the following command\ndocker-compose up -d\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html":{"url":"additional-documentation/miscellaneous/installation-pretteri,-husky-&-lint.html","title":"additional-page - Installation Pretteri, Husky & Lint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nESLint\nnpm install --save-dev  eslint eslint-config-prettier eslint-plugin-import\nESLint is a fully pluggable tool for identifying and reporting on patterns in JavaScript.\nConfiguration file: .eslintrc.js.\nFor more configuration options and details, see the configuration docs.\n\nCommitlint\nnpm install --save-dev @commitlint/cli @commitlint/config-conventional commitizen cz-conventional-changelog\ncommitlint checks if your commit messages meet the conventional commit format.\nConfiguration file: [.commitlintrc]\nIn general the pattern mostly looks like this:\ntype(scope?): subject  #scope is optionalAre you a good commitizen ?\n\nHusky\nnpm install --save-dev husky lint-staged prettier\nHusky is a package that helps you create Git hooks easily.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings.html":{"url":"additional-documentation/trainings.html","title":"additional-page - Trainings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTrainings\n\nGit for Beginners\nNode JS for Beginners\nNest JS for Beginners\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/node-js-for-beginners.html":{"url":"additional-documentation/trainings/node-js-for-beginners.html","title":"additional-page - Node JS for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNodeJS Training\nPrerequisites\n\nJavaScript  \nTypescript \nnpm\n\nTopics\n1. Introduction & Foundation\n\nIntroduction \nThe Node.js framework \nExplain what Node.js is \nDescribe how Node.js works \nIdentify when to use Node.js \nCreate and run a Node.js script from the command line\n\n\nEvent Loop \nWhat is the Event Loop? \nEvent Loop Explained \nPhases Overview \nWhy use process.nextTick()?\n\n\nSingle threaded Architecture \nV8 JavaScript Engine   \nC library - libuv \nProcess & Thread \nThread pool \nUnderstand Node JS Single Thread Event Loop Workflow\n\n\n\n2. Node Projects\n\nNode Project Manager \nInitialize Node.js projects \nnpm and nvm\n\n\npackage.json configuration file \nGlobal vs local package installation\n\n3. Starting with Node js\n\nGlobal Objects (http://nodejs.org/api/globals.html) \n__filename \n__dirname \nmodule \nexports \nprocess \nBuffer\n\n\nConsole (http://nodejs.org/api/console.html) \nlog \ninfo \nerror \nwarn \ndir \ntime \ntimeEnd \ntrace \nassert\n\n\nTimers (http://nodejs.org/api/timers.html) \nsetTimeout(callback, delay, [arg], [...]) \nclearTimeout(t) \nsetInterval(callback, delay, [arg], [...]) \nclearInterval(t) \nsetImmediate(callback, [arg], [...]) \nclearImmediate(immediateObject) \nunref() \nref()\n\n\nModules (http://nodejs.org/api/modules.html) \nDebugging(https://nodejs.org/en/docs/guides/debugging-getting-started) \n--inspect \nSecurity Implications \nnode-inspector(https://github.com/node-inspector/node-inspector)\n\n\n\n4. Express JS\n\nModel View Controller Pattern \nTemplate Engine \nUsing REST \nMiddleware\n\n5. Unit Testing\n\nBasic Introduction \nAssert (http://nodejs.org/api/assert.html) \nFunctional and Integration testing \nImplementation of unit testing using Mocha or Chai\n\n6. Express JS Practical\n\nSetup the new Project  \nAdd the unit test cases\n\n7. Working with Asynchronous Programming\n\nAsynchronous basics \nCallback Functions \nWorking with Promises \nAPI Calls\n\n8. Building a HTTP Server with Node JS using HTTP APIs\n\nHTTP protocol (http://nodejs.org/api/http.html) \nTo use the HTTP server and client one must require('http').\n\n\nHTTP server & HTTPS Server \nURL (http://nodejs.org/api/url.htm) \nThis module has utilities for URL resolution and parsing. Call require('url') to use it.\n\n\nQuery String (http://nodejs.org/api/querystring.html) \nThis module provides utilities for dealing with query strings. Call require('querystring') to use it\n\n\n\n9. File System\n\nBasic (http://nodejs.org/api/fs.html) \nTo use this module do require('fs'). \nAll the methods have asynchronous and synchronous forms.\n\n\nSynchronous vs Asynchronous IO \nFile Read and Write \nUtil (http://nodejs.org/api/util.html) \nPath \nUse require('path') to use this module. \nThis module contains utilities for handling and transforming file paths. \nAlmost all these methods perform only string transformations.\n\n\n\n10. Buffers, Streams, and Events\n\nBuffers for binary Data (http://nodejs.org/api/buffer.html) \nBuffer is used to dealing with binary data  \nBuffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap\n\n\nEvent Emitter(http://nodejs.org/api/events.html) \naddListener \non \nonce \nremoveListener \nremoveAllListeners \nsetMaxListeners \nlisteners \nemit\n\n\nStream (http://nodejs.org/api/stream.html) \nFlowing vs non-flowing streams \nStreams are readable, writable, or both. \nreadable streams  \nhttp responses on the client \nhttp requests on the server \nfs read streams \nzlib streams (https://nodejs.org/api/zlib.html) \ncrypto streams (https://nodejs.org/api/crypto.html) \ntcp sockets \nchild process stdout and stderr \nprocess.stdin\n\n\nwritable streams  \nhttp requests on the client \nhttp responses on the server \nfs write streams \nzlib streams \ncrypto streams \ntcp sockets \nchild process stdin \nprocess.stdout \nprocess.stderr\n\n\nDuplex streams \ntcp sockets \nzlib streams \ncrypto streams\n\n\nTransform streams \nzlib streams \ncrypto streams\n\n\n\n\nFile System and Security (Example - Build one system) \nAPI to upload file \nWrapper to upload file\n\n\nWeb-hooks\n\n11. Multi-Processing in NodeJS\n\nProcess(http://nodejs.org/api/process.html) \nChild Process (http://nodejs.org/api/child_process.html) \nNode provides a tri-directional popen facility through the child_process module. \nIt is possible to stream data through a child's stdin, stdout, and stderr in a fully non-blocking way.\n\n\nCluster API for multi-core servers \nMulti-Processing \nProvides a few basic operating-system related utility functions \nUse require('os') to access this module. (http://nodejs.org/api/os.html)\n\n12. Socket.io, The Front-End & A Chat App\n\nBasic of Socket IO \nExample & Implementation of events, listener, broadcast & emitters\n\n13. Putting It All Together\n\nProblem Statement - Event Management System (NodeJS + Postgres/Mongo DB/MySQL) \nUser \nRegister (User can register) \nLogin (User login) \nLogout (User logout) \nChange Password (User can change his password) \nUpdate Password (When request for reset password is done, to set new password) \nReset Password (In API response send info regarding to update-password)\n\n\nEvent (Authentication required for doing operations on event) \nCreate (User can create Event) \nInvite (Users) // Just store emails and when that user login in he can see his created event list and also events in which he is invited \nList (Invited users when login can see their events as well events events in which they are invited in, also display creator name in list) \nSorting \nDate Filter \nSearch Filter \nEvent Detail + list of users invited (API to get specific event and invites) \nEvent update (Event Update)\n\n\nNotes \nConsider models as per your knowledge \nCreate Postman for above APIs \nAdd the unit test cases for APIs\n\n\n\n\nSkills covered in Node.js tests \nKnowledge of JavaScript \nAsynchronous programming \nManaging databases from Node.js (e.g. MongoDB) \nProcessing data structures \nFunctional programming with JavaScript \nObject-Oriented programming with JavaScript \nUnit Test cases\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/nest-js-for-beginners.html":{"url":"additional-documentation/trainings/nest-js-for-beginners.html","title":"additional-page - Nest JS for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNest JS Training\nPrerequisites\n\nNode JS  \nExpress JS \nTypescript\n\nTopics\n1. Getting Started\n\nIntroduction to Nest JS \nRest API \nMicroservices \nWeb Sockets \nGraphql\n\n\nInstalling the NestJS CLI (command-line interface) \nInstalling Node.js\nInstall NestJS CLI -globally \nGenerating  Nest JS Application\n\n\nWhat’s inside a Nest JS Application\n\n2. Creating a REST API application\n\nPrerequisite: Install Insomnia/Postman \nCreating a Basic Controller \nnest generate controller\n\n\nUse Route Parameters \nHandling Request Body / Payload \nResponse Status Codes \nHandling Update and Delete Requests \nImplement Pagination with Query Parameters \nCreating a Basic Service \nnest generate service {name}\n\n\nSend User-Friendly Error Messages \nEncompass Business-Domain in Modules\ncontrollers - Which you can think of as our API Routes, that we want this module to instantiate. \nexports - Here we can list providers within this current module that should be made available anywhere this module is imported \nimports - Just as we saw in the AppModule, the imports Array gives us the ability to list OTHER modules that THIS module requires. Any exported providers of these imported modules are now fully available here as well. \nproviders - Here we’re going to list our services that need to be instantiated by the Nest injector.  Any providers here will be available only within “THIS” module itself, unless added to the exports array we saw above.\n\n\nIntroduction to Data Transfer Objects \nGenerate a DTO class with the Nest CLI   \nnest g class coffees/dto/create-coffee.dto --no-spec\n\n\nValidate Input Data with Data Transfer Objects \nValidationPipe  \nInstall needed dependencies - npm i class-validator class-transformer\n\n\nHandling Malicious Request Data \nAuto-transform Payloads to DTO instances\n\n\n\n\n\n3. Add PostgreSQL with Type ORM\n\nPrerequisite: Install Docker \nRunning PostgreSQL \nHow to visualize your Postgres Database (GUI) \nhttps://www.pgadmin.org/\n\n\n\n\nIntroducing the Type ORM Module \nCreating a Type ORM Entity \nUsing Repository to Access Database \nCreate a Relation between two Entities \nRelations \nOne-to-one \nOne-to-many or Many-to-one relations \nMany-to-many relations\n\n\n\n\nRetrieve Entities with their Relations \nUsing Cascading Inserts and Updates \nAdding Pagination \nUse Transactions \nAdding Indexes to Entities \nSetting up Migrations\n\n4. Dependency Injection\n\nUnderstand Dependency Injection \nInjector \nContainer \nController \nService\n\n\nControl Nest JS Module Encapsulation \nDiving Into Custom Providers \nStrategy Pattern\n\n\nValue based Providers \nNon-class-based Provider Tokens \nClass Providers \nFactory Providers \nLeverage Async Providers \nCreate a Dynamic Module \nControl Providers Scope \nDiving Deeper Into Request-Scoped Providers\n\n5. Application Configuration\n\nIntroducing the Config Module \nCustom Environment File Paths \nSchema Validation \nUsing the Config Service \nCustom Configuration Files \nConfiguration Namespaces and Partial Registration \nAsynchronously Configure Dynamic Modules\n\n6. Other Building Blocks by Example\n\nIntroducing More Building Blocks \nUnderstanding Binding Techniques \nCatch Exceptions with Filters \nProtect Routes with Guards \nUsing Metadata to Build Generic Guards or Interceptors \nAdd Pointcuts with Interceptors \nHandling Timeouts with Interceptors \nCreating Custom Pipes \nAdd Request Logging with Middleware \nCreate Custom Param Decorators\n\n7. Generating Open API Specification\n\nIntroducing the Swagger Module \nEnabling CLI Plugin \nDecorating Model Properties \nAdding Example Responses \nUsing Tags to Group Resources\n\n8. Testing\n\nIntroduction to Jest \nGetting Started with Test Suites \nAdding Unit Tests \nDiving Into e2e Tests \nCreating our First e2e Test \nImplementing e2e Test Logic\n\n9. Add MongoDB with Mongoose\n\nRunning MongoDB \nIntroducing the Mongoose Module \nCreating a Mongoose Model \nUsing a Mongoose Model to Access MongoDB \nAdding Pagination \nUse Transactions \nAdding Indexes to Schemas\n\nReferences\n\nWho is using Nest in production?\nhttps://learn.nestjs.com/p/fundamentals\nhttps://github.com/juliandavidmr/awesome-nestjs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/trainings/git-for-beginners.html":{"url":"additional-documentation/trainings/git-for-beginners.html","title":"additional-page - Git for Beginners","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nGit Cheat Sheet – 50 Git Commands You Should Know\nGit Cheat Sheet\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
